{"version":3,"sources":["webpack:///app.js","webpack:///./src/app/ship-data.ts","webpack:///./src/app/scene.service.ts","webpack:///./src/app/simulator/ship-model3d.ts","webpack:///./src/app/inventory/inventory.component.ts","webpack:///./src/app/inventory/add-ship.component.ts","webpack:///./src/app/simulator/simulator.component.ts","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/ship.ts","webpack:///./src/app/util/GLTF2Loader.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.css?8c66","webpack:///./src/app/app.component.css","webpack:///./src/app/inventory/inventory.component.html","webpack:///./src/app/inventory/inventory.component.css?fb2e","webpack:///./src/app/inventory/inventory.component.css","webpack:///./src/app/inventory/ship-card.component.ts","webpack:///./src/app/inventory/ship-card.component.html","webpack:///./src/app/inventory/ship-card.component.css?5cac","webpack:///./src/app/inventory/ship-card.component.css","webpack:///./src/app/inventory/add-ship.component.html","webpack:///./src/app/inventory/add-ship.component.css?e815","webpack:///./src/app/inventory/add-ship.component.css","webpack:///./src/app/util/ObjectControls.ts","webpack:///./src/app/util/Pointer.ts","webpack:///./src/app/util/TextLabel.ts","webpack:///./src/app/simulator/simulator.component.html","webpack:///./src/app/ship.service.ts","webpack:///./src/app/simulator/simulator.component.css?5796","webpack:///./src/app/simulator/simulator.component.css","webpack:///./src/app/app-routing.module.ts","webpack:///./node_modules/hammerjs/hammer.js"],"names":["webpackJsonp","110","module","exports","__webpack_require__","Object","defineProperty","value","ship_1","ShipData","this","origin","Ship","amount","instances","prototype","add","instance","push","ShipDataInstance","152","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__metadata","k","v","metadata","core_1","router_1","ship_model3d_1","SceneService","route","shipModels3d","Map","addShipModelFor","modelPath","shipData","has","type","model","ShipModel3D","set","load","loadingProgress","progress","console","log","size","step","processed","forEach","isLoaded","Injectable","ActivatedRoute","248","three_1","THREE","GLTF2Loader_1","ship_data_1","data","first","objects","init","stepSize","currentZ","currentX","children","splice","sdi","position","getNextPosition","undefined","loader","GLTF2Loader","scope","scene","name","addShipsToScene","addShipTo","scale","id","material","MeshStandardMaterial","color","metalness","roughness","transparent","opacity","side","DoubleSide","getObjectByName","object","x","y","z","rotation","Math","PI","geometry","computeBoundingSphere","userData","obj","clone","mesh","Mesh","Vector3","249","flex_layout_1","Observable_1","ship_service_1","InventoryComponent","shipService","observableMedia","router","ships","ngOnInit","_this","getShips","then","isActive","cols","Observable","of","asObservable","subscribe","change","mqAlias","filterSize","array","filter","addS","navigate","getNavigationExtras","addM","addL","Component","selector","template","styles","ShipService","ObservableMedia","Router","250","AddShipComponent","models","typeExistsError","getModels","sort","a","b","params","onShipTypeChange","goBack","addShip","newShip","selectedModel","251","material_1","scene_service_1","ObjectControls_1","SimulatorComponent","sceneService","loaded","screenWidth","window","innerWidth","screenHeight","innerHeight","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","gridScene","gridCamera","bgScene","bgCam","Camera","tanFOV","tan","fov","windowHeight","ngAfterViewInit","onerror","setPixelRatio","devicePixelRatio","setSize","domElement","style","setClearColor","configureCamera","configureLight","directionalLight","AmbientLight","Color","getHex","addBackground","addGrid","configureControls","start","texture","ImageUtils","loadTexture","bg","PlaneGeometry","MeshBasicMaterial","map","depthTest","depthWrite","wrapS","RepeatWrapping","wrapT","repeat","MeshLambertMaterial","grid","DirectionalLight","lookAt","controls","ObjectControls","container","fixed","move","cursor","mouseup","onclick","activate","render","requestAnimationFrame","update","autoClear","clear","updateAfter","res","nativeElement","appendChild","o","setTimeout","showInfo","selected","parent","shipInfoBar","toggle","onCloseShipInfo","hideSelected","saveImage","imgData","toDataURL","document","createElement","href","replace","download","click","toggleFullscreen","elem","documentElement","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","onResize","event","aspect","atan","updateProjectionMatrix","ViewChild","MdSidenav","HostListener","Function","697","platform_browser_dynamic_1","app_module_1","platformBrowserDynamic","bootstrapModule","AppModule","698","animations_1","platform_browser_1","http_1","forms_1","common_1","app_component_1","inventory_component_1","ship_card_component_1","add_ship_component_1","simulator_component_1","app_routing_module_1","NgModule","imports","BrowserModule","MaterialModule","FormsModule","HttpModule","BrowserAnimationsModule","FlexLayoutModule","AppRoutingModule","declarations","AppComponent","ShipCardComponent","providers","provide","LocationStrategy","useClass","HashLocationStrategy","bootstrap","699","inventory","simulator","700","701","EXTENSIONS","KHR_BINARY_GLTF","KHR_LIGHTS","KHR_MATERIALS_COMMON","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","KHR_TECHNIQUE_WEBGL","BINARY_EXTENSION_HEADER_MAGIC","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","JSON","BIN","manager","DefaultLoadingManager","url","onLoad","onProgress","onError","path","Loader","extractUrlBase","FileLoader","setResponseType","parse","setCrossOrigin","crossOrigin","setPath","callback","content","extensions","Utility","convertUint8ArrayToString","Uint8Array","GLTFBinaryExtension","json","extensionsUsed","indexOf","GLTFLightsExtension","GLTFMaterialsCommonExtension","GLTFMaterialsPbrSpecularGlossinessExtension","GLTFTechniqueWebglExtension","time","GLTFParser","scenes","cameras","animations","timeEnd","GLTFRegistry","get","remove","removeAll","GLTFShader","targetNode","allNodes","boundUniforms","uniforms","uniformId","uniform","semantic","sourceNodeRef","node","sourceNode","_m4","Matrix4","boundUniform","m4","multiplyMatrices","matrixWorldInverse","matrixWorld","m3","getNormalMatrix","copy","projectionMatrix","m4v","mi","getInverse","multiply","skeleton","bones","boneInverses","bindMatrix","warn","lights","extension","lightId","lightNode","light","fromArray","PointLight","SpotLight","constantAttenuation","intensity","linearAttenuation","distance","quadraticAttenuation","decay","fallOffAngle","angle","fallOffExponent","getMaterialType","MeshPhongMaterial","extendParams","materialParams","dependencies","khrMaterial","keys","materialValues","diffuseFactor","diffuseTexture","textures","index","specularFactor","specular","specularTexture","specularMap","shininessFactor","shininess","body","headerView","DataView","header","magic","slice","version","getUint32","Error","chunkView","chunkIndex","byteLength","chunkLength","chunkType","contentArray","byteOffset","techniques","programs","shaders","DeferredShaderMaterial","technique","program","fragmentShader","vertexShader","replaceTHREEShaderAttributes","pname","shaderParam","parameters","ptype","WEBGL_TYPE","pcount","count","values","uvalue","usemantic","unode","WEBGL_CONSTANTS","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","FLOAT_MAT3","FLOAT_MAT4","Array","SAMPLER_2D","states","enables","enable","functions","enableCullFace","enableDepthTest","enableBlend","il","STATES_ENABLES","cullFace","WEBGL_SIDES","FrontSide","depthFunc","WEBGL_DEPTH_FUNCS","LessDepth","depthMask","blending","CustomBlending","NoBlending","blendEquationSeparate","blendEquation","WEBGL_BLEND_EQUATIONS","blendEquationAlpha","AddEquation","blendFuncSeparate","blendSrc","WEBGL_BLEND_FUNCS","blendDst","blendSrcAlpha","blendDstAlpha","OneFactor","ZeroFactor","ShaderMaterial","pbrSpecularGlossiness","shader","ShaderLib","UniformsUtils","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","roughnessMap","metalnessMap","setHex","glossiness","glossinessMap","defines","STANDARD","isArray","emissive","glossinessFactor","specularGlossinessTexture","createMaterial","fog","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","Vector2","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","refreshUniforms","group","diffuse","multiplyScalar","uvScaleMap","isWebGLRenderTarget","offset","offsetRepeat","flipEnvMap","isCubeTexture","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","LINEAR","REPEAT","TRIANGLES","LINES","UNSIGNED_BYTE","UNSIGNED_SHORT","VERTEX_SHADER","FRAGMENT_SHADER","5126","Number","35675","Matrix3","35676","35664","35665","35666","Vector4","35678","Texture","WEBGL_COMPONENT_TYPES","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipMapNearestFilter","9985","LinearMipMapNearestFilter","9986","NearestMipMapLinearFilter","9987","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","WEBGL_TEXTURE_FORMATS","6406","AlphaFormat","6407","RGBFormat","6408","RGBAFormat","6409","LuminanceFormat","6410","LuminanceAlphaFormat","WEBGL_TEXTURE_DATATYPES","UnsignedByteType","32819","UnsignedShort4444Type","32820","UnsignedShort5551Type","33635","UnsignedShort565Type","1028","BackSide","1029","512","NeverDepth","513","514","EqualDepth","515","LessEqualDepth","516","GreaterEqualDepth","517","NotEqualDepth","518","519","AlwaysDepth","32774","32778","SubtractEquation","32779","ReverseSubtractEquation","0","1","768","SrcColorFactor","769","OneMinusSrcColorFactor","770","SrcAlphaFactor","771","OneMinusSrcAlphaFactor","772","DstAlphaFactor","773","OneMinusDstAlphaFactor","774","DstColorFactor","775","OneMinusDstColorFactor","776","SrcAlphaSaturateFactor","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","PATH_PROPERTIES","weights","INTERPOLATION","InterpolateLinear","STEP","InterpolateDiscrete","2884","2929","3042","3089","32823","32926","ALPHA_MODES","OPAQUE","MASK","BLEND","each","thisObj","Promise","resolve","results","fns","toString","call","idx","bind","hasOwnProperty","all","resolveURL","test","s","String","fromCharCode","shaderText","attributes","attributeId","param","atype","shaderParams","shaderAttributes","regEx","RegExp","createDefaultMaterial","isDeferredShaderMaterial","create","originalUniform","needsUpdate","RawShaderMaterial","options","cache","withDependencies","_dependencies","dependency","fnName","charAt","toUpperCase","cached","fn","loadShaders","bufferView","bufferViews","uri","loadBuffers","buffers","buffer","loadBufferViews","arraybuffer","loadAccessors","accessors","accessor","itemSize","TypedArray","componentType","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ib","InterleavedBuffer","InterleavedBufferAttribute","BufferAttribute","loadTextures","source","urlCreator","images","sourceUri","blob","Blob","mimeType","URL","createObjectURL","textureLoader","Handlers","TextureLoader","_texture","revokeObjectURL","flipY","format","internalFormat","samplers","sampler","magFilter","minFilter","loadMaterials","materials","materialType","materialExtensions","pbrMetallicRoughness","metallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","textureIndex","doubleSided","alphaMode","normalTexture","occlusionTexture","emissiveFactor","emissiveTexture","_material","loadMeshes","meshes","Group","extras","primitives","meshNode","primitive","mode","BufferGeometry","attributeEntry","bufferAttribute","addAttribute","indices","setIndex","uv2","uv","castShadow","targets","morphAttributes","normal","morphTargets","positionAttribute","normalAttribute","attributeName","POSITION","j","jl","NORMAL","morphNormals","TANGENT","updateMorphTargets","morphTargetInfluences","LineSegments","Line","vertexColors","VertexColors","loadCameras","_camera","perspective","yfov","aspectRatio","xfov","radToDeg","znear","zfar","orthographic","OrthographicCamera","loadSkins","skins","skin","bindShapeMatrix","joints","inverseBindMatrices","loadAnimations","animation","animationId","tracks","channelId","channels","channel","input","output","inputAccessor","outputAccessor","nodes","updateMatrix","matrixAutoUpdate","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","uuid","interpolation","targetNames","traverse","isMesh","AnimationUtils","arraySlice","AnimationClip","loadNodes","from","isBone","matrix","_node","Bone","Object3D","applyMatrix","translation","quaternion","__nodes","nodeId","meshId","childrenId","child","originalMaterial","originalGeometry","originalUserData","originalName","skinEntry","skinning","SkinnedMesh","l","jointId","jointNode","m","mat","Skeleton","buildBoneGraph","parentJson","parentObject","property","bone","boneJson","loadScenes","buildNodeHierachy","_scene","isRawShaderMaterial","gltfShader","onBeforeRender","702","703","704","result","705","706","707","708","709","delete","deleteShip","ship","onShipAmountChange","Input","710","711","712","713","714","715","716","Pointer_1","htmlContainer","projectionMap","displacing","_DisplaceFocused","focused","focusedpart","_DisplaceMouseOvered","mouseovered","mouseoveredpart","_mouse","enabled","item","_intersects","previous","moveScene","lx","lz","moveMax","pointer","Pointer","mouseover","mouseout","getMousePos","offsetX","layerX","offsetY","layerY","rect","getBoundingClientRect","width","height","onContainerMouseDown","raycaster","_rayGet","intersectObjects","setFocus","ctrlKey","setFocusNull","onContainerMouseUp","preventDefault","round","show","onDocumentMouseWheel","stopPropagation","delta","deltaMode","deltaY","zoomSpeed","zoom","addEventListener","deactivate","removeEventListener","onContainerMouseMove","returnPrevious","_selGetPos","select","_setSelectNull","vector","unproject","Raycaster","sub","normalize","intersectsMap","intersectObject","pos","point","err","dx","dz","hide","717","TextLabel_1","title","TextLabel","visible","Geometry","vertices","LineBasicMaterial","linewidth","line","setLabel","htmlElement","display","718","getElementById","label","innerHTML","originalWidth","coords2d","_get2DCoords","left","top","fontSize","clientWidth","project","widthHalf","heightHalf","719","72","modelsArray","maxcrew","cargo","_i","_a","getImage","getModel3d","found","queryParams","shipsArray","split","instancesArray","positions","shipsParam","queryParamsHandling","getShipsSlowly","getShip","find","720","721","722","routes","redirectTo","pathMatch","component","RouterModule","forRoot","723","__WEBPACK_AMD_DEFINE_RESULT__","exportName","setTimeoutContext","timeout","context","bindFn","invokeArrayArg","arg","iterator","deprecate","method","message","deprecationMessage","e","stack","apply","inherit","base","properties","childP","baseP","constructor","_super","assign","boolOrFn","val","args","TYPE_FUNCTION","ifUndefined","val1","val2","addEventListeners","types","handler","splitStr","removeEventListeners","hasParent","parentNode","inStr","str","trim","inArray","src","findByKey","toArray","uniqueArray","prefixed","prefix","prop","camelProp","VENDOR_PREFIXES","uniqueId","_uniqueId","getWindowForElement","element","doc","ownerDocument","defaultView","parentWindow","self","inputTarget","domHandler","ev","createInputInstance","inputClass","SUPPORT_POINTER_EVENTS","PointerEventInput","SUPPORT_ONLY_TOUCH","TouchInput","SUPPORT_TOUCH","TouchMouseInput","MouseInput","inputHandler","eventType","pointersLen","pointers","changedPointersLen","changedPointers","isFirst","INPUT_START","isFinal","INPUT_END","INPUT_CANCEL","session","computeInputData","emit","recognize","prevInput","pointersLength","firstInput","simpleCloneInputData","firstMultiple","offsetCenter","center","getCenter","timeStamp","now","deltaTime","getAngle","getDistance","computeDeltaXY","offsetDirection","getDirection","deltaX","overallVelocity","getVelocity","overallVelocityX","overallVelocityY","abs","getScale","getRotation","maxPointers","computeIntervalInputData","srcEvent","offsetDelta","prevDelta","velocity","velocityX","velocityY","direction","last","lastInterval","COMPUTE_INTERVAL","clientX","clientY","DIRECTION_NONE","DIRECTION_LEFT","DIRECTION_RIGHT","DIRECTION_UP","DIRECTION_DOWN","p1","p2","props","PROPS_XY","sqrt","atan2","end","PROPS_CLIENT_XY","evEl","MOUSE_ELEMENT_EVENTS","evWin","MOUSE_WINDOW_EVENTS","pressed","POINTER_ELEMENT_EVENTS","POINTER_WINDOW_EVENTS","store","pointerEvents","SingleTouchInput","evTarget","SINGLE_TOUCH_TARGET_EVENTS","SINGLE_TOUCH_WINDOW_EVENTS","started","normalizeSingleTouches","touches","changed","changedTouches","concat","TOUCH_TARGET_EVENTS","targetIds","getTouches","allTouches","INPUT_MOVE","identifier","targetTouches","changedTargetTouches","touch","mouse","primaryTouch","lastTouches","recordTouches","eventData","setLastTouch","lastTouch","lts","removeLastTouch","DEDUP_TIMEOUT","isSyntheticEvent","t","dy","DEDUP_DISTANCE","TouchAction","cleanTouchActions","actions","TOUCH_ACTION_NONE","hasPanX","TOUCH_ACTION_PAN_X","hasPanY","TOUCH_ACTION_PAN_Y","TOUCH_ACTION_MANIPULATION","TOUCH_ACTION_AUTO","Recognizer","defaults","state","STATE_POSSIBLE","simultaneous","requireFail","stateStr","STATE_CANCELLED","STATE_ENDED","STATE_CHANGED","STATE_BEGAN","directionStr","getRecognizerByNameIfManager","otherRecognizer","recognizer","AttrRecognizer","PanRecognizer","pX","pY","PinchRecognizer","PressRecognizer","_timer","_input","RotateRecognizer","SwipeRecognizer","TapRecognizer","pTime","pCenter","Hammer","recognizers","preset","Manager","handlers","oldCssProps","touchAction","toggleCssProps","recognizeWith","requireFailure","cssProps","triggerDomEvent","gestureEvent","createEvent","initEvent","gesture","dispatchEvent","TEST_ELEMENT","Date","TypeError","nextKey","extend","dest","merge","MOBILE_REGEX","navigator","userAgent","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","DIRECTION_ALL","destroy","MOUSE_INPUT_MAP","mousedown","mousemove","button","which","pointerType","POINTER_INPUT_MAP","pointerdown","pointermove","pointerup","pointercancel","pointerout","IE10_POINTER_TYPE_ENUM","2","3","4","5","MSPointerEvent","PointerEvent","removePointer","eventTypeNormalized","toLowerCase","isTouch","storeIndex","pointerId","SINGLE_TOUCH_INPUT_MAP","touchstart","touchmove","touchend","touchcancel","TOUCH_INPUT_MAP","inputEvent","inputData","isMouse","sourceCapabilities","firesTouchEvents","PREFIXED_TOUCH_ACTION","NATIVE_TOUCH_ACTION","TOUCH_ACTION_MAP","touchMap","cssSupports","CSS","supports","compute","getTouchAction","preventDefaults","prevented","hasNone","isTapPointer","isTapMovement","isTapTouchTime","preventSrc","STATE_RECOGNIZED","dropRecognizeWith","dropRequireFailure","hasRequireFailures","canRecognizeWith","additionalEvent","tryEmit","canEmit","inputDataClone","reset","process","attrTest","optionPointers","isRecognized","isValid","threshold","directionTest","hasMoved","inOut","validPointers","validMovement","validTime","clearTimeout","taps","interval","posThreshold","validTouchTime","failTimeout","validInterval","validMultiTap","tapCount","VERSION","domEvents","userSelect","touchSelect","touchCallout","contentZooming","userDrag","tapHighlightColor","stop","force","stopped","curRecognizer","existing","on","events","off","STATE_FAILED","Tap","Pan","Swipe","Pinch","Rotate","Press"],"mappings":"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","file":"app.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 110:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar ship_1 = __webpack_require__(700);\r\nvar ShipData = (function () {\r\n    function ShipData() {\r\n        this.origin = new ship_1.Ship();\r\n        this.amount = 0;\r\n        this.instances = [];\r\n    }\r\n    ShipData.prototype.add = function (instance) {\r\n        this.instances.push(instance);\r\n    };\r\n    return ShipData;\r\n}());\r\nexports.ShipData = ShipData;\r\nvar ShipDataInstance = (function () {\r\n    function ShipDataInstance() {\r\n    }\r\n    return ShipDataInstance;\r\n}());\r\nexports.ShipDataInstance = ShipDataInstance;\r\n\n\n/***/ }),\n\n/***/ 152:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar router_1 = __webpack_require__(43);\r\nvar ship_model3d_1 = __webpack_require__(248);\r\nvar SceneService = (function () {\r\n    function SceneService(route) {\r\n        this.route = route;\r\n        this.shipModels3d = new Map();\r\n    }\r\n    SceneService.prototype.addShipModelFor = function (modelPath, shipData) {\r\n        if (!this.shipModels3d.has(shipData.origin.type)) {\r\n            var model = new ship_model3d_1.ShipModel3D(shipData);\r\n            this.shipModels3d.set(shipData.origin.type, model);\r\n            model.load(modelPath);\r\n        }\r\n    };\r\n    SceneService.prototype.loadingProgress = function () {\r\n        var progress = 100;\r\n        console.log(this.shipModels3d.size);\r\n        if (this.shipModels3d.size == 0) {\r\n            return progress;\r\n        }\r\n        var step = progress / this.shipModels3d.size;\r\n        var processed = 0;\r\n        this.shipModels3d.forEach(function (model, type) {\r\n            if (!model.isLoaded()) {\r\n                progress -= step;\r\n            }\r\n            else {\r\n                processed++;\r\n            }\r\n        });\r\n        if (processed == this.shipModels3d.size) {\r\n            return 100;\r\n        }\r\n        return progress;\r\n    };\r\n    SceneService = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [router_1.ActivatedRoute])\r\n    ], SceneService);\r\n    return SceneService;\r\n}());\r\nexports.SceneService = SceneService;\r\n\n\n/***/ }),\n\n/***/ 248:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar three_1 = __webpack_require__(44);\r\nvar THREE = __webpack_require__(44);\r\nvar GLTF2Loader_1 = __webpack_require__(701);\r\n//import { CTMLoader } from './util/CTMLoader';\r\nvar ship_data_1 = __webpack_require__(110);\r\nvar MAX_POS = 30;\r\nvar ShipModel3D = (function () {\r\n    function ShipModel3D(data) {\r\n        this.data = data;\r\n        this.first = true;\r\n        this.objects = [];\r\n    }\r\n    ShipModel3D.init = function () {\r\n        ShipModel3D.stepSize = 10;\r\n        ShipModel3D.currentZ = 30;\r\n        ShipModel3D.currentX = 0;\r\n    };\r\n    ShipModel3D.prototype.init = function () {\r\n        if (this.model.children.length > 3) {\r\n            this.model.children.splice(3, this.model.children.length - 3);\r\n        }\r\n        if (this.data.instances.length !== this.data.amount) {\r\n            for (var i = this.data.instances.length; i < this.data.amount; i++) {\r\n                var sdi = new ship_data_1.ShipDataInstance();\r\n                var position = ShipModel3D.getNextPosition();\r\n                sdi.position = position;\r\n                this.data.add(sdi);\r\n            }\r\n        }\r\n    };\r\n    ShipModel3D.prototype.isLoaded = function () {\r\n        return this.model !== undefined;\r\n    };\r\n    ShipModel3D.prototype.load = function (modelPath) {\r\n        var loader = new GLTF2Loader_1.GLTF2Loader();\r\n        var scope = this;\r\n        loader.load(modelPath, function (data) {\r\n            console.log(data.scene);\r\n            scope.model = data.scene;\r\n            scope.model.children[0].name = scope.data.origin.type;\r\n        });\r\n        /**var loader = new CTMLoader();\r\n        var textureLoader = new TextureLoader();\r\n        var scope = this;\r\n\n        loader.load(\"ships/hornet-lp1.ctm\", function (geometry) {\r\n            var material = new MeshLambertMaterial({ color: 0xcccccc, side: THREE.DoubleSide, combine: THREE.MixOperation, reflectivity: 0.1 });\r\n            var model = scope.callbackModel(geometry, 70, material, 0, 0, 0, 0, 0);\r\n            scope.scene.add(model);\r\n        }, { useWorker: false });*/\r\n    };\r\n    ShipModel3D.prototype.addShipsToScene = function (scene) {\r\n        for (var i = 0; i < this.data.amount; i++) {\r\n            var instance = this.data.instances[i];\r\n            this.addShipTo(scene, i, instance.position, this.data.origin.scale);\r\n        }\r\n    };\r\n    ShipModel3D.prototype.addShipTo = function (scene, id, position, scale) {\r\n        var scope = this;\r\n        /**var material = new THREE.MeshPhongMaterial({\r\n            color: 0xaa0000, side: THREE.DoubleSide\r\n        });*/\r\n        // 0x22dd22 green\r\n        // 0x00ffff cyan\r\n        // 0xdddd22 gold\r\n        // 0xdd2222 red\r\n        var material = new THREE.MeshStandardMaterial({\r\n            color: 0x00ffff,\r\n            metalness: 1.0,\r\n            roughness: 0.7,\r\n            transparent: true,\r\n            opacity: 0.4,\r\n            side: THREE.DoubleSide\r\n        });\r\n        var i = scene.getObjectByName(this.data.origin.type);\r\n        if (i == undefined) {\r\n            var object = scope.model.children[0];\r\n            object.scale.set(scale, scale, scale);\r\n            object.position.set(position.x, position.y, position.z);\r\n            object.rotation.z = Math.PI;\r\n            object.children[0].geometry.computeBoundingSphere();\r\n            if (this.data.origin.size == 'L') {\r\n                material.opacity = 0.6;\r\n            }\r\n            object.children[0].material = material;\r\n            object.userData.id = id;\r\n            object.userData.shipData = this.data;\r\n            if (object.children.length > 0) {\r\n                //object.children.splice(1,object.children.length-1);\r\n            }\r\n            this.objects.push(object.children[0]);\r\n            scene.add(scope.model);\r\n        }\r\n        else {\r\n            var obj = scope.model.children[0].clone(false);\r\n            var mesh = new THREE.Mesh(scope.model.children[0].children[0].geometry, material);\r\n            obj.position.set(position.x, position.y, position.z);\r\n            obj.scale.set(scale, scale, scale);\r\n            obj.add(mesh);\r\n            this.objects.push(mesh);\r\n            obj.userData.id = id;\r\n            obj.userData.shipData = this.data;\r\n            scope.model.add(obj);\r\n        }\r\n        console.log(scene);\r\n    };\r\n    ShipModel3D.getNextPosition = function () {\r\n        var x = ShipModel3D.currentX;\r\n        var z = ShipModel3D.currentZ;\r\n        ShipModel3D.currentX = ShipModel3D.currentX + ShipModel3D.stepSize;\r\n        if (ShipModel3D.currentX + ShipModel3D.currentZ > MAX_POS) {\r\n            ShipModel3D.currentX = -ShipModel3D.currentX;\r\n            ShipModel3D.currentZ -= ShipModel3D.stepSize;\r\n        }\r\n        return new three_1.Vector3(-x, 1, z);\r\n    };\r\n    ShipModel3D.stepSize = 10;\r\n    ShipModel3D.currentZ = 30;\r\n    ShipModel3D.currentX = 0;\r\n    return ShipModel3D;\r\n}());\r\nexports.ShipModel3D = ShipModel3D;\r\n\n\n/***/ }),\n\n/***/ 249:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar flex_layout_1 = __webpack_require__(144);\r\nvar Observable_1 = __webpack_require__(0);\r\nvar router_1 = __webpack_require__(43);\r\nvar ship_service_1 = __webpack_require__(72);\r\nvar InventoryComponent = (function () {\r\n    function InventoryComponent(shipService, observableMedia, route, router) {\r\n        this.shipService = shipService;\r\n        this.observableMedia = observableMedia;\r\n        this.route = route;\r\n        this.router = router;\r\n        this.ships = [];\r\n    }\r\n    InventoryComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.shipService.getShips().then(function (ships) { return _this.ships = ships; });\r\n        // set cols\r\n        if (this.observableMedia.isActive(\"xs\")) {\r\n            this.cols = Observable_1.Observable.of(2);\r\n        }\r\n        else if (this.observableMedia.isActive(\"sm\")) {\r\n            this.cols = Observable_1.Observable.of(3);\r\n        }\r\n        else if (this.observableMedia.isActive(\"md\")) {\r\n            this.cols = Observable_1.Observable.of(5);\r\n        }\r\n        else if (this.observableMedia.isActive(\"lg\")) {\r\n            this.cols = Observable_1.Observable.of(6);\r\n        }\r\n        else if (this.observableMedia.isActive(\"x1\")) {\r\n            this.cols = Observable_1.Observable.of(7);\r\n        }\r\n        // observe changes\r\n        this.observableMedia.asObservable()\r\n            .subscribe(function (change) {\r\n            switch (change.mqAlias) {\r\n                case \"xs\":\r\n                    return _this.cols = Observable_1.Observable.of(2);\r\n                case \"sm\":\r\n                    return _this.cols = Observable_1.Observable.of(3);\r\n                case \"md\":\r\n                    return _this.cols = Observable_1.Observable.of(5);\r\n                case \"lg\":\r\n                    return _this.cols = Observable_1.Observable.of(6);\r\n                case \"xl\":\r\n                    return _this.cols = Observable_1.Observable.of(7);\r\n            }\r\n        });\r\n    };\r\n    InventoryComponent.prototype.filterSize = function (array, size) {\r\n        return array.filter(function (x) { return x.origin.size == size; });\r\n    };\r\n    InventoryComponent.prototype.addS = function () {\r\n        this.router.navigate([\"inventory/add-ship/S\"], this.shipService.getNavigationExtras());\r\n    };\r\n    InventoryComponent.prototype.addM = function () {\r\n        this.router.navigate([\"inventory/add-ship/M\"], this.shipService.getNavigationExtras());\r\n    };\r\n    InventoryComponent.prototype.addL = function () {\r\n        this.router.navigate([\"inventory/add-ship/L\"], this.shipService.getNavigationExtras());\r\n    };\r\n    InventoryComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'inventory',\r\n            template: __webpack_require__(706),\r\n            styles: [__webpack_require__(707)]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ship_service_1.ShipService, flex_layout_1.ObservableMedia, router_1.ActivatedRoute, router_1.Router])\r\n    ], InventoryComponent);\r\n    return InventoryComponent;\r\n}());\r\nexports.InventoryComponent = InventoryComponent;\r\n\n\n/***/ }),\n\n/***/ 250:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar router_1 = __webpack_require__(43);\r\nvar ship_data_1 = __webpack_require__(110);\r\nvar ship_service_1 = __webpack_require__(72);\r\nvar AddShipComponent = (function () {\r\n    function AddShipComponent(shipService, router, route) {\r\n        this.shipService = shipService;\r\n        this.router = router;\r\n        this.route = route;\r\n        this.models = [];\r\n        this.size = \"S\";\r\n        this.typeExistsError = false;\r\n    }\r\n    AddShipComponent.prototype.ngOnInit = function () {\r\n        var _this = this;\r\n        this.shipService.getModels().then(function (models) { return _this.models = models.sort(function (a, b) { return a.type > b.type ? 1 : -1; }); });\r\n        this.route.params\r\n            .subscribe(function (params) { return _this.size = params['size']; });\r\n    };\r\n    AddShipComponent.prototype.onShipTypeChange = function () {\r\n        this.typeExistsError = false;\r\n    };\r\n    AddShipComponent.prototype.goBack = function () {\r\n        this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\r\n    };\r\n    AddShipComponent.prototype.addShip = function () {\r\n        var newShip = new ship_data_1.ShipData();\r\n        newShip.origin = this.selectedModel;\r\n        newShip.amount = 1;\r\n        var added = this.shipService.addShip(newShip);\r\n        if (added) {\r\n            this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\r\n        }\r\n        else {\r\n            this.typeExistsError = true;\r\n        }\r\n    };\r\n    AddShipComponent.prototype.filterSize = function (array) {\r\n        var _this = this;\r\n        return array.filter(function (x) { return x.size == _this.size; });\r\n    };\r\n    AddShipComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'add-ship',\r\n            template: __webpack_require__(713),\r\n            styles: [__webpack_require__(714)]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ship_service_1.ShipService, router_1.Router, router_1.ActivatedRoute])\r\n    ], AddShipComponent);\r\n    return AddShipComponent;\r\n}());\r\nexports.AddShipComponent = AddShipComponent;\r\n\n\n/***/ }),\n\n/***/ 251:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar material_1 = __webpack_require__(141);\r\nvar three_1 = __webpack_require__(44);\r\nvar THREE = __webpack_require__(44);\r\nvar router_1 = __webpack_require__(43);\r\nvar ship_model3d_1 = __webpack_require__(248);\r\nvar scene_service_1 = __webpack_require__(152);\r\nvar ship_service_1 = __webpack_require__(72);\r\nvar ObjectControls_1 = __webpack_require__(716);\r\nvar SimulatorComponent = (function () {\r\n    function SimulatorComponent(sceneService, shipService, router) {\r\n        this.sceneService = sceneService;\r\n        this.shipService = shipService;\r\n        this.router = router;\r\n        this.loadingProgress = 0;\r\n        this.loaded = false;\r\n        this.screenWidth = window.innerWidth - 20;\r\n        this.screenHeight = window.innerHeight - 85;\r\n        this.scene = new three_1.Scene();\r\n        this.camera = new three_1.PerspectiveCamera(60, this.screenWidth / this.screenHeight, 10, 500);\r\n        this.renderer = new three_1.WebGLRenderer({ antialias: true });\r\n        this.gridScene = new three_1.Scene();\r\n        this.gridCamera = new three_1.PerspectiveCamera(60, this.screenWidth / this.screenHeight, 0.1, 300);\r\n        this.bgScene = new THREE.Scene();\r\n        this.bgCam = new THREE.Camera();\r\n        this.objects = [];\r\n        // remember these initial values\r\n        this.tanFOV = Math.tan(((Math.PI / 180) * this.camera.fov / 2));\r\n        this.windowHeight = window.innerHeight;\r\n    }\r\n    SimulatorComponent.prototype.ngAfterViewInit = function () {\r\n        window.onerror = function () { debugger; }; // DEBUG\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        this.renderer.setSize(this.screenWidth, this.screenHeight);\r\n        this.renderer.domElement.style.position = \"relative\";\r\n        this.renderer.setClearColor(0xEEEEEE);\r\n        this.configureCamera();\r\n        this.configureLight();\r\n        this.scene.add(this.directionalLight);\r\n        this.scene.add(new three_1.AmbientLight(new three_1.Color(0.7, 0.7, 0.7).getHex()));\r\n        this.gridScene.add(new three_1.AmbientLight(new three_1.Color(1.0, 1.0, 1.0).getHex()));\r\n        this.addBackground();\r\n        this.addGrid();\r\n        this.configureControls();\r\n        this.start();\r\n    };\r\n    SimulatorComponent.prototype.addBackground = function () {\r\n        var texture = THREE.ImageUtils.loadTexture(\"assets/images/background.png\");\r\n        var bg = new THREE.Mesh(new THREE.PlaneGeometry(2, 2, 0), new THREE.MeshBasicMaterial({ map: texture }));\r\n        bg.material.depthTest = false;\r\n        bg.material.depthWrite = false;\r\n        this.bgScene.add(this.bgCam);\r\n        this.bgScene.add(bg);\r\n    };\r\n    SimulatorComponent.prototype.addGrid = function () {\r\n        var texture, material;\r\n        texture = THREE.ImageUtils.loadTexture(\"assets/images/grid.png\");\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.RepeatWrapping;\r\n        texture.repeat.set(30, 30);\r\n        material = new THREE.MeshLambertMaterial({ map: texture, transparent: true, opacity: 1.0 });\r\n        this.grid = new THREE.Mesh(new THREE.PlaneGeometry(180, 120), material);\r\n        this.grid.material.side = THREE.DoubleSide;\r\n        this.grid.rotation.x = Math.PI / 2;\r\n        this.grid.position.y = -1;\r\n        this.grid.position.z = 0;\r\n        this.gridScene.add(this.grid);\r\n    };\r\n    SimulatorComponent.prototype.configureLight = function () {\r\n        this.directionalLight = new three_1.DirectionalLight(0xffffff);\r\n        this.directionalLight.position.set(0, 1000, 0);\r\n        this.directionalLight.lookAt(new three_1.Vector3(0, 0, 0));\r\n    };\r\n    SimulatorComponent.prototype.configureCamera = function () {\r\n        this.camera.position.x = 0;\r\n        this.camera.position.y = 110;\r\n        this.camera.position.z = -80;\r\n        this.camera.lookAt(new three_1.Vector3(0, 0, 0));\r\n        this.gridCamera.position.x = 0;\r\n        this.gridCamera.position.y = 110;\r\n        this.gridCamera.position.z = -80;\r\n        this.gridCamera.lookAt(new three_1.Vector3(0, 0, 0));\r\n    };\r\n    SimulatorComponent.prototype.configureControls = function () {\r\n        this.controls = new ObjectControls_1.ObjectControls(this.camera, this.renderer.domElement, this.container, this.objects, this.grid, this.scene);\r\n        this.controls.fixed.y = 1;\r\n        var scope = this;\r\n        this.controls.move = function () {\r\n            this.container.style.cursor = 'move';\r\n        };\r\n        this.controls.mouseup = function () {\r\n            this.container.style.cursor = 'auto';\r\n            scope.router.navigate([\"simulator\"], scope.shipService.getNavigationExtras());\r\n        };\r\n        this.controls.onclick = function () {\r\n        };\r\n        this.controls.activate();\r\n    };\r\n    SimulatorComponent.prototype.render = function () {\r\n        var _this = this;\r\n        requestAnimationFrame(function () { return _this.render(); });\r\n        this.controls.update();\r\n        this.renderer.autoClear = false;\r\n        this.renderer.clear();\r\n        this.renderer.render(this.bgScene, this.bgCam);\r\n        this.renderer.render(this.gridScene, this.gridCamera);\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.controls.updateAfter(this.screenWidth, this.screenHeight);\r\n    };\r\n    SimulatorComponent.prototype.start = function () {\r\n        var _this = this;\r\n        var data = this.shipService.getShips(); // the list needs to be upto date\r\n        data.then(function (res) {\r\n            _this.loadingProgress = _this.sceneService.loadingProgress();\r\n            console.log(_this.loadingProgress);\r\n            var scope = _this;\r\n            if (_this.loadingProgress == 100) {\r\n                _this.loaded = true;\r\n                _this.container.nativeElement.appendChild(_this.renderer.domElement);\r\n                ship_model3d_1.ShipModel3D.init();\r\n                _this.sceneService.shipModels3d.forEach(function (model, type) {\r\n                    model.init();\r\n                    model.addShipsToScene(scope.scene);\r\n                    model.objects.forEach(function (o) { return scope.objects.push(o); });\r\n                });\r\n                _this.render();\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    scope.start();\r\n                }, 500);\r\n            }\r\n        });\r\n    };\r\n    SimulatorComponent.prototype.showInfo = function () {\r\n        this.shipData = this.controls.selected.parent.userData.shipData.origin;\r\n        this.shipInfoBar.toggle();\r\n    };\r\n    SimulatorComponent.prototype.onCloseShipInfo = function () {\r\n        this.controls.hideSelected();\r\n    };\r\n    SimulatorComponent.prototype.saveImage = function () {\r\n        this.controls.hideSelected();\r\n        this.render();\r\n        var imgData = this.renderer.domElement.toDataURL();\r\n        var a = document.createElement(\"a\");\r\n        a.href = imgData.replace('image/png', 'image/octet-stream');\r\n        a.download = \"tactical-plan.png\";\r\n        a.click();\r\n    };\r\n    SimulatorComponent.prototype.toggleFullscreen = function () {\r\n        var document = window.document;\r\n        var elem = document.documentElement;\r\n        if (!document.fullscreenElement && !document.mozFullScreenElement &&\r\n            !document.webkitFullscreenElement && !document.msFullscreenElement) {\r\n            if (elem.requestFullscreen) {\r\n                elem.requestFullscreen();\r\n            }\r\n            else if (elem.msRequestFullscreen) {\r\n                elem.msRequestFullscreen();\r\n            }\r\n            else if (elem.mozRequestFullScreen) {\r\n                elem.mozRequestFullScreen();\r\n            }\r\n            else if (elem.webkitRequestFullscreen) {\r\n                elem.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n            }\r\n        }\r\n        else {\r\n            if (document.exitFullscreen) {\r\n                document.exitFullscreen();\r\n            }\r\n            else if (document.msExitFullscreen) {\r\n                document.msExitFullscreen();\r\n            }\r\n            else if (document.mozCancelFullScreen) {\r\n                document.mozCancelFullScreen();\r\n            }\r\n            else if (document.webkitExitFullscreen) {\r\n                document.webkitExitFullscreen();\r\n            }\r\n        }\r\n    };\r\n    SimulatorComponent.prototype.onResize = function (event) {\r\n        this.screenWidth = window.innerWidth - 5;\r\n        this.screenHeight = window.innerHeight - 40;\r\n        this.camera.aspect = this.screenWidth / this.screenHeight;\r\n        // adjust the FOV\r\n        this.camera.fov = (360 / Math.PI) * Math.atan(this.tanFOV * (this.screenHeight / this.windowHeight));\r\n        this.camera.updateProjectionMatrix();\r\n        this.camera.lookAt(this.scene.position);\r\n        this.renderer.setSize(this.screenWidth, this.screenHeight);\r\n    };\r\n    __decorate([\r\n        core_1.ViewChild('container'),\r\n        __metadata(\"design:type\", Object)\r\n    ], SimulatorComponent.prototype, \"container\", void 0);\r\n    __decorate([\r\n        core_1.ViewChild('shipInfo'),\r\n        __metadata(\"design:type\", material_1.MdSidenav)\r\n    ], SimulatorComponent.prototype, \"shipInfoBar\", void 0);\r\n    __decorate([\r\n        core_1.HostListener('window:resize', ['$event']),\r\n        __metadata(\"design:type\", Function),\r\n        __metadata(\"design:paramtypes\", [Object]),\r\n        __metadata(\"design:returntype\", void 0)\r\n    ], SimulatorComponent.prototype, \"onResize\", null);\r\n    SimulatorComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'simulator',\r\n            template: __webpack_require__(719),\r\n            styles: [__webpack_require__(720)]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [scene_service_1.SceneService, ship_service_1.ShipService, router_1.Router])\r\n    ], SimulatorComponent);\r\n    return SimulatorComponent;\r\n}());\r\nexports.SimulatorComponent = SimulatorComponent;\r\n\n\n/***/ }),\n\n/***/ 697:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar platform_browser_dynamic_1 = __webpack_require__(198);\r\nvar app_module_1 = __webpack_require__(698);\r\nplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\r\n\n\n/***/ }),\n\n/***/ 698:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar animations_1 = __webpack_require__(217);\r\nvar platform_browser_1 = __webpack_require__(34);\r\nvar material_1 = __webpack_require__(141);\r\nvar http_1 = __webpack_require__(134);\r\nvar forms_1 = __webpack_require__(214);\r\nvar flex_layout_1 = __webpack_require__(144);\r\nvar common_1 = __webpack_require__(39);\r\nvar app_component_1 = __webpack_require__(699);\r\nvar inventory_component_1 = __webpack_require__(249);\r\nvar ship_card_component_1 = __webpack_require__(709);\r\nvar add_ship_component_1 = __webpack_require__(250);\r\nvar simulator_component_1 = __webpack_require__(251);\r\nvar scene_service_1 = __webpack_require__(152);\r\nvar ship_service_1 = __webpack_require__(72);\r\nvar app_routing_module_1 = __webpack_require__(722);\r\n__webpack_require__(723);\r\nvar AppModule = (function () {\r\n    function AppModule() {\r\n    }\r\n    AppModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [\r\n                platform_browser_1.BrowserModule,\r\n                material_1.MaterialModule,\r\n                forms_1.FormsModule,\r\n                http_1.HttpModule,\r\n                animations_1.BrowserAnimationsModule,\r\n                flex_layout_1.FlexLayoutModule,\r\n                app_routing_module_1.AppRoutingModule\r\n            ],\r\n            declarations: [\r\n                app_component_1.AppComponent,\r\n                inventory_component_1.InventoryComponent,\r\n                ship_card_component_1.ShipCardComponent,\r\n                add_ship_component_1.AddShipComponent,\r\n                simulator_component_1.SimulatorComponent\r\n            ],\r\n            providers: [{\r\n                    provide: common_1.LocationStrategy,\r\n                    useClass: common_1.HashLocationStrategy\r\n                }, scene_service_1.SceneService, ship_service_1.ShipService],\r\n            bootstrap: [app_component_1.AppComponent]\r\n        })\r\n    ], AppModule);\r\n    return AppModule;\r\n}());\r\nexports.AppModule = AppModule;\r\n\n\n/***/ }),\n\n/***/ 699:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar router_1 = __webpack_require__(43);\r\nvar ship_service_1 = __webpack_require__(72);\r\n__webpack_require__(702);\r\nvar AppComponent = (function () {\r\n    function AppComponent(shipService, router) {\r\n        this.shipService = shipService;\r\n        this.router = router;\r\n    }\r\n    AppComponent.prototype.inventory = function () {\r\n        this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\r\n    };\r\n    AppComponent.prototype.simulator = function () {\r\n        this.router.navigate([\"simulator\"], this.shipService.getNavigationExtras());\r\n    };\r\n    AppComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'holocom',\r\n            template: __webpack_require__(703),\r\n            styles: [__webpack_require__(704)]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ship_service_1.ShipService, router_1.Router])\r\n    ], AppComponent);\r\n    return AppComponent;\r\n}());\r\nexports.AppComponent = AppComponent;\r\n\n\n/***/ }),\n\n/***/ 700:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Ship = (function () {\r\n    function Ship() {\r\n    }\r\n    return Ship;\r\n}());\r\nexports.Ship = Ship;\r\n\n\n/***/ }),\n\n/***/ 701:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar THREE = __webpack_require__(44);\r\nvar EXTENSIONS = {\r\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n    KHR_LIGHTS: 'KHR_lights',\r\n    KHR_MATERIALS_COMMON: 'KHR_materials_common',\r\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\r\n    KHR_TECHNIQUE_WEBGL: 'KHR_technique_webgl',\r\n};\r\nvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\nvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\nvar BINARY_EXTENSION_HEADER_LENGTH = 12;\r\nvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\nvar GLTF2Loader = (function () {\r\n    function GLTF2Loader(manager) {\r\n        this.manager = (manager !== undefined) ? manager : THREE.DefaultLoadingManager;\r\n    }\r\n    GLTF2Loader.prototype.load = function (url, onLoad, onProgress, onError) {\r\n        var scope = this;\r\n        var path = this.path && (typeof this.path === \"string\") ? this.path : THREE.Loader.prototype.extractUrlBase(url);\r\n        var loader = new THREE.FileLoader(scope.manager);\r\n        loader.setResponseType('arraybuffer');\r\n        loader.load(url, function (data) {\r\n            scope.parse(data, onLoad, path);\r\n        }, onProgress, onError);\r\n    };\r\n    GLTF2Loader.prototype.setCrossOrigin = function (value) {\r\n        this.crossOrigin = value;\r\n    };\r\n    GLTF2Loader.prototype.setPath = function (value) {\r\n        this.path = value;\r\n    };\r\n    GLTF2Loader.prototype.parse = function (data, callback, path) {\r\n        var content;\r\n        var extensions = {};\r\n        var magic = Utility.convertUint8ArrayToString(new Uint8Array(data, 0, 4));\r\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\r\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\r\n            content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\r\n        }\r\n        else {\r\n            content = Utility.convertUint8ArrayToString(new Uint8Array(data));\r\n        }\r\n        var json = JSON.parse(content);\r\n        if (json.extensionsUsed) {\r\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_LIGHTS) >= 0) {\r\n                extensions[EXTENSIONS.KHR_LIGHTS] = new GLTFLightsExtension(json);\r\n            }\r\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_MATERIALS_COMMON) >= 0) {\r\n                extensions[EXTENSIONS.KHR_MATERIALS_COMMON] = new GLTFMaterialsCommonExtension(json);\r\n            }\r\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS) >= 0) {\r\n                extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS] = new GLTFMaterialsPbrSpecularGlossinessExtension();\r\n            }\r\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_TECHNIQUE_WEBGL) >= 0) {\r\n                extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL] = new GLTFTechniqueWebglExtension(json);\r\n            }\r\n        }\r\n        console.time('GLTF2Loader');\r\n        var parser = new GLTFParser(json, extensions, {\r\n            path: path || this.path,\r\n            crossOrigin: this.crossOrigin\r\n        });\r\n        parser.parse(function (scene, scenes, cameras, animations) {\r\n            console.timeEnd('GLTF2Loader');\r\n            var glTF = {\r\n                \"scene\": scene,\r\n                \"scenes\": scenes,\r\n                \"cameras\": cameras,\r\n                \"animations\": animations\r\n            };\r\n            callback(glTF);\r\n        });\r\n    };\r\n    return GLTF2Loader;\r\n}());\r\nexports.GLTF2Loader = GLTF2Loader;\r\nvar GLTFRegistry = (function () {\r\n    function GLTFRegistry() {\r\n    }\r\n    GLTFRegistry.prototype.get = function (key) {\r\n        return this.objects[key];\r\n    };\r\n    GLTFRegistry.prototype.add = function (key, object) {\r\n        this.objects[key] = object;\r\n    };\r\n    GLTFRegistry.prototype.remove = function (key) {\r\n        delete this.objects[key];\r\n    };\r\n    GLTFRegistry.prototype.removeAll = function () {\r\n        this.objects = {};\r\n    };\r\n    GLTFRegistry.prototype.update = function (scene, camera) {\r\n        for (var name in this.objects) {\r\n            var object = this.objects[name];\r\n            if (object.update) {\r\n                object.update(scene, camera);\r\n            }\r\n        }\r\n    };\r\n    return GLTFRegistry;\r\n}());\r\nexports.GLTFRegistry = GLTFRegistry;\r\nvar GLTFShader = (function () {\r\n    function GLTFShader(targetNode, allNodes) {\r\n        var boundUniforms = {};\r\n        // bind each uniform to its source node\r\n        var uniforms = targetNode.material.uniforms;\r\n        for (var uniformId in uniforms) {\r\n            var uniform = uniforms[uniformId];\r\n            if (uniform.semantic) {\r\n                var sourceNodeRef = uniform.node;\r\n                var sourceNode = targetNode;\r\n                if (sourceNodeRef) {\r\n                    sourceNode = allNodes[sourceNodeRef];\r\n                }\r\n                boundUniforms[uniformId] = {\r\n                    semantic: uniform.semantic,\r\n                    sourceNode: sourceNode,\r\n                    targetNode: targetNode,\r\n                    uniform: uniform\r\n                };\r\n            }\r\n        }\r\n        this.boundUniforms = boundUniforms;\r\n        this._m4 = new THREE.Matrix4();\r\n    }\r\n    GLTFShader.prototype.update = function (scene, camera) {\r\n        var boundUniforms = this.boundUniforms;\r\n        for (var name in boundUniforms) {\r\n            var boundUniform = boundUniforms[name];\r\n            switch (boundUniform.semantic) {\r\n                case \"MODELVIEW\":\r\n                    var m4 = boundUniform.uniform.value;\r\n                    m4.multiplyMatrices(camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld);\r\n                    break;\r\n                case \"MODELVIEWINVERSETRANSPOSE\":\r\n                    var m3 = boundUniform.uniform.value;\r\n                    this._m4.multiplyMatrices(camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld);\r\n                    m3.getNormalMatrix(this._m4);\r\n                    break;\r\n                case \"PROJECTION\":\r\n                    var m4 = boundUniform.uniform.value;\r\n                    m4.copy(camera.projectionMatrix);\r\n                    break;\r\n                case \"JOINTMATRIX\":\r\n                    var m4v = boundUniform.uniform.value;\r\n                    for (var mi = 0; mi < m4v.length; mi++) {\r\n                        // So it goes like this:\r\n                        // SkinnedMesh world matrix is already baked into MODELVIEW;\r\n                        // transform joints to local space,\r\n                        // then transform using joint's inverse\r\n                        m4v[mi]\r\n                            .getInverse(boundUniform.sourceNode.matrixWorld)\r\n                            .multiply(boundUniform.targetNode.skeleton.bones[mi].matrixWorld)\r\n                            .multiply(boundUniform.targetNode.skeleton.boneInverses[mi])\r\n                            .multiply(boundUniform.targetNode.bindMatrix);\r\n                    }\r\n                    break;\r\n                default:\r\n                    console.warn(\"Unhandled shader semantic: \" + boundUniform.semantic);\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n    return GLTFShader;\r\n}());\r\nexports.GLTFShader = GLTFShader;\r\nvar GLTFLightsExtension = (function () {\r\n    function GLTFLightsExtension(json) {\r\n        this.name = EXTENSIONS.KHR_LIGHTS;\r\n        this.lights = {};\r\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS]) || {};\r\n        var lights = extension.lights || {};\r\n        for (var lightId in lights) {\r\n            var light = lights[lightId];\r\n            var lightNode;\r\n            var color = new THREE.Color().fromArray(light.color);\r\n            switch (light.type) {\r\n                case 'directional':\r\n                    lightNode = new THREE.DirectionalLight(color);\r\n                    lightNode.position.set(0, 0, 1);\r\n                    break;\r\n                case 'point':\r\n                    lightNode = new THREE.PointLight(color);\r\n                    break;\r\n                case 'spot':\r\n                    lightNode = new THREE.SpotLight(color);\r\n                    lightNode.position.set(0, 0, 1);\r\n                    break;\r\n                case 'ambient':\r\n                    lightNode = new THREE.AmbientLight(color);\r\n                    break;\r\n            }\r\n            if (lightNode) {\r\n                if (light.constantAttenuation !== undefined) {\r\n                    lightNode.intensity = light.constantAttenuation;\r\n                }\r\n                if (light.linearAttenuation !== undefined) {\r\n                    lightNode.distance = 1 / light.linearAttenuation;\r\n                }\r\n                if (light.quadraticAttenuation !== undefined) {\r\n                    lightNode.decay = light.quadraticAttenuation;\r\n                }\r\n                if (light.fallOffAngle !== undefined) {\r\n                    lightNode.angle = light.fallOffAngle;\r\n                }\r\n                if (light.fallOffExponent !== undefined) {\r\n                    console.warn('GLTF2Loader: light.fallOffExponent not currently supported.');\r\n                }\r\n                lightNode.name = light.name || ('light_' + lightId);\r\n                this.lights[lightId] = lightNode;\r\n            }\r\n        }\r\n    }\r\n    return GLTFLightsExtension;\r\n}());\r\nexports.GLTFLightsExtension = GLTFLightsExtension;\r\nvar GLTFMaterialsCommonExtension = (function () {\r\n    function GLTFMaterialsCommonExtension(json) {\r\n        this.name = EXTENSIONS.KHR_MATERIALS_COMMON;\r\n    }\r\n    GLTFMaterialsCommonExtension.prototype.getMaterialType = function (material) {\r\n        var khrMaterial = material.extensions[this.name];\r\n        switch (khrMaterial.type) {\r\n            case 'commonBlinn':\r\n            case 'commonPhong':\r\n                return THREE.MeshPhongMaterial;\r\n            case 'commonLambert':\r\n                return THREE.MeshLambertMaterial;\r\n            case 'commonConstant':\r\n            default:\r\n                return THREE.MeshBasicMaterial;\r\n        }\r\n    };\r\n    GLTFMaterialsCommonExtension.prototype.extendParams = function (materialParams, material, dependencies) {\r\n        var khrMaterial = material.extensions[this.name];\r\n        var keys = [];\r\n        // TODO: Currently ignored: 'ambientFactor', 'ambientTexture'\r\n        switch (khrMaterial.type) {\r\n            case 'commonBlinn':\r\n            case 'commonPhong':\r\n                keys.push('diffuseFactor', 'diffuseTexture', 'specularFactor', 'specularTexture', 'shininessFactor');\r\n                break;\r\n            case 'commonLambert':\r\n                keys.push('diffuseFactor', 'diffuseTexture');\r\n                break;\r\n            case 'commonConstant':\r\n            default:\r\n                break;\r\n        }\r\n        var materialValues = {};\r\n        keys.forEach(function (v) {\r\n            if (khrMaterial[v] !== undefined)\r\n                materialValues[v] = khrMaterial[v];\r\n        });\r\n        if (materialValues.diffuseFactor !== undefined) {\r\n            materialParams.color = new THREE.Color().fromArray(materialValues.diffuseFactor);\r\n            materialParams.opacity = materialValues.diffuseFactor[3];\r\n        }\r\n        if (materialValues.diffuseTexture !== undefined) {\r\n            materialParams.map = dependencies.textures[materialValues.diffuseTexture.index];\r\n        }\r\n        if (materialValues.specularFactor !== undefined) {\r\n            materialParams.specular = new THREE.Color().fromArray(materialValues.specularFactor);\r\n        }\r\n        if (materialValues.specularTexture !== undefined) {\r\n            materialParams.specularMap = dependencies.textures[materialValues.specularTexture.index];\r\n        }\r\n        if (materialValues.shininessFactor !== undefined) {\r\n            materialParams.shininess = materialValues.shininessFactor;\r\n        }\r\n    };\r\n    return GLTFMaterialsCommonExtension;\r\n}());\r\nexports.GLTFMaterialsCommonExtension = GLTFMaterialsCommonExtension;\r\nvar GLTFBinaryExtension = (function () {\r\n    function GLTFBinaryExtension(data) {\r\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n        this.content = null;\r\n        this.body = null;\r\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\r\n        this.header = {\r\n            magic: Utility.convertUint8ArrayToString(new Uint8Array(data.slice(0, 4))),\r\n            version: headerView.getUint32(4, true),\r\n            length: headerView.getUint32(8, true)\r\n        };\r\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\r\n            throw new Error('GLTF2Loader: Unsupported glTF-Binary header.');\r\n        }\r\n        else if (this.header.version < 2.0) {\r\n            throw new Error('GLTF2Loader: Legacy binary file detected. Use GLTFLoader instead.');\r\n        }\r\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\r\n        var chunkIndex = 0;\r\n        while (chunkIndex < chunkView.byteLength) {\r\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\r\n            chunkIndex += 4;\r\n            var chunkType = chunkView.getUint32(chunkIndex, true);\r\n            chunkIndex += 4;\r\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\r\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\r\n                this.content = Utility.convertUint8ArrayToString(contentArray);\r\n            }\r\n            else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\r\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\r\n            }\r\n            // Clients must ignore chunks with unknown types.\r\n            chunkIndex += chunkLength;\r\n        }\r\n        if (this.content === null) {\r\n            throw new Error('GLTF2Loader: JSON content not found.');\r\n        }\r\n    }\r\n    return GLTFBinaryExtension;\r\n}());\r\nexports.GLTFBinaryExtension = GLTFBinaryExtension;\r\nvar GLTFTechniqueWebglExtension = (function () {\r\n    function GLTFTechniqueWebglExtension(json) {\r\n        this.name = EXTENSIONS.KHR_TECHNIQUE_WEBGL;\r\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL]) || {};\r\n        this.techniques = extension.techniques || {};\r\n        this.programs = extension.programs || {};\r\n        this.shaders = extension.shaders || {};\r\n    }\r\n    GLTFTechniqueWebglExtension.prototype.getMaterialType = function () {\r\n        return DeferredShaderMaterial;\r\n    };\r\n    GLTFTechniqueWebglExtension.prototype.extendParams = function (materialParams, material, dependencies) {\r\n        var extension = material[EXTENSIONS.KHR_TECHNIQUE_WEBGL];\r\n        var technique = dependencies.techniques[extension.technique];\r\n        materialParams.uniforms = {};\r\n        var program = dependencies.programs[technique.program];\r\n        if (program === undefined) {\r\n            return;\r\n        }\r\n        materialParams.fragmentShader = dependencies.shaders[program.fragmentShader];\r\n        if (!materialParams.fragmentShader) {\r\n            throw new Error('ERROR: Missing fragment shader definition:' + program.fragmentShader);\r\n        }\r\n        var vertexShader = dependencies.shaders[program.vertexShader];\r\n        if (!vertexShader) {\r\n            throw new Error('ERROR: Missing vertex shader definition:' + program.vertexShader);\r\n        }\r\n        // IMPORTANT: FIX VERTEX SHADER ATTRIBUTE DEFINITIONS\r\n        materialParams.vertexShader = Utility.replaceTHREEShaderAttributes(vertexShader, technique);\r\n        var uniforms = technique.uniforms;\r\n        for (var uniformId in uniforms) {\r\n            var pname = uniforms[uniformId];\r\n            var shaderParam = technique.parameters[pname];\r\n            var ptype = shaderParam.type;\r\n            if (WEBGL_TYPE[ptype]) {\r\n                var pcount = shaderParam.count;\r\n                var value;\r\n                if (material.values !== undefined)\r\n                    value = material.values[pname];\r\n                var uvalue = new WEBGL_TYPE[ptype]();\r\n                var usemantic = shaderParam.semantic;\r\n                var unode = shaderParam.node;\r\n                switch (ptype) {\r\n                    case WEBGL_CONSTANTS.FLOAT:\r\n                        uvalue = shaderParam.value;\r\n                        if (pname === 'transparency') {\r\n                            materialParams.transparent = true;\r\n                        }\r\n                        if (value !== undefined) {\r\n                            uvalue = value;\r\n                        }\r\n                        break;\r\n                    case WEBGL_CONSTANTS.FLOAT_VEC2:\r\n                    case WEBGL_CONSTANTS.FLOAT_VEC3:\r\n                    case WEBGL_CONSTANTS.FLOAT_VEC4:\r\n                    case WEBGL_CONSTANTS.FLOAT_MAT3:\r\n                        if (shaderParam && shaderParam.value) {\r\n                            uvalue.fromArray(shaderParam.value);\r\n                        }\r\n                        if (value) {\r\n                            uvalue.fromArray(value);\r\n                        }\r\n                        break;\r\n                    case WEBGL_CONSTANTS.FLOAT_MAT4:\r\n                        if (pcount) {\r\n                            uvalue = new Array(pcount);\r\n                            for (var mi = 0; mi < pcount; mi++) {\r\n                                uvalue[mi] = new WEBGL_TYPE[ptype]();\r\n                            }\r\n                            if (shaderParam && shaderParam.value) {\r\n                                var m4v = shaderParam.value;\r\n                                uvalue.fromArray(m4v);\r\n                            }\r\n                            if (value) {\r\n                                uvalue.fromArray(value);\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (shaderParam && shaderParam.value) {\r\n                                var m4 = shaderParam.value;\r\n                                uvalue.fromArray(m4);\r\n                            }\r\n                            if (value) {\r\n                                uvalue.fromArray(value);\r\n                            }\r\n                        }\r\n                        break;\r\n                    case WEBGL_CONSTANTS.SAMPLER_2D:\r\n                        if (value !== undefined) {\r\n                            uvalue = dependencies.textures[value];\r\n                        }\r\n                        else if (shaderParam.value !== undefined) {\r\n                            uvalue = dependencies.textures[shaderParam.value];\r\n                        }\r\n                        else {\r\n                            uvalue = null;\r\n                        }\r\n                        break;\r\n                }\r\n                materialParams.uniforms[uniformId] = {\r\n                    value: uvalue,\r\n                    semantic: usemantic,\r\n                    node: unode\r\n                };\r\n            }\r\n            else {\r\n                throw new Error('Unknown shader uniform param type: ' + ptype);\r\n            }\r\n        }\r\n        var states = technique.states || {};\r\n        var enables = states.enable || [];\r\n        var functions = states.functions || {};\r\n        var enableCullFace = false;\r\n        var enableDepthTest = false;\r\n        var enableBlend = false;\r\n        for (var i = 0, il = enables.length; i < il; i++) {\r\n            var enable = enables[i];\r\n            switch (STATES_ENABLES[enable]) {\r\n                case 'CULL_FACE':\r\n                    enableCullFace = true;\r\n                    break;\r\n                case 'DEPTH_TEST':\r\n                    enableDepthTest = true;\r\n                    break;\r\n                case 'BLEND':\r\n                    enableBlend = true;\r\n                    break;\r\n                // TODO: implement\r\n                case 'SCISSOR_TEST':\r\n                case 'POLYGON_OFFSET_FILL':\r\n                case 'SAMPLE_ALPHA_TO_COVERAGE':\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Unknown technique.states.enable: \" + enable);\r\n            }\r\n        }\r\n        if (enableCullFace) {\r\n            materialParams.side = functions.cullFace !== undefined ? WEBGL_SIDES[functions.cullFace] : THREE.FrontSide;\r\n        }\r\n        else {\r\n            materialParams.side = THREE.DoubleSide;\r\n        }\r\n        materialParams.depthTest = enableDepthTest;\r\n        materialParams.depthFunc = functions.depthFunc !== undefined ? WEBGL_DEPTH_FUNCS[functions.depthFunc] : THREE.LessDepth;\r\n        materialParams.depthWrite = functions.depthMask !== undefined ? functions.depthMask[0] : true;\r\n        materialParams.blending = enableBlend ? THREE.CustomBlending : THREE.NoBlending;\r\n        materialParams.transparent = enableBlend;\r\n        var blendEquationSeparate = functions.blendEquationSeparate;\r\n        if (blendEquationSeparate !== undefined) {\r\n            materialParams.blendEquation = WEBGL_BLEND_EQUATIONS[blendEquationSeparate[0]];\r\n            materialParams.blendEquationAlpha = WEBGL_BLEND_EQUATIONS[blendEquationSeparate[1]];\r\n        }\r\n        else {\r\n            materialParams.blendEquation = THREE.AddEquation;\r\n            materialParams.blendEquationAlpha = THREE.AddEquation;\r\n        }\r\n        var blendFuncSeparate = functions.blendFuncSeparate;\r\n        if (blendFuncSeparate !== undefined) {\r\n            materialParams.blendSrc = WEBGL_BLEND_FUNCS[blendFuncSeparate[0]];\r\n            materialParams.blendDst = WEBGL_BLEND_FUNCS[blendFuncSeparate[1]];\r\n            materialParams.blendSrcAlpha = WEBGL_BLEND_FUNCS[blendFuncSeparate[2]];\r\n            materialParams.blendDstAlpha = WEBGL_BLEND_FUNCS[blendFuncSeparate[3]];\r\n        }\r\n        else {\r\n            materialParams.blendSrc = THREE.OneFactor;\r\n            materialParams.blendDst = THREE.ZeroFactor;\r\n            materialParams.blendSrcAlpha = THREE.OneFactor;\r\n            materialParams.blendDstAlpha = THREE.ZeroFactor;\r\n        }\r\n    };\r\n    return GLTFTechniqueWebglExtension;\r\n}());\r\nexports.GLTFTechniqueWebglExtension = GLTFTechniqueWebglExtension;\r\nvar GLTFMaterialsPbrSpecularGlossinessExtension = (function () {\r\n    function GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n        this.name = EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\r\n    }\r\n    GLTFMaterialsPbrSpecularGlossinessExtension.prototype.getMaterialType = function () {\r\n        return THREE.ShaderMaterial;\r\n    };\r\n    GLTFMaterialsPbrSpecularGlossinessExtension.prototype.extendParams = function (params, material, dependencies) {\r\n        // specification\r\n        // https://github.com/sbtron/glTF/tree/KHRpbrSpecGloss/extensions/Khronos/KHR_materials_pbrSpecularGlossiness\r\n        var pbrSpecularGlossiness = material.extensions[this.name];\r\n        var shader = THREE.ShaderLib['standard'];\r\n        var uniforms = THREE.UniformsUtils.clone(shader.uniforms);\r\n        var specularMapParsFragmentChunk = [\r\n            '#ifdef USE_SPECULARMAP',\r\n            '\tuniform sampler2D specularMap;',\r\n            '#endif'\r\n        ].join('\\n');\r\n        var glossinessMapParsFragmentChunk = [\r\n            '#ifdef USE_GLOSSINESSMAP',\r\n            '\tuniform sampler2D glossinessMap;',\r\n            '#endif'\r\n        ].join('\\n');\r\n        var specularMapFragmentChunk = [\r\n            'vec3 specularFactor = specular;',\r\n            '#ifdef USE_SPECULARMAP',\r\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n            '\tspecularFactor *= texelSpecular.rgb;',\r\n            '#endif'\r\n        ].join('\\n');\r\n        var glossinessMapFragmentChunk = [\r\n            'float glossinessFactor = glossiness;',\r\n            '#ifdef USE_GLOSSINESSMAP',\r\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n            '\tglossinessFactor *= texelGlossiness.a;',\r\n            '#endif'\r\n        ].join('\\n');\r\n        var lightPhysicalFragmentChunk = [\r\n            'PhysicalMaterial material;',\r\n            'material.diffuseColor = diffuseColor.rgb;',\r\n            'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n            'material.specularColor = specularFactor.rgb;',\r\n        ].join('\\n');\r\n        var fragmentShader = shader.fragmentShader\r\n            .replace('#include <specularmap_fragment>', '')\r\n            .replace('uniform float roughness;', 'uniform vec3 specular;')\r\n            .replace('uniform float metalness;', 'uniform float glossiness;')\r\n            .replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk)\r\n            .replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk)\r\n            .replace('#include <roughnessmap_fragment>', specularMapFragmentChunk)\r\n            .replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk)\r\n            .replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\r\n        delete uniforms.roughness;\r\n        delete uniforms.metalness;\r\n        delete uniforms.roughnessMap;\r\n        delete uniforms.metalnessMap;\r\n        uniforms.specular = { value: new THREE.Color().setHex(0x111111) };\r\n        uniforms.glossiness = { value: 0.5 };\r\n        uniforms.specularMap = { value: null };\r\n        uniforms.glossinessMap = { value: null };\r\n        params.vertexShader = shader.vertexShader;\r\n        params.fragmentShader = fragmentShader;\r\n        params.uniforms = uniforms;\r\n        params.defines = { 'STANDARD': '' };\r\n        params.color = new THREE.Color(1.0, 1.0, 1.0);\r\n        params.opacity = 1.0;\r\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\r\n            var array = pbrSpecularGlossiness.diffuseFactor;\r\n            params.color.fromArray(array);\r\n            params.opacity = array[3];\r\n        }\r\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\r\n            params.map = dependencies.textures[pbrSpecularGlossiness.diffuseTexture.index];\r\n        }\r\n        params.emissive = new THREE.Color(0.0, 0.0, 0.0);\r\n        params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n        params.specular = new THREE.Color(1.0, 1.0, 1.0);\r\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\r\n            params.specular.fromArray(pbrSpecularGlossiness.specularFactor);\r\n        }\r\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\r\n            params.glossinessMap = dependencies.textures[pbrSpecularGlossiness.specularGlossinessTexture.index];\r\n            params.specularMap = dependencies.textures[pbrSpecularGlossiness.specularGlossinessTexture.index];\r\n        }\r\n    };\r\n    GLTFMaterialsPbrSpecularGlossinessExtension.prototype.createMaterial = function (params) {\r\n        // setup material properties based on MeshStandardMaterial for Specular-Glossiness\r\n        var material = new THREE.ShaderMaterial({\r\n            defines: params.defines,\r\n            vertexShader: params.vertexShader,\r\n            fragmentShader: params.fragmentShader,\r\n            uniforms: params.uniforms,\r\n            fog: true,\r\n            lights: true,\r\n            opacity: params.opacity,\r\n            transparent: params.transparent\r\n        });\r\n        material.color = params.color;\r\n        material.map = params.map === undefined ? null : params.map;\r\n        material.lightMap = null;\r\n        material.lightMapIntensity = 1.0;\r\n        material.aoMap = params.aoMap === undefined ? null : params.aoMap;\r\n        material.aoMapIntensity = 1.0;\r\n        material.emissive = params.emissive;\r\n        material.emissiveIntensity = 1.0;\r\n        material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\r\n        material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\r\n        material.bumpScale = 1;\r\n        material.normalMap = params.normalMap === undefined ? null : params.normalMap;\r\n        material.normalScale = new THREE.Vector2(1, 1);\r\n        material.displacementMap = null;\r\n        material.displacementScale = 1;\r\n        material.displacementBias = 0;\r\n        material.specularMap = params.specularMap === undefined ? null : params.specularMap;\r\n        material.specular = params.specular;\r\n        material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\r\n        material.glossiness = params.glossiness;\r\n        material.alphaMap = null;\r\n        material.envMap = params.envMap === undefined ? null : params.envMap;\r\n        material.envMapIntensity = 1.0;\r\n        material.refractionRatio = 0.98;\r\n        material.extensions.derivatives = true;\r\n        return material;\r\n    };\r\n    GLTFMaterialsPbrSpecularGlossinessExtension.prototype.refreshUniforms = function (renderer, scene, camera, geometry, material, group) {\r\n        var uniforms = material.uniforms;\r\n        var defines = material.defines;\r\n        uniforms.opacity.value = material.opacity;\r\n        uniforms.diffuse.value.copy(material.color);\r\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\r\n        uniforms.map.value = material.map;\r\n        uniforms.specularMap.value = material.specularMap;\r\n        uniforms.alphaMap.value = material.alphaMap;\r\n        uniforms.lightMap.value = material.lightMap;\r\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n        uniforms.aoMap.value = material.aoMap;\r\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n        // uv repeat and offset setting priorities\r\n        // 1. color map\r\n        // 2. specular map\r\n        // 3. normal map\r\n        // 4. bump map\r\n        // 5. alpha map\r\n        // 6. emissive map\r\n        var uvScaleMap;\r\n        if (material.map) {\r\n            uvScaleMap = material.map;\r\n        }\r\n        else if (material.specularMap) {\r\n            uvScaleMap = material.specularMap;\r\n        }\r\n        else if (material.displacementMap) {\r\n            uvScaleMap = material.displacementMap;\r\n        }\r\n        else if (material.normalMap) {\r\n            uvScaleMap = material.normalMap;\r\n        }\r\n        else if (material.bumpMap) {\r\n            uvScaleMap = material.bumpMap;\r\n        }\r\n        else if (material.glossinessMap) {\r\n            uvScaleMap = material.glossinessMap;\r\n        }\r\n        else if (material.alphaMap) {\r\n            uvScaleMap = material.alphaMap;\r\n        }\r\n        else if (material.emissiveMap) {\r\n            uvScaleMap = material.emissiveMap;\r\n        }\r\n        if (uvScaleMap !== undefined) {\r\n            // backwards compatibility\r\n            if (uvScaleMap.isWebGLRenderTarget) {\r\n                uvScaleMap = uvScaleMap.texture;\r\n            }\r\n            var offset = uvScaleMap.offset;\r\n            var repeat = uvScaleMap.repeat;\r\n            uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\r\n        }\r\n        uniforms.envMap.value = material.envMap;\r\n        uniforms.envMapIntensity.value = material.envMapIntensity;\r\n        uniforms.flipEnvMap.value = (material.envMap && material.envMap.isCubeTexture) ? -1 : 1;\r\n        uniforms.refractionRatio.value = material.refractionRatio;\r\n        uniforms.specular.value.copy(material.specular);\r\n        uniforms.glossiness.value = material.glossiness;\r\n        uniforms.glossinessMap.value = material.glossinessMap;\r\n        uniforms.emissiveMap.value = material.emissiveMap;\r\n        uniforms.bumpMap.value = material.bumpMap;\r\n        uniforms.normalMap.value = material.normalMap;\r\n        uniforms.displacementMap.value = material.displacementMap;\r\n        uniforms.displacementScale.value = material.displacementScale;\r\n        uniforms.displacementBias.value = material.displacementBias;\r\n        if (uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined) {\r\n            defines.USE_GLOSSINESSMAP = '';\r\n            // set USE_ROUGHNESSMAP to enable vUv\r\n            defines.USE_ROUGHNESSMAP = '';\r\n        }\r\n        if (uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined) {\r\n            delete defines.USE_GLOSSINESSMAP;\r\n            delete defines.USE_ROUGHNESSMAP;\r\n        }\r\n    };\r\n    return GLTFMaterialsPbrSpecularGlossinessExtension;\r\n}());\r\nexports.GLTFMaterialsPbrSpecularGlossinessExtension = GLTFMaterialsPbrSpecularGlossinessExtension;\r\nvar WEBGL_CONSTANTS = {\r\n    FLOAT: 5126,\r\n    //FLOAT_MAT2: 35674,\r\n    FLOAT_MAT3: 35675,\r\n    FLOAT_MAT4: 35676,\r\n    FLOAT_VEC2: 35664,\r\n    FLOAT_VEC3: 35665,\r\n    FLOAT_VEC4: 35666,\r\n    LINEAR: 9729,\r\n    REPEAT: 10497,\r\n    SAMPLER_2D: 35678,\r\n    TRIANGLES: 4,\r\n    LINES: 1,\r\n    UNSIGNED_BYTE: 5121,\r\n    UNSIGNED_SHORT: 5123,\r\n    VERTEX_SHADER: 35633,\r\n    FRAGMENT_SHADER: 35632\r\n};\r\nvar WEBGL_TYPE = {\r\n    5126: Number,\r\n    //35674: THREE.Matrix2,\r\n    35675: THREE.Matrix3,\r\n    35676: THREE.Matrix4,\r\n    35664: THREE.Vector2,\r\n    35665: THREE.Vector3,\r\n    35666: THREE.Vector4,\r\n    35678: THREE.Texture\r\n};\r\nvar WEBGL_COMPONENT_TYPES = {\r\n    5120: Int8Array,\r\n    5121: Uint8Array,\r\n    5122: Int16Array,\r\n    5123: Uint16Array,\r\n    5125: Uint32Array,\r\n    5126: Float32Array\r\n};\r\nvar WEBGL_FILTERS = {\r\n    9728: THREE.NearestFilter,\r\n    9729: THREE.LinearFilter,\r\n    9984: THREE.NearestMipMapNearestFilter,\r\n    9985: THREE.LinearMipMapNearestFilter,\r\n    9986: THREE.NearestMipMapLinearFilter,\r\n    9987: THREE.LinearMipMapLinearFilter\r\n};\r\nvar WEBGL_WRAPPINGS = {\r\n    33071: THREE.ClampToEdgeWrapping,\r\n    33648: THREE.MirroredRepeatWrapping,\r\n    10497: THREE.RepeatWrapping\r\n};\r\nvar WEBGL_TEXTURE_FORMATS = {\r\n    6406: THREE.AlphaFormat,\r\n    6407: THREE.RGBFormat,\r\n    6408: THREE.RGBAFormat,\r\n    6409: THREE.LuminanceFormat,\r\n    6410: THREE.LuminanceAlphaFormat\r\n};\r\nvar WEBGL_TEXTURE_DATATYPES = {\r\n    5121: THREE.UnsignedByteType,\r\n    32819: THREE.UnsignedShort4444Type,\r\n    32820: THREE.UnsignedShort5551Type,\r\n    33635: THREE.UnsignedShort565Type\r\n};\r\nvar WEBGL_SIDES = {\r\n    1028: THREE.BackSide,\r\n    1029: THREE.FrontSide // Culling back\r\n    //1032: THREE.NoSide   // Culling front and back, what to do?\r\n};\r\nvar WEBGL_DEPTH_FUNCS = {\r\n    512: THREE.NeverDepth,\r\n    513: THREE.LessDepth,\r\n    514: THREE.EqualDepth,\r\n    515: THREE.LessEqualDepth,\r\n    516: THREE.GreaterEqualDepth,\r\n    517: THREE.NotEqualDepth,\r\n    518: THREE.GreaterEqualDepth,\r\n    519: THREE.AlwaysDepth\r\n};\r\nvar WEBGL_BLEND_EQUATIONS = {\r\n    32774: THREE.AddEquation,\r\n    32778: THREE.SubtractEquation,\r\n    32779: THREE.ReverseSubtractEquation\r\n};\r\nvar WEBGL_BLEND_FUNCS = {\r\n    0: THREE.ZeroFactor,\r\n    1: THREE.OneFactor,\r\n    768: THREE.SrcColorFactor,\r\n    769: THREE.OneMinusSrcColorFactor,\r\n    770: THREE.SrcAlphaFactor,\r\n    771: THREE.OneMinusSrcAlphaFactor,\r\n    772: THREE.DstAlphaFactor,\r\n    773: THREE.OneMinusDstAlphaFactor,\r\n    774: THREE.DstColorFactor,\r\n    775: THREE.OneMinusDstColorFactor,\r\n    776: THREE.SrcAlphaSaturateFactor\r\n    // The followings are not supported by Three.js yet\r\n    //32769: CONSTANT_COLOR,\r\n    //32770: ONE_MINUS_CONSTANT_COLOR,\r\n    //32771: CONSTANT_ALPHA,\r\n    //32772: ONE_MINUS_CONSTANT_COLOR\r\n};\r\nvar WEBGL_TYPE_SIZES = {\r\n    'SCALAR': 1,\r\n    'VEC2': 2,\r\n    'VEC3': 3,\r\n    'VEC4': 4,\r\n    'MAT2': 4,\r\n    'MAT3': 9,\r\n    'MAT4': 16\r\n};\r\nvar PATH_PROPERTIES = {\r\n    scale: 'scale',\r\n    position: 'position',\r\n    rotation: 'quaternion',\r\n    weights: 'morphTargetInfluences'\r\n};\r\nvar INTERPOLATION = {\r\n    LINEAR: THREE.InterpolateLinear,\r\n    STEP: THREE.InterpolateDiscrete\r\n};\r\nvar STATES_ENABLES = {\r\n    2884: 'CULL_FACE',\r\n    2929: 'DEPTH_TEST',\r\n    3042: 'BLEND',\r\n    3089: 'SCISSOR_TEST',\r\n    32823: 'POLYGON_OFFSET_FILL',\r\n    32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n};\r\nvar ALPHA_MODES = {\r\n    OPAQUE: 'OPAQUE',\r\n    MASK: 'MASK',\r\n    BLEND: 'BLEND'\r\n};\r\n/* UTILITY FUNCTIONS */\r\nvar Utility = (function () {\r\n    function Utility() {\r\n    }\r\n    Utility.each = function (object, callback, thisObj) {\r\n        if (!object) {\r\n            return Promise.resolve();\r\n        }\r\n        var results;\r\n        var fns = [];\r\n        if (Object.prototype.toString.call(object) === '[object Array]') {\r\n            results = [];\r\n            var length = object.length;\r\n            for (var idx = 0; idx < length; idx++) {\r\n                var value = callback.call(thisObj || this, object[idx], idx);\r\n                if (value) {\r\n                    fns.push(value);\r\n                    if (value instanceof Promise) {\r\n                        value.then(function (key, value) {\r\n                            results[key] = value;\r\n                        }.bind(this, idx));\r\n                    }\r\n                    else {\r\n                        results[idx] = value;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            results = {};\r\n            for (var key in object) {\r\n                if (object.hasOwnProperty(key)) {\r\n                    var value = callback.call(thisObj || this, object[key], key);\r\n                    if (value) {\r\n                        fns.push(value);\r\n                        if (value instanceof Promise) {\r\n                            value.then(function (key, value) {\r\n                                results[key] = value;\r\n                            }.bind(this, key));\r\n                        }\r\n                        else {\r\n                            results[key] = value;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return Promise.all(fns).then(function () {\r\n            return results;\r\n        });\r\n    };\r\n    Utility.resolveURL = function (url, path) {\r\n        // Invalid URL\r\n        if (typeof url !== 'string' || url === '')\r\n            return '';\r\n        // Absolute URL http://,https://,//\r\n        if (/^(https?:)?\\/\\//i.test(url)) {\r\n            return url;\r\n        }\r\n        // Data URI\r\n        if (/^data:.*,.*$/i.test(url)) {\r\n            return url;\r\n        }\r\n        // Blob URL\r\n        if (/^blob:.*$/i.test(url)) {\r\n            return url;\r\n        }\r\n        // Relative URL\r\n        return (path || '') + url;\r\n    };\r\n    Utility.convertUint8ArrayToString = function (array) {\r\n        // Avoid the String.fromCharCode.apply(null, array) shortcut, which\r\n        // throws a \"maximum call stack size exceeded\" error for large arrays.\r\n        var s = '';\r\n        for (var i = 0, il = array.length; i < il; i++) {\r\n            s += String.fromCharCode(array[i]);\r\n        }\r\n        return s;\r\n    };\r\n    Utility.replaceTHREEShaderAttributes = function (shaderText, technique) {\r\n        // Expected technique attributes\r\n        var attributes = {};\r\n        for (var attributeId in technique.attributes) {\r\n            var pname = technique.attributes[attributeId];\r\n            var param = technique.parameters[pname];\r\n            var atype = param.type;\r\n            var semantic = param.semantic;\r\n            attributes[attributeId] = {\r\n                type: atype,\r\n                semantic: semantic\r\n            };\r\n        }\r\n        // Figure out which attributes to change in technique\r\n        var shaderParams = technique.parameters;\r\n        var shaderAttributes = technique.attributes;\r\n        var params = {};\r\n        for (var attributeId in attributes) {\r\n            var pname = shaderAttributes[attributeId];\r\n            var shaderParam = shaderParams[pname];\r\n            var semantic = shaderParam.semantic;\r\n            if (semantic) {\r\n                params[attributeId] = shaderParam;\r\n            }\r\n        }\r\n        var pname;\r\n        for (pname in params) {\r\n            var param = params[pname];\r\n            var semantic = param.semantic;\r\n            var regEx = new RegExp(\"\\\\b\" + pname + \"\\\\b\", \"g\");\r\n            switch (semantic) {\r\n                case 'POSITION':\r\n                    shaderText = shaderText.replace(regEx, 'position');\r\n                    break;\r\n                case 'NORMAL':\r\n                    shaderText = shaderText.replace(regEx, 'normal');\r\n                    break;\r\n                case 'TEXCOORD_0':\r\n                case 'TEXCOORD0':\r\n                case 'TEXCOORD':\r\n                    shaderText = shaderText.replace(regEx, 'uv');\r\n                    break;\r\n                case 'TEXCOORD_1':\r\n                    shaderText = shaderText.replace(regEx, 'uv2');\r\n                    break;\r\n                case 'COLOR_0':\r\n                case 'COLOR0':\r\n                case 'COLOR':\r\n                    shaderText = shaderText.replace(regEx, 'color');\r\n                    break;\r\n                case 'WEIGHTS_0':\r\n                case 'WEIGHT':// WEIGHT semantic deprecated.\r\n                    shaderText = shaderText.replace(regEx, 'skinWeight');\r\n                    break;\r\n                case 'JOINTS_0':\r\n                case 'JOINT':// JOINT semantic deprecated.\r\n                    shaderText = shaderText.replace(regEx, 'skinIndex');\r\n                    break;\r\n            }\r\n        }\r\n        return shaderText;\r\n    };\r\n    Utility.createDefaultMaterial = function () {\r\n        return new THREE.MeshPhongMaterial({\r\n            color: 0x000000, side: THREE.DoubleSide\r\n        });\r\n        //var textureLoader = new THREE.TextureLoader();\r\n        //return new THREE.MeshLambertMaterial({ color: 0x444444, side: THREE.DoubleSide, combine: THREE.MixOperation, reflectivity: 0.6 });\r\n    };\r\n    return Utility;\r\n}());\r\nvar DeferredShaderMaterial = (function () {\r\n    function DeferredShaderMaterial(params) {\r\n        this.isDeferredShaderMaterial = true;\r\n        this.params = params;\r\n    }\r\n    DeferredShaderMaterial.prototype.create = function () {\r\n        var uniforms = THREE.UniformsUtils.clone(this.params.uniforms);\r\n        for (var uniformId in this.params.uniforms) {\r\n            var originalUniform = this.params.uniforms[uniformId];\r\n            if (originalUniform.value instanceof THREE.Texture) {\r\n                uniforms[uniformId].value = originalUniform.value;\r\n                uniforms[uniformId].value.needsUpdate = true;\r\n            }\r\n            uniforms[uniformId].semantic = originalUniform.semantic;\r\n            uniforms[uniformId].node = originalUniform.node;\r\n        }\r\n        this.params.uniforms = uniforms;\r\n        return new THREE.RawShaderMaterial(this.params);\r\n    };\r\n    return DeferredShaderMaterial;\r\n}());\r\nvar GLTFParser = (function () {\r\n    function GLTFParser(json, extensions, options) {\r\n        this.json = json || {};\r\n        this.extensions = extensions || {};\r\n        this.options = options || {};\r\n        // loader object cache\r\n        this.cache = new GLTFRegistry();\r\n    }\r\n    GLTFParser.prototype.withDependencies = function (dependencies) {\r\n        var _dependencies = {};\r\n        for (var i = 0; i < dependencies.length; i++) {\r\n            var dependency = dependencies[i];\r\n            var fnName = \"load\" + dependency.charAt(0).toUpperCase() + dependency.slice(1);\r\n            var cached = this.cache.get(dependency);\r\n            if (cached !== undefined) {\r\n                _dependencies[dependency] = cached;\r\n            }\r\n            else if (this[fnName]) {\r\n                var fn = this[fnName]();\r\n                this.cache.add(dependency, fn);\r\n                _dependencies[dependency] = fn;\r\n            }\r\n        }\r\n        return Utility.each(_dependencies, function (dependency) {\r\n            return dependency;\r\n        });\r\n    };\r\n    GLTFParser.prototype.parse = function (callback) {\r\n        var json = this.json;\r\n        // Clear the loader cache\r\n        this.cache.removeAll();\r\n        // Fire the callback on complete\r\n        this.withDependencies([\r\n            \"scenes\",\r\n            \"cameras\",\r\n            \"animations\"\r\n        ]).then(function (dependencies) {\r\n            var scenes = [];\r\n            for (var name in dependencies.scenes) {\r\n                scenes.push(dependencies.scenes[name]);\r\n            }\r\n            var scene = json.scene !== undefined ? dependencies.scenes[json.scene] : scenes[0];\r\n            var cameras = [];\r\n            for (var name in dependencies.cameras) {\r\n                var camera = dependencies.cameras[name];\r\n                cameras.push(camera);\r\n            }\r\n            var animations = [];\r\n            for (var name in dependencies.animations) {\r\n                animations.push(dependencies.animations[name]);\r\n            }\r\n            callback(scene, scenes, cameras, animations);\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadShaders = function () {\r\n        var json = this.json;\r\n        var options = this.options;\r\n        var extensions = this.extensions;\r\n        return this.withDependencies([\r\n            \"bufferViews\"\r\n        ]).then(function (dependencies) {\r\n            var shaders = extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL] !== undefined ? extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL].shaders : json.shaders;\r\n            if (shaders === undefined)\r\n                shaders = {};\r\n            return Utility.each(shaders, function (shader) {\r\n                if (shader.bufferView !== undefined) {\r\n                    var bufferView = dependencies.bufferViews[shader.bufferView];\r\n                    var array = new Uint8Array(bufferView);\r\n                    return Utility.convertUint8ArrayToString(array);\r\n                }\r\n                return new Promise(function (resolve) {\r\n                    var loader = new THREE.FileLoader();\r\n                    loader.setResponseType('text');\r\n                    loader.load(Utility.resolveURL(shader.uri, options.path), function (shaderText) {\r\n                        resolve(shaderText);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadBuffers = function () {\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var options = this.options;\r\n        return Utility.each(json.buffers, function (buffer, name) {\r\n            if (buffer.type === 'arraybuffer' || buffer.type === undefined) {\r\n                // If present, GLB container is required to be the first buffer.\r\n                if (buffer.uri === undefined && name === 0) {\r\n                    return extensions[EXTENSIONS.KHR_BINARY_GLTF].body;\r\n                }\r\n                return new Promise(function (resolve) {\r\n                    var loader = new THREE.FileLoader();\r\n                    loader.setResponseType('arraybuffer');\r\n                    loader.load(Utility.resolveURL(buffer.uri, options.path), function (buffer) {\r\n                        resolve(buffer);\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                console.warn('THREE.GLTF2Loader: ' + buffer.type + ' buffer type is not supported');\r\n            }\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadBufferViews = function () {\r\n        var json = this.json;\r\n        return this.withDependencies([\r\n            \"buffers\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.bufferViews, function (bufferView) {\r\n                var arraybuffer = dependencies.buffers[bufferView.buffer];\r\n                var byteLength = bufferView.byteLength || 0;\r\n                var byteOffset = bufferView.byteOffset || 0;\r\n                return arraybuffer.slice(byteOffset, byteOffset + byteLength);\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadAccessors = function () {\r\n        var json = this.json;\r\n        return this.withDependencies([\r\n            \"bufferViews\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.accessors, function (accessor) {\r\n                var arraybuffer = dependencies.bufferViews[accessor.bufferView];\r\n                var itemSize = WEBGL_TYPE_SIZES[accessor.type];\r\n                var TypedArray = WEBGL_COMPONENT_TYPES[accessor.componentType];\r\n                // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n                var elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n                var itemBytes = elementBytes * itemSize;\r\n                var byteStride = json.bufferViews[accessor.bufferView].byteStride;\r\n                var array;\r\n                // The buffer is not interleaved if the stride is the item size in bytes.\r\n                if (byteStride && byteStride !== itemBytes) {\r\n                    // Use the full buffer if it's interleaved.\r\n                    array = new TypedArray(arraybuffer);\r\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\r\n                    var ib = new THREE.InterleavedBuffer(array, byteStride / elementBytes);\r\n                    return new THREE.InterleavedBufferAttribute(ib, itemSize, accessor.byteOffset / elementBytes, false);\r\n                }\r\n                else {\r\n                    array = new TypedArray(arraybuffer, accessor.byteOffset, accessor.count * itemSize);\r\n                    return new THREE.BufferAttribute(array, itemSize);\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadTextures = function () {\r\n        var json = this.json;\r\n        var options = this.options;\r\n        return this.withDependencies([\r\n            \"bufferViews\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.textures, function (texture) {\r\n                if (texture.source !== undefined) {\r\n                    return new Promise(function (resolve) {\r\n                        var source = json.images[texture.source];\r\n                        var sourceUri = source.uri;\r\n                        var urlCreator;\r\n                        if (source.bufferView !== undefined) {\r\n                            var bufferView = dependencies.bufferViews[source.bufferView];\r\n                            var blob = new Blob([bufferView], { type: source.mimeType });\r\n                            urlCreator = window.URL;\r\n                            sourceUri = urlCreator.createObjectURL(blob);\r\n                        }\r\n                        var textureLoader = THREE.Loader.Handlers.get(sourceUri);\r\n                        if (textureLoader === null) {\r\n                            textureLoader = new THREE.TextureLoader();\r\n                        }\r\n                        textureLoader.setCrossOrigin(options.crossOrigin);\r\n                        textureLoader.load(Utility.resolveURL(sourceUri, options.path), function (_texture) {\r\n                            if (urlCreator !== undefined) {\r\n                                urlCreator.revokeObjectURL(sourceUri);\r\n                            }\r\n                            _texture.flipY = false;\r\n                            if (texture.name !== undefined)\r\n                                _texture.name = texture.name;\r\n                            _texture.format = texture.format !== undefined ? WEBGL_TEXTURE_FORMATS[texture.format] : THREE.RGBAFormat;\r\n                            if (texture.internalFormat !== undefined && _texture.format !== WEBGL_TEXTURE_FORMATS[texture.internalFormat]) {\r\n                                console.warn('THREE.GLTF2Loader: Three.js doesn\\'t support texture internalFormat which is different from texture format. ' +\r\n                                    'internalFormat will be forced to be the same value as format.');\r\n                            }\r\n                            _texture.type = texture.type !== undefined ? WEBGL_TEXTURE_DATATYPES[texture.type] : THREE.UnsignedByteType;\r\n                            var samplers = json.samplers || {};\r\n                            var sampler = samplers[texture.sampler] || {};\r\n                            _texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || THREE.LinearFilter;\r\n                            _texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || THREE.NearestMipMapLinearFilter;\r\n                            _texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || THREE.RepeatWrapping;\r\n                            _texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || THREE.RepeatWrapping;\r\n                            resolve(_texture);\r\n                        }, undefined, function () {\r\n                            resolve();\r\n                        });\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadMaterials = function () {\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        return this.withDependencies([\r\n            'shaders',\r\n            'textures'\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.materials, function (material) {\r\n                var materialType;\r\n                var materialParams = {};\r\n                var materialExtensions = material.extensions || {};\r\n                if (materialExtensions[EXTENSIONS.KHR_MATERIALS_COMMON]) {\r\n                    materialType = extensions[EXTENSIONS.KHR_MATERIALS_COMMON].getMaterialType(material);\r\n                    extensions[EXTENSIONS.KHR_MATERIALS_COMMON].extendParams(materialParams, material, dependencies);\r\n                }\r\n                else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\r\n                    materialType = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].getMaterialType(material);\r\n                    extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].extendParams(materialParams, material, dependencies);\r\n                }\r\n                else if (materialExtensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL]) {\r\n                    materialType = extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL].getMaterialType(material);\r\n                    extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL].extendParams(materialParams, material, dependencies);\r\n                }\r\n                else if (material.pbrMetallicRoughness !== undefined) {\r\n                    // Specification:\r\n                    // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n                    materialType = THREE.MeshStandardMaterial;\r\n                    var metallicRoughness = material.pbrMetallicRoughness;\r\n                    materialParams.color = new THREE.Color(1.0, 1.0, 1.0);\r\n                    materialParams.opacity = 1.0;\r\n                    if (Array.isArray(metallicRoughness.baseColorFactor)) {\r\n                        var array = metallicRoughness.baseColorFactor;\r\n                        materialParams.color.fromArray(array);\r\n                        materialParams.opacity = array[3];\r\n                    }\r\n                    if (metallicRoughness.baseColorTexture !== undefined) {\r\n                        materialParams.map = dependencies.textures[metallicRoughness.baseColorTexture.index];\r\n                    }\r\n                    materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n                    materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n                    if (metallicRoughness.metallicRoughnessTexture !== undefined) {\r\n                        var textureIndex = metallicRoughness.metallicRoughnessTexture.index;\r\n                        materialParams.metalnessMap = dependencies.textures[textureIndex];\r\n                        materialParams.roughnessMap = dependencies.textures[textureIndex];\r\n                    }\r\n                }\r\n                else {\r\n                    materialType = THREE.MeshPhongMaterial;\r\n                }\r\n                if (material.doubleSided === true) {\r\n                    materialParams.side = THREE.DoubleSide;\r\n                }\r\n                var alphaMode = material.alphaMode || ALPHA_MODES.OPAQUE;\r\n                if (alphaMode !== ALPHA_MODES.OPAQUE) {\r\n                    materialParams.transparent = true;\r\n                }\r\n                else {\r\n                    materialParams.transparent = false;\r\n                }\r\n                if (material.normalTexture !== undefined) {\r\n                    materialParams.normalMap = dependencies.textures[material.normalTexture.index];\r\n                }\r\n                if (material.occlusionTexture !== undefined) {\r\n                    materialParams.aoMap = dependencies.textures[material.occlusionTexture.index];\r\n                }\r\n                if (material.emissiveFactor !== undefined) {\r\n                    if (materialType === THREE.MeshBasicMaterial) {\r\n                        materialParams.color = new THREE.Color().fromArray(material.emissiveFactor);\r\n                    }\r\n                    else {\r\n                        materialParams.emissive = new THREE.Color().fromArray(material.emissiveFactor);\r\n                    }\r\n                }\r\n                if (material.emissiveTexture !== undefined) {\r\n                    if (materialType === THREE.MeshBasicMaterial) {\r\n                        materialParams.map = dependencies.textures[material.emissiveTexture.index];\r\n                    }\r\n                    else {\r\n                        materialParams.emissiveMap = dependencies.textures[material.emissiveTexture.index];\r\n                    }\r\n                }\r\n                var _material;\r\n                if (materialType === THREE.ShaderMaterial) {\r\n                    _material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\r\n                }\r\n                else {\r\n                    _material = new materialType(materialParams);\r\n                }\r\n                if (material.name !== undefined)\r\n                    _material.name = material.name;\r\n                return _material;\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadMeshes = function () {\r\n        var json = this.json;\r\n        return this.withDependencies([\r\n            \"accessors\",\r\n            \"materials\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.meshes, function (mesh) {\r\n                var group = new THREE.Group();\r\n                if (mesh.name !== undefined)\r\n                    group.name = mesh.name;\r\n                if (mesh.extras)\r\n                    group.userData = mesh.extras;\r\n                var primitives = mesh.primitives || [];\r\n                for (var name in primitives) {\r\n                    var primitive = primitives[name];\r\n                    var material = primitive.material !== undefined ? dependencies.materials[primitive.material] : Utility.createDefaultMaterial();\r\n                    var geometry;\r\n                    var meshNode;\r\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === undefined) {\r\n                        geometry = new THREE.BufferGeometry();\r\n                        var attributes = primitive.attributes;\r\n                        for (var attributeId in attributes) {\r\n                            var attributeEntry = attributes[attributeId];\r\n                            if (attributeEntry === undefined)\r\n                                return;\r\n                            var bufferAttribute = dependencies.accessors[attributeEntry];\r\n                            switch (attributeId) {\r\n                                case 'POSITION':\r\n                                    geometry.addAttribute('position', bufferAttribute);\r\n                                    break;\r\n                                case 'NORMAL':\r\n                                    geometry.addAttribute('normal', bufferAttribute);\r\n                                    break;\r\n                                case 'TEXCOORD_0':\r\n                                case 'TEXCOORD0':\r\n                                case 'TEXCOORD':\r\n                                    geometry.addAttribute('uv', bufferAttribute);\r\n                                    break;\r\n                                case 'TEXCOORD_1':\r\n                                    geometry.addAttribute('uv2', bufferAttribute);\r\n                                    break;\r\n                                case 'COLOR_0':\r\n                                case 'COLOR0':\r\n                                case 'COLOR':\r\n                                    geometry.addAttribute('color', bufferAttribute);\r\n                                    break;\r\n                                case 'WEIGHTS_0':\r\n                                case 'WEIGHT':// WEIGHT semantic deprecated.\r\n                                    geometry.addAttribute('skinWeight', bufferAttribute);\r\n                                    break;\r\n                                case 'JOINTS_0':\r\n                                case 'JOINT':// JOINT semantic deprecated.\r\n                                    geometry.addAttribute('skinIndex', bufferAttribute);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (primitive.indices !== undefined) {\r\n                            geometry.setIndex(dependencies.accessors[primitive.indices]);\r\n                        }\r\n                        if (material.aoMap !== undefined\r\n                            && geometry.attributes.uv2 === undefined\r\n                            && geometry.attributes.uv !== undefined) {\r\n                            console.log('GLTF2Loader: Duplicating UVs to support aoMap.');\r\n                            geometry.addAttribute('uv2', new THREE.BufferAttribute(geometry.attributes.uv.array, 2));\r\n                        }\r\n                        meshNode = new THREE.Mesh(geometry, material);\r\n                        meshNode.castShadow = true;\r\n                        if (primitive.targets !== undefined) {\r\n                            var targets = primitive.targets;\r\n                            var morphAttributes = geometry.morphAttributes;\r\n                            morphAttributes.position = [];\r\n                            morphAttributes.normal = [];\r\n                            material.morphTargets = true;\r\n                            for (var i = 0, il = targets.length; i < il; i++) {\r\n                                var target = targets[i];\r\n                                var attributeName = 'morphTarget' + i;\r\n                                var positionAttribute, normalAttribute;\r\n                                if (target.POSITION !== undefined) {\r\n                                    // Three.js morph formula is\r\n                                    //   position\r\n                                    //     + weight0 * ( morphTarget0 - position )\r\n                                    //     + weight1 * ( morphTarget1 - position )\r\n                                    //     ...\r\n                                    // while the glTF one is\r\n                                    //   position\r\n                                    //     + weight0 * morphTarget0\r\n                                    //     + weight1 * morphTarget1\r\n                                    //     ...\r\n                                    // then adding position to morphTarget.\r\n                                    // So morphTarget value will depend on mesh's position, then cloning attribute\r\n                                    // for the case if attribute is shared among two or more meshes.\r\n                                    positionAttribute = dependencies.accessors[target.POSITION].clone();\r\n                                    var position = geometry.attributes.position;\r\n                                    for (var j = 0, jl = positionAttribute.array.length; j < jl; j++) {\r\n                                        positionAttribute.array[j] += position.array[j];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    // Copying the original position not to affect the final position.\r\n                                    // See the formula above.\r\n                                    positionAttribute = geometry.attributes.position.clone();\r\n                                }\r\n                                if (target.NORMAL !== undefined) {\r\n                                    material.morphNormals = true;\r\n                                    // see target.POSITION's comment\r\n                                    normalAttribute = dependencies.accessors[target.NORMAL].clone();\r\n                                    var normal = geometry.attributes.normal;\r\n                                    for (var j = 0, jl = normalAttribute.array.length; j < jl; j++) {\r\n                                        normalAttribute.array[j] += normal.array[j];\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    normalAttribute = geometry.attributes.normal.clone();\r\n                                }\r\n                                // TODO: implement\r\n                                if (target.TANGENT !== undefined) {\r\n                                }\r\n                                positionAttribute.name = attributeName;\r\n                                normalAttribute.name = attributeName;\r\n                                morphAttributes.position.push(positionAttribute);\r\n                                morphAttributes.normal.push(normalAttribute);\r\n                            }\r\n                            meshNode.updateMorphTargets();\r\n                            if (mesh.weights !== undefined) {\r\n                                for (var i = 0, il = mesh.weights.length; i < il; i++) {\r\n                                    meshNode.morphTargetInfluences[i] = mesh.weights[i];\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\r\n                        geometry = new THREE.BufferGeometry();\r\n                        var attributes = primitive.attributes;\r\n                        for (var attributeId in attributes) {\r\n                            var attributeEntry = attributes[attributeId];\r\n                            if (!attributeEntry)\r\n                                return;\r\n                            var bufferAttribute = dependencies.accessors[attributeEntry];\r\n                            switch (attributeId) {\r\n                                case 'POSITION':\r\n                                    geometry.addAttribute('position', bufferAttribute);\r\n                                    break;\r\n                                case 'COLOR_0':\r\n                                case 'COLOR0':\r\n                                case 'COLOR':\r\n                                    geometry.addAttribute('color', bufferAttribute);\r\n                                    break;\r\n                            }\r\n                        }\r\n                        if (primitive.indices !== undefined) {\r\n                            geometry.setIndex(dependencies.accessors[primitive.indices]);\r\n                            meshNode = new THREE.LineSegments(geometry, material);\r\n                        }\r\n                        else {\r\n                            meshNode = new THREE.Line(geometry, material);\r\n                        }\r\n                    }\r\n                    else {\r\n                        throw new Error(\"Only triangular and line primitives are supported\");\r\n                    }\r\n                    if (geometry.attributes.color !== undefined) {\r\n                        material.vertexColors = THREE.VertexColors;\r\n                        material.needsUpdate = true;\r\n                    }\r\n                    meshNode.name = (name === \"0\" ? group.name : group.name + name);\r\n                    if (primitive.extras)\r\n                        meshNode.userData = primitive.extras;\r\n                    group.add(meshNode);\r\n                }\r\n                return group;\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadCameras = function () {\r\n        var json = this.json;\r\n        return Utility.each(json.cameras, function (camera) {\r\n            var _camera;\r\n            if (camera.type == \"perspective\" && camera.perspective) {\r\n                var yfov = camera.perspective.yfov;\r\n                var aspectRatio = camera.perspective.aspectRatio !== undefined ? camera.perspective.aspectRatio : 1;\r\n                // According to COLLADA spec...\r\n                // aspectRatio = xfov / yfov\r\n                var xfov = yfov * aspectRatio;\r\n                _camera = new THREE.PerspectiveCamera(THREE.Math.radToDeg(xfov), aspectRatio, camera.perspective.znear || 1, camera.perspective.zfar || 2e6);\r\n                if (camera.name !== undefined)\r\n                    _camera.name = camera.name;\r\n                if (camera.extras)\r\n                    _camera.userData = camera.extras;\r\n                return _camera;\r\n            }\r\n            else if (camera.type == \"orthographic\" && camera.orthographic) {\r\n                _camera = new THREE.OrthographicCamera(window.innerWidth / -2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / -2, camera.orthographic.znear, camera.orthographic.zfar);\r\n                if (camera.name !== undefined)\r\n                    _camera.name = camera.name;\r\n                if (camera.extras)\r\n                    _camera.userData = camera.extras;\r\n                return _camera;\r\n            }\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadSkins = function () {\r\n        var json = this.json;\r\n        return this.withDependencies([\r\n            \"accessors\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.skins, function (skin) {\r\n                var bindShapeMatrix = new THREE.Matrix4();\r\n                if (skin.bindShapeMatrix !== undefined)\r\n                    bindShapeMatrix.fromArray(skin.bindShapeMatrix);\r\n                var _skin = {\r\n                    bindShapeMatrix: bindShapeMatrix,\r\n                    joints: skin.joints,\r\n                    inverseBindMatrices: dependencies.accessors[skin.inverseBindMatrices]\r\n                };\r\n                return _skin;\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadAnimations = function () {\r\n        var json = this.json;\r\n        return this.withDependencies([\r\n            \"accessors\",\r\n            \"nodes\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.animations, function (animation, animationId) {\r\n                var tracks = [];\r\n                for (var channelId in animation.channels) {\r\n                    var channel = animation.channels[channelId];\r\n                    var sampler = animation.samplers[channel.sampler];\r\n                    if (sampler) {\r\n                        var target = channel.target;\r\n                        var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n                        var input = animation.parameters !== undefined ? animation.parameters[sampler.input] : sampler.input;\r\n                        var output = animation.parameters !== undefined ? animation.parameters[sampler.output] : sampler.output;\r\n                        var inputAccessor = dependencies.accessors[input];\r\n                        var outputAccessor = dependencies.accessors[output];\r\n                        var node = dependencies.nodes[name];\r\n                        if (node) {\r\n                            node.updateMatrix();\r\n                            node.matrixAutoUpdate = true;\r\n                            var TypedKeyframeTrack;\r\n                            switch (PATH_PROPERTIES[target.path]) {\r\n                                case PATH_PROPERTIES.weights:\r\n                                    TypedKeyframeTrack = THREE.NumberKeyframeTrack;\r\n                                    break;\r\n                                case PATH_PROPERTIES.rotation:\r\n                                    TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\r\n                                    break;\r\n                                case PATH_PROPERTIES.position:\r\n                                case PATH_PROPERTIES.scale:\r\n                                default:\r\n                                    TypedKeyframeTrack = THREE.VectorKeyframeTrack;\r\n                                    break;\r\n                            }\r\n                            var targetName = node.name ? node.name : node.uuid;\r\n                            var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : THREE.InterpolateLinear;\r\n                            var targetNames = [];\r\n                            if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\r\n                                // node should be THREE.Group here but\r\n                                // PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n                                // the property of a mesh object under node.\r\n                                // So finding targets here.\r\n                                node.traverse(function (object) {\r\n                                    if (object.isMesh === true && object.material.morphTargets === true) {\r\n                                        targetNames.push(object.name ? object.name : object.uuid);\r\n                                    }\r\n                                });\r\n                            }\r\n                            else {\r\n                                targetNames.push(targetName);\r\n                            }\r\n                            // KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n                            // buffers before creating a truncated copy to keep. Because buffers may\r\n                            // be reused by other tracks, make copies here.\r\n                            for (var i = 0, il = targetNames.length; i < il; i++) {\r\n                                tracks.push(new TypedKeyframeTrack(targetNames[i] + '.' + PATH_PROPERTIES[target.path], THREE.AnimationUtils.arraySlice(inputAccessor.array, 0, undefined), THREE.AnimationUtils.arraySlice(outputAccessor.array, 0, undefined), interpolation));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                var name = animation.name !== undefined ? animation.name : \"animation_\" + animationId;\r\n                return new THREE.AnimationClip(name, undefined, tracks);\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadNodes = function () {\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var scope = this;\r\n        var nodes = json.nodes || [];\r\n        var skins = json.skins || [];\r\n        // Nothing in the node definition indicates whether it is a Bone or an\r\n        // Object3D. Use the skins' joint references to mark bones.\r\n        Array.from(skins).forEach(function (skin) {\r\n            skin.joints.forEach(function (id) {\r\n                nodes[id].isBone = true;\r\n            });\r\n        });\r\n        return Utility.each(json.nodes, function (node) {\r\n            var matrix = new THREE.Matrix4();\r\n            var _node = node.isBone === true ? new THREE.Bone(undefined) : new THREE.Object3D();\r\n            if (node.name !== undefined) {\r\n                _node.name = node.name.replace(/\\s/g, '_').replace(/[^\\w-]/g, '');\r\n            }\r\n            if (node.extras)\r\n                _node.userData = node.extras;\r\n            if (node.matrix !== undefined) {\r\n                matrix.fromArray(node.matrix);\r\n                _node.applyMatrix(matrix);\r\n            }\r\n            else {\r\n                if (node.translation !== undefined) {\r\n                    _node.position.fromArray(node.translation);\r\n                }\r\n                if (node.rotation !== undefined) {\r\n                    _node.quaternion.fromArray(node.rotation);\r\n                }\r\n                if (node.scale !== undefined) {\r\n                    _node.scale.fromArray(node.scale);\r\n                }\r\n            }\r\n            return _node;\r\n        }).then(function (__nodes) {\r\n            return scope.withDependencies([\r\n                \"meshes\",\r\n                \"skins\",\r\n                \"cameras\"\r\n            ]).then(function (dependencies) {\r\n                return Utility.each(__nodes, function (_node, nodeId) {\r\n                    var node = json.nodes[nodeId];\r\n                    var meshes;\r\n                    if (node.mesh !== undefined) {\r\n                        meshes = [node.mesh];\r\n                    }\r\n                    else if (node.meshes !== undefined) {\r\n                        console.warn('GLTF2Loader: Legacy glTF file detected. Nodes may have no more than 1 mesh.');\r\n                        meshes = node.meshes;\r\n                    }\r\n                    if (meshes !== undefined) {\r\n                        for (var meshId in meshes) {\r\n                            var mesh = meshes[meshId];\r\n                            var group = dependencies.meshes[mesh];\r\n                            if (group === undefined) {\r\n                                console.warn('GLTF2Loader: Couldn\\'t find node \"' + mesh + '\".');\r\n                                continue;\r\n                            }\r\n                            for (var childrenId in group.children) {\r\n                                var child = group.children[childrenId];\r\n                                // clone Mesh to add to _node\r\n                                var originalMaterial = child.material;\r\n                                var originalGeometry = child.geometry;\r\n                                var originalUserData = child.userData;\r\n                                var originalName = child.name;\r\n                                var material;\r\n                                if (originalMaterial.isDeferredShaderMaterial) {\r\n                                    originalMaterial = material = originalMaterial.create();\r\n                                }\r\n                                else {\r\n                                    material = originalMaterial;\r\n                                }\r\n                                switch (child.type) {\r\n                                    case 'LineSegments':\r\n                                        child = new THREE.LineSegments(originalGeometry, material);\r\n                                        break;\r\n                                    case 'LineLoop':\r\n                                        child = new THREE.Line(originalGeometry, material);\r\n                                        break;\r\n                                    case 'Line':\r\n                                        child = new THREE.Line(originalGeometry, material);\r\n                                        break;\r\n                                    default:\r\n                                        child = new THREE.Mesh(originalGeometry, material);\r\n                                }\r\n                                child.castShadow = true;\r\n                                child.userData = originalUserData;\r\n                                child.name = originalName;\r\n                                var skinEntry;\r\n                                if (node.skin !== undefined) {\r\n                                    skinEntry = dependencies.skins[node.skin];\r\n                                }\r\n                                // Replace Mesh with SkinnedMesh in library\r\n                                if (skinEntry) {\r\n                                    var geometry = originalGeometry;\r\n                                    material = originalMaterial;\r\n                                    material.skinning = true;\r\n                                    child = new THREE.SkinnedMesh(geometry, material, false);\r\n                                    child.castShadow = true;\r\n                                    child.userData = originalUserData;\r\n                                    child.name = originalName;\r\n                                    var bones = [];\r\n                                    var boneInverses = [];\r\n                                    for (var i = 0, l = skinEntry.joints.length; i < l; i++) {\r\n                                        var jointId = skinEntry.joints[i];\r\n                                        var jointNode = __nodes[jointId];\r\n                                        if (jointNode) {\r\n                                            bones.push(jointNode);\r\n                                            var m = skinEntry.inverseBindMatrices.array;\r\n                                            var mat = new THREE.Matrix4().fromArray(m, i * 16);\r\n                                            boneInverses.push(mat);\r\n                                        }\r\n                                        else {\r\n                                            console.warn(\"WARNING: joint: '\" + jointId + \"' could not be found\");\r\n                                        }\r\n                                    }\r\n                                    child.bind(new THREE.Skeleton(bones, boneInverses, false), skinEntry.bindShapeMatrix);\r\n                                    var buildBoneGraph = function (parentJson, parentObject, property) {\r\n                                        var children = parentJson[property];\r\n                                        if (children === undefined)\r\n                                            return;\r\n                                        for (var i = 0, il = children.length; i < il; i++) {\r\n                                            var nodeId = children[i];\r\n                                            var bone = __nodes[nodeId];\r\n                                            var boneJson = json.nodes[nodeId];\r\n                                            if (bone !== undefined && bone.isBone === true && boneJson !== undefined) {\r\n                                                parentObject.add(bone);\r\n                                                buildBoneGraph(boneJson, bone, 'children');\r\n                                            }\r\n                                        }\r\n                                    };\r\n                                    buildBoneGraph(node, child, 'skeletons');\r\n                                }\r\n                                _node.add(child);\r\n                            }\r\n                        }\r\n                    }\r\n                    if (node.camera !== undefined) {\r\n                        var camera = dependencies.cameras[node.camera];\r\n                        _node.add(camera);\r\n                    }\r\n                    if (node.extensions\r\n                        && node.extensions[EXTENSIONS.KHR_LIGHTS]\r\n                        && node.extensions[EXTENSIONS.KHR_LIGHTS].light !== undefined) {\r\n                        var lights = extensions[EXTENSIONS.KHR_LIGHTS].lights;\r\n                        _node.add(lights[node.extensions[EXTENSIONS.KHR_LIGHTS].light]);\r\n                    }\r\n                    return _node;\r\n                });\r\n            });\r\n        });\r\n    };\r\n    GLTFParser.prototype.loadScenes = function () {\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        // scene node hierachy builder\r\n        function buildNodeHierachy(nodeId, parentObject, allNodes) {\r\n            var _node = allNodes[nodeId];\r\n            parentObject.add(_node);\r\n            var node = json.nodes[nodeId];\r\n            if (node.children) {\r\n                var children = node.children;\r\n                for (var i = 0, l = children.length; i < l; i++) {\r\n                    var child = children[i];\r\n                    buildNodeHierachy(child, _node, allNodes);\r\n                }\r\n            }\r\n        }\r\n        return this.withDependencies([\r\n            \"nodes\"\r\n        ]).then(function (dependencies) {\r\n            return Utility.each(json.scenes, function (scene) {\r\n                var _scene = new THREE.Scene();\r\n                if (scene.name !== undefined)\r\n                    _scene.name = scene.name;\r\n                if (scene.extras)\r\n                    _scene.userData = scene.extras;\r\n                var nodes = scene.nodes || [];\r\n                for (var i = 0, l = nodes.length; i < l; i++) {\r\n                    var nodeId = nodes[i];\r\n                    buildNodeHierachy(nodeId, _scene, dependencies.nodes);\r\n                }\r\n                _scene.traverse(function (child) {\r\n                    // Register raw material meshes with GLTF2Loader.Shaders\r\n                    if (child.material && child.material.isRawShaderMaterial) {\r\n                        child.gltfShader = new GLTFShader(child, dependencies.nodes);\r\n                        child.onBeforeRender = function (renderer, scene, camera) {\r\n                            this.gltfShader.update(scene, camera);\r\n                        };\r\n                    }\r\n                    // for Specular-Glossiness.\r\n                    if (child.material && child.material.type === 'ShaderMaterial') {\r\n                        child.onBeforeRender = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;\r\n                    }\r\n                });\r\n                // Ambient lighting, if present, is always attached to the scene root.\r\n                if (scene.extensions\r\n                    && scene.extensions[EXTENSIONS.KHR_LIGHTS]\r\n                    && scene.extensions[EXTENSIONS.KHR_LIGHTS].light !== undefined) {\r\n                    var lights = extensions[EXTENSIONS.KHR_LIGHTS].lights;\r\n                    _scene.add(lights[scene.extensions[EXTENSIONS.KHR_LIGHTS].light]);\r\n                }\r\n                return _scene;\r\n            });\r\n        });\r\n    };\r\n    return GLTFParser;\r\n}());\r\n\n\n/***/ }),\n\n/***/ 702:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 703:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<main> <md-toolbar> <span>UEE Tactical Communications Interface</span> <span class=spacer></span> <button md-raised-button color=primary routerlink=/inventory routerlinkactive=inventoryActive (click)=inventory() skiplocationchange> <i class=material-icons>view_list</i> Inventory </button> <button md-raised-button color=primary routerlink=/simulator routerlinkactive=simulatorActive (click)=simulator() skiplocationchange> Simulate <i class=material-icons>play_circle_outline</i> </button> </md-toolbar> <router-outlet></router-outlet> </main>\";\n\n/***/ }),\n\n/***/ 704:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(705);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n\n/***/ 705:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(67)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".spacer{flex:1 1 auto}.inventoryActive,.simulatorActive{display:none}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 706:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div> <div class=ship-size-title>Small &lt;30m</div> <md-grid-list [cols]=\\\"cols | async\\\" guttersize=16px rowheight=300px class=ships-small> <md-grid-tile *ngfor=\\\"let s of filterSize(ships, 'S')\\\"> <ship-card [ship]=s> </ship-card> </md-grid-tile> <md-grid-tile> <button md-fab color=none (click)=addS()><md-icon>add</md-icon></button> </md-grid-tile> </md-grid-list> <div class=ship-size-title>Medium &lt;100m</div> <md-grid-list [cols]=\\\"cols | async\\\" guttersize=16px rowheight=300px class=ships-medium> <md-grid-tile *ngfor=\\\"let s of filterSize(ships, 'M')\\\"> <ship-card [ship]=s> </ship-card> </md-grid-tile> <md-grid-tile> <button md-fab color=none (click)=addM()><md-icon>add</md-icon></button> </md-grid-tile> </md-grid-list> <div class=ship-size-title>Large &gt;100m</div> <md-grid-list [cols]=\\\"cols | async\\\" guttersize=16px rowheight=300px class=ships-large> <md-grid-tile *ngfor=\\\"let s of filterSize(ships, 'L')\\\"> <ship-card [ship]=s> </ship-card> </md-grid-tile> <md-grid-tile> <button md-fab color=none (click)=addL()><md-icon>add</md-icon></button> </md-grid-tile> </md-grid-list> </div>\";\n\n/***/ }),\n\n/***/ 707:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(708);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n\n/***/ 708:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(67)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".ships-small{background-color:#ddd}.ships-medium{background-color:#aaa}.ships-large{background-color:#777}.ship-size-title{padding:10px;padding-left:30px;background-color:#333;color:#eee}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 709:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar router_1 = __webpack_require__(43);\r\nvar ship_data_1 = __webpack_require__(110);\r\nvar ship_service_1 = __webpack_require__(72);\r\nvar ShipCardComponent = (function () {\r\n    function ShipCardComponent(shipService, router) {\r\n        this.shipService = shipService;\r\n        this.router = router;\r\n    }\r\n    ShipCardComponent.prototype.delete = function (event) {\r\n        this.shipService.deleteShip(this.ship);\r\n        this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\r\n    };\r\n    ShipCardComponent.prototype.onShipAmountChange = function () {\r\n        this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\r\n    };\r\n    __decorate([\r\n        core_1.Input(),\r\n        __metadata(\"design:type\", ship_data_1.ShipData)\r\n    ], ShipCardComponent.prototype, \"ship\", void 0);\r\n    ShipCardComponent = __decorate([\r\n        core_1.Component({\r\n            selector: 'ship-card',\r\n            template: __webpack_require__(710),\r\n            styles: [__webpack_require__(711)]\r\n        }),\r\n        __metadata(\"design:paramtypes\", [ship_service_1.ShipService, router_1.Router])\r\n    ], ShipCardComponent);\r\n    return ShipCardComponent;\r\n}());\r\nexports.ShipCardComponent = ShipCardComponent;\r\n\n\n/***/ }),\n\n/***/ 710:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<md-card> <md-card-header> <md-card-title class=ship-title>{{ship.origin.type}}</md-card-title> <button md-icon-button [mdmenutriggerfor]=configMenu class=ship-menu> <md-icon>more_vert</md-icon> </button> <md-menu #configmenu> <button md-menu-item (click)=delete($event)> <md-icon>delete</md-icon> <span>Delete</span> </button> </md-menu> </md-card-header> <img md-card-image src={{shipService.getImage(ship.origin)}} class=ship-thumbnail> <md-card-footer class=ship-amount> <div style=display:inline-block;width:200px> <md-slider max=5 min=1 step=1 [(ngmodel)]=ship.amount thumb-label=1 (change)=onShipAmountChange()> </md-slider> <button md-mini-fab color=none style=right:-5px>{{ship.amount}}</button> </div> </md-card-footer> </md-card>\";\n\n/***/ }),\n\n/***/ 711:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(712);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n\n/***/ 712:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(67)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".ship-title{width:130px}.ship-thumbnail{width:200px;height:200px}.ship-menu{position:absolute;right:10px;top:10px}.ship-amount{width:0;bottom:0;left:10px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 713:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<md-card class=ship-card> <md-card-header> <md-card-title> <h3>Add Ship</h3> </md-card-title> </md-card-header> <md-card-content class=ship-content> <form> <md-icon>star_rate</md-icon> <md-select placeholder=\\\"Ship Type\\\" [(ngmodel)]=selectedModel name=ship (change)=onShipTypeChange()> <md-option *ngfor=\\\"let model of filterSize(models)\\\" [value]=model> {{model.type}} </md-option> </md-select> <md-hint [hidden]=!typeExistsError style=color:red> <div> This type of ship already exists in the Inventory </div> </md-hint> </form> <img md-card-image src={{shipService.getImage(selectedModel)}} class=ship-thumbnail *ngif=selectedModel> </md-card-content> <md-card-footer class=ship-actions> <button md-raised-button (click)=goBack() class=ship-action-cancel>Cancel</button> <button md-raised-button (click)=addShip() color=accent>Add</button> </md-card-footer> </md-card>\";\n\n/***/ }),\n\n/***/ 714:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(715);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n\n/***/ 715:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(67)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".ship-card{width:300px;height:380px;margin:0 auto}.ship-content{padding:20px;text-align:center}.ship-thumbnail{margin-top:20px;width:200px;height:200px}.ship-actions{text-align:right}.ship-action-cancel{margin-right:10px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 716:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar THREE = __webpack_require__(44);\r\nvar Pointer_1 = __webpack_require__(717);\r\nvar ObjectControls = (function () {\r\n    function ObjectControls(camera, container, htmlContainer, objects, projectionMap, scene) {\r\n        var _this = this;\r\n        this.camera = camera;\r\n        this.container = container;\r\n        this.htmlContainer = htmlContainer;\r\n        this.objects = objects;\r\n        this.projectionMap = projectionMap;\r\n        this.scene = scene;\r\n        this.fixed = new THREE.Vector3(0, 0, 0);\r\n        this.displacing = true;\r\n        this._DisplaceFocused = null;\r\n        this.focused = null;\r\n        this.focusedpart = null;\r\n        this._DisplaceMouseOvered = null;\r\n        this.mouseovered = null;\r\n        this.mouseoveredpart = null;\r\n        this._mouse = new THREE.Vector2();\r\n        this.enabled = true;\r\n        this.item = null;\r\n        this._intersects = [];\r\n        this.previous = new THREE.Vector3(0, 0, 0);\r\n        this.moveScene = false;\r\n        this.x = 0.0;\r\n        this.z = 0.0;\r\n        this.lx = 0.0;\r\n        this.lz = 0.0;\r\n        this.moveMax = 100;\r\n        this.selected = null;\r\n        this.pointer = new Pointer_1.Pointer(this.camera);\r\n        this.move = function () { this.container.style.cursor = 'move'; };\r\n        this.mouseover = function () {\r\n            if (this.selected) {\r\n                this.container.style.cursor = 'move';\r\n            }\r\n            else {\r\n                this.container.style.cursor = 'pointer';\r\n            }\r\n        };\r\n        this.mouseout = function () { this.container.style.cursor = 'auto'; };\r\n        this.mouseup = function () { this.container.style.cursor = 'auto'; };\r\n        this.onclick = function () { };\r\n        this.getMousePos = function (event) {\r\n            _this.x = event.offsetX == undefined ? event.layerX : event.offsetX;\r\n            _this.z = event.offsetY == undefined ? event.layerY : event.offsetY;\r\n            var rect = _this.container.getBoundingClientRect();\r\n            _this._mouse.x = ((_this.x) / rect.width) * 2 - 1;\r\n            _this._mouse.y = -((_this.z) / rect.height) * 2 + 1;\r\n            var vector = new THREE.Vector3(_this._mouse.x, _this._mouse.y, 0.5);\r\n            return vector;\r\n        };\r\n        this.onContainerMouseDown = function (event) {\r\n            if (_this.selected) {\r\n                var raycaster = _this._rayGet();\r\n                _this._intersects = raycaster.intersectObjects(_this.objects, true);\r\n                if (_this._intersects.length > 0) {\r\n                    _this.setFocus(_this._intersects[0].object);\r\n                    _this.onclick();\r\n                }\r\n            }\r\n            else if (event.ctrlKey) {\r\n                _this.setFocusNull();\r\n                _this.moveScene = true;\r\n                _this.x = event.offsetX == undefined ? event.layerX : event.offsetX;\r\n                _this.z = event.offsetY == undefined ? event.layerY : event.offsetY;\r\n                _this.lx = _this.x;\r\n                _this.lz = _this.z;\r\n            }\r\n        };\r\n        this.onContainerMouseUp = function (event) {\r\n            event.preventDefault();\r\n            _this.moveScene = false;\r\n            if (_this.focused) {\r\n                var userData = _this.focused.parent.userData;\r\n                var x = Math.round(_this.focused.parent.position.x * 10) / 10;\r\n                _this.focused.parent.position.x = x;\r\n                userData.shipData.instances[userData.id].position.x = x;\r\n                var z = Math.round(_this.focused.parent.position.z * 10) / 10;\r\n                _this.focused.parent.position.z = z;\r\n                userData.shipData.instances[userData.id].position.z = z;\r\n                _this.mouseup();\r\n                _this._DisplaceFocused = null;\r\n                _this.focused = null;\r\n            }\r\n            else {\r\n                var raycaster = _this._rayGet();\r\n                _this._intersects = raycaster.intersectObjects(_this.objects, true);\r\n                if (_this._intersects.length > 0) {\r\n                    _this.selected = _this._intersects[0].object;\r\n                    _this.pointer.show(_this.htmlContainer, _this.scene, _this.selected.parent.userData.shipData);\r\n                }\r\n                else if (_this.selected) {\r\n                    _this.hideSelected();\r\n                }\r\n            }\r\n        };\r\n        this.onDocumentMouseWheel = function (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            var delta;\r\n            switch (event.deltaMode) {\r\n                case 2:\r\n                    // Zoom in pages\r\n                    delta = event.deltaY * 0.025;\r\n                    break;\r\n                case 1:\r\n                    // Zoom in lines\r\n                    delta = event.deltaY * 0.01;\r\n                    break;\r\n                default:\r\n                    // undefined, 0, assume pixels\r\n                    delta = event.deltaY * 0.00025;\r\n                    break;\r\n            }\r\n            var zoomSpeed = 20.0;\r\n            if (_this.camera.zoom > 3.0) {\r\n                zoomSpeed += 10.0;\r\n            }\r\n            _this.camera.zoom -= delta * zoomSpeed;\r\n            if (_this.camera.zoom < 1.0) {\r\n                _this.camera.zoom = 1.0;\r\n            }\r\n            else if (_this.camera.zoom > 7.0) {\r\n                _this.camera.zoom = 7.0;\r\n            }\r\n            _this.camera.updateProjectionMatrix();\r\n        };\r\n    }\r\n    ObjectControls.prototype.activate = function () {\r\n        this.container.addEventListener('mousedown', this.onContainerMouseDown, false);\r\n        this.container.addEventListener('mousemove', this.getMousePos, false);\r\n        this.container.addEventListener('mouseup', this.onContainerMouseUp, false);\r\n        this.container.addEventListener('mousewheel', this.onDocumentMouseWheel, false);\r\n    };\r\n    ObjectControls.prototype.deactivate = function () {\r\n        this.container.removeEventListener('mousedown', this.onContainerMouseDown, false);\r\n        this.container.removeEventListener('mousemove', this.getMousePos, false);\r\n        this.container.removeEventListener('mouseup', this.onContainerMouseUp, false);\r\n        this.container.removeEventListener('mousewheel', this.onDocumentMouseWheel, false);\r\n    };\r\n    ObjectControls.prototype.update = function () {\r\n        this.onContainerMouseMove();\r\n    };\r\n    ObjectControls.prototype.updateAfter = function (screenWidth, screenHeight) {\r\n        if (this.selected) {\r\n            this.pointer.update(this.selected.parent.position.clone(), screenWidth, screenHeight);\r\n        }\r\n    };\r\n    ObjectControls.prototype.returnPrevious = function () {\r\n        this._selGetPos(this.previous);\r\n    };\r\n    ObjectControls.prototype.setFocus = function (object) {\r\n        this._DisplaceFocused = object;\r\n        this.item = this.objects.indexOf(object);\r\n        if (object.userData.parent) {\r\n            this.focused = object.userData.parent;\r\n            this.focusedpart = this._DisplaceFocused;\r\n            this.previous.copy(this.focused.parent.position);\r\n        }\r\n        else {\r\n            this.focused = object;\r\n            this.focusedpart = null;\r\n            this.previous.copy(this.focused.parent.position);\r\n        }\r\n        // selection\r\n        if (this.focused !== this.selected) {\r\n            this.focused = null;\r\n            this.selected = null;\r\n        }\r\n    };\r\n    ObjectControls.prototype.setFocusNull = function () {\r\n        this._DisplaceFocused = null;\r\n        this.focused = null;\r\n        this.focusedpart = null;\r\n        this.item = null;\r\n    };\r\n    ObjectControls.prototype.select = function (object) {\r\n        this._DisplaceMouseOvered = object;\r\n        if (object.userData.parent) {\r\n            this.mouseovered = object.userData.parent;\r\n            this.mouseoveredpart = this._DisplaceMouseOvered;\r\n        }\r\n        else {\r\n            this.mouseovered = object;\r\n            this.mouseoveredpart = null;\r\n        }\r\n    };\r\n    ObjectControls.prototype._setSelectNull = function () {\r\n        this._DisplaceMouseOvered = null;\r\n        this.mouseovered = null;\r\n        this.mouseoveredpart = null;\r\n    };\r\n    ObjectControls.prototype._selGetPos = function (a) {\r\n        this.focused.parent.position.copy(a);\r\n    };\r\n    ObjectControls.prototype._rayGet = function () {\r\n        var vector = new THREE.Vector3(this._mouse.x, this._mouse.y, 0.5);\r\n        vector.unproject(this.camera);\r\n        var raycaster = new THREE.Raycaster(this.camera.position, vector.sub(this.camera.position).normalize());\r\n        return raycaster;\r\n    };\r\n    ObjectControls.prototype.onContainerMouseMove = function () {\r\n        var raycaster = this._rayGet();\r\n        if (this.focused) {\r\n            if (this.displacing) {\r\n                this.intersectsMap = raycaster.intersectObject(this.projectionMap);\r\n                try {\r\n                    var pos = new THREE.Vector3().copy(this.intersectsMap[0].point);\r\n                    if (this.fixed.x == 1) {\r\n                        pos.x = this.previous.x;\r\n                    }\r\n                    ;\r\n                    if (this.fixed.y == 1) {\r\n                        pos.y = this.previous.y;\r\n                    }\r\n                    ;\r\n                    if (this.fixed.z == 1) {\r\n                        pos.z = this.previous.z;\r\n                    }\r\n                    ;\r\n                    pos.x -= this.scene.position.x;\r\n                    pos.z -= this.scene.position.z;\r\n                    this._selGetPos(pos);\r\n                }\r\n                catch (err) { }\r\n                //this.move(); this._selGetPos(this.focused.parent.position);\r\n            }\r\n        }\r\n        else {\r\n            this._intersects = raycaster.intersectObjects(this.objects, true);\r\n            if (this._intersects.length > 0) {\r\n                if (this.mouseovered) {\r\n                    if (this._DisplaceMouseOvered != this._intersects[0].object) {\r\n                        this.mouseout();\r\n                        this.select(this._intersects[0].object);\r\n                        this.mouseover();\r\n                    }\r\n                    else\r\n                        this.mouseover();\r\n                }\r\n                else {\r\n                    this.select(this._intersects[0].object);\r\n                    this.mouseover();\r\n                }\r\n            }\r\n            else {\r\n                if (this._DisplaceMouseOvered) {\r\n                    this.mouseout();\r\n                    this._setSelectNull();\r\n                }\r\n                if (this.moveScene) {\r\n                    var dx = this.x - this.lx;\r\n                    var dz = this.z - this.lz;\r\n                    this.scene.position.x -= dx / 5.0;\r\n                    if (this.scene.position.x > this.moveMax) {\r\n                        this.scene.position.x = this.moveMax;\r\n                    }\r\n                    else if (this.scene.position.x < -this.moveMax) {\r\n                        this.scene.position.x = -this.moveMax;\r\n                    }\r\n                    this.scene.position.z -= dz / 5.0;\r\n                    if (this.scene.position.z > this.moveMax) {\r\n                        this.scene.position.z = this.moveMax;\r\n                    }\r\n                    else if (this.scene.position.z < -this.moveMax) {\r\n                        this.scene.position.z = -this.moveMax;\r\n                    }\r\n                    this.lx = this.x;\r\n                    this.lz = this.z;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ObjectControls.prototype.hideSelected = function () {\r\n        this.pointer.hide(this.htmlContainer, this.scene);\r\n        this.selected = null;\r\n    };\r\n    return ObjectControls;\r\n}());\r\nexports.ObjectControls = ObjectControls;\r\n\n\n/***/ }),\n\n/***/ 717:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TextLabel_1 = __webpack_require__(718);\r\nvar three_1 = __webpack_require__(44);\r\nvar Pointer = (function () {\r\n    function Pointer(camera) {\r\n        this.camera = camera;\r\n        this.title = new TextLabel_1.TextLabel(this.camera);\r\n        this.visible = true;\r\n        var geometry = new three_1.Geometry();\r\n        geometry.vertices.push(new three_1.Vector3(0, 0, 0));\r\n        geometry.vertices.push(new three_1.Vector3(-3, 10, 0));\r\n        geometry.vertices.push(new three_1.Vector3(-12, 10, 0));\r\n        var l = new three_1.Line(geometry, new three_1.LineBasicMaterial({ transparent: true, opacity: 0.8, linewidth: 2 }));\r\n        this.line = new three_1.Object3D();\r\n        this.line.add(l);\r\n    }\r\n    Pointer.prototype.show = function (container, scene, shipData) {\r\n        this.title.setLabel(shipData.origin.type);\r\n        this.title.htmlElement.style.display = 'block';\r\n        scene.add(this.line);\r\n        this.visible = true;\r\n    };\r\n    Pointer.prototype.hide = function (container, scene) {\r\n        this.visible = false;\r\n        this.title.htmlElement.style.display = 'none';\r\n        scene.remove(this.line);\r\n    };\r\n    Pointer.prototype.update = function (position, screenWidth, screenHeight) {\r\n        if (this.visible) {\r\n            this.line.position.x = position.x;\r\n            this.line.position.y = position.y;\r\n            this.line.position.z = position.z;\r\n            this.title.update(position, screenWidth, screenHeight);\r\n        }\r\n    };\r\n    return Pointer;\r\n}());\r\nexports.Pointer = Pointer;\r\n\n\n/***/ }),\n\n/***/ 718:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar TextLabel = (function () {\r\n    function TextLabel(camera) {\r\n        this.camera = camera;\r\n        this.htmlElement = document.getElementById('text-label');\r\n    }\r\n    TextLabel.prototype.setLabel = function (label) {\r\n        this.htmlElement.innerHTML = \"<span class=\\\"mat-button-wrapper\\\">\" + label + \"</span>\";\r\n        this.htmlElement.style.width = 'auto';\r\n        this.originalWidth = null;\r\n    };\r\n    TextLabel.prototype.update = function (position, screenWidth, screenHeight) {\r\n        var coords2d = this._get2DCoords(position, this.camera, screenWidth, screenHeight);\r\n        this.htmlElement.style.left = coords2d.x + 'px';\r\n        this.htmlElement.style.top = coords2d.y + 'px';\r\n        this.htmlElement.style.fontSize = this.camera.zoom * 16 + 'px';\r\n        this.htmlElement.style.height = this.camera.zoom * 36 + 'px';\r\n        if (!this.originalWidth) {\r\n            this.originalWidth = this.htmlElement.clientWidth;\r\n        }\r\n        this.htmlElement.style.width = this.camera.zoom * this.originalWidth + 'px';\r\n        return coords2d;\r\n    };\r\n    TextLabel.prototype._get2DCoords = function (position, camera, screenWidth, screenHeight) {\r\n        var vector = position.project(camera);\r\n        var widthHalf = 0.5 * screenWidth;\r\n        var heightHalf = 0.5 * screenHeight;\r\n        vector.x = (vector.x * widthHalf) + widthHalf + 30 * camera.zoom;\r\n        vector.y = -(vector.y * heightHalf) + heightHalf - camera.zoom * (camera.zoom + 45);\r\n        return vector;\r\n    };\r\n    return TextLabel;\r\n}());\r\nexports.TextLabel = TextLabel;\r\n\n\n/***/ }),\n\n/***/ 719:\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div> <md-sidenav-container> <md-sidenav mode=over opened=false align=end class=info (close-start)=onCloseShipInfo() #shipinfo> <md-card *ngif=shipData> <md-card-header> <img md-card-avatar src={{shipService.getImage(shipData)}}> <md-card-title>{{shipData.type}}</md-card-title> <md-card-subtitle>Ship Info</md-card-subtitle> </md-card-header> <md-card-content> <md-list> <md-list-item> <md-icon md-list-icon>people</md-icon> <h4 md-line>Max Crew</h4> <p md-line>{{shipData.maxcrew}}</p> </md-list-item> <md-divider></md-divider> <md-list-item> <md-icon md-list-icon>layers</md-icon> <h4 md-line>Cargo Capacity</h4> <p md-line>{{shipData.cargo}}</p> </md-list-item> </md-list> </md-card-content> </md-card> </md-sidenav> <div class=container #container> <button md-mini-fab color=none (click)=saveImage() class=save-image><md-icon>photo_camera</md-icon></button> <button md-mini-fab color=none (click)=toggleFullscreen() class=fullscreen><md-icon>fullscreen</md-icon></button> <button id=text-label md-raised-button color=none (click)=showInfo()></button> <section class=loader [hidden]=loaded> <h3>Loading ...</h3> <md-progress-bar color=primary mode=determinate [value]=loadingProgress> </md-progress-bar> </section> </div> </md-sidenav-container> </div>\";\n\n/***/ }),\n\n/***/ 72:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar router_1 = __webpack_require__(43);\r\nvar three_1 = __webpack_require__(44);\r\nvar ship_data_1 = __webpack_require__(110);\r\nvar scene_service_1 = __webpack_require__(152);\r\nvar ShipService = (function () {\r\n    function ShipService(sceneService, route) {\r\n        this.sceneService = sceneService;\r\n        this.route = route;\r\n        this.ships = [];\r\n        this.models = new Map();\r\n        this.modelsArray = [\r\n            {\r\n                \"type\": \"F7C Hornet\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 1,\r\n                \"cargo\": 13\r\n            },\r\n            {\r\n                \"type\": \"Caterpillar\",\r\n                \"size\": \"M\",\r\n                \"scale\": 0.0025,\r\n                \"maxcrew\": 5,\r\n                \"cargo\": 512\r\n            },\r\n            {\r\n                \"type\": \"Reclaimer\",\r\n                \"size\": \"L\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 5,\r\n                \"cargo\": 6555\r\n            },\r\n            {\r\n                \"type\": \"Aurora LN\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 1,\r\n                \"cargo\": 13\r\n            },\r\n            {\r\n                \"type\": \"Sabre\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 1,\r\n                \"cargo\": 0\r\n            },\r\n            {\r\n                \"type\": \"Avenger Stalker\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.03,\r\n                \"maxcrew\": 1,\r\n                \"cargo\": 4\r\n            },\r\n            {\r\n                \"type\": \"Herald\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 2,\r\n                \"cargo\": 0\r\n            },\r\n            {\r\n                \"type\": \"Constellation Andromeda\",\r\n                \"size\": \"M\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 5,\r\n                \"cargo\": 134\r\n            },\r\n            {\r\n                \"type\": \"Prospector\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 1,\r\n                \"cargo\": 128\r\n            },\r\n            {\r\n                \"type\": \"Gladius\",\r\n                \"size\": \"S\",\r\n                \"scale\": 0.003,\r\n                \"maxcrew\": 1,\r\n                \"cargo\": 0\r\n            }\r\n        ];\r\n        for (var _i = 0, _a = this.modelsArray; _i < _a.length; _i++) {\r\n            var model = _a[_i];\r\n            this.models[model.type] = model;\r\n        }\r\n        ;\r\n    }\r\n    ShipService.prototype.getImage = function (ship) {\r\n        return \"assets/ships/thumbnails/\" + ship.type + \".png\";\r\n    };\r\n    ShipService.prototype.getModel3d = function (ship) {\r\n        return \"assets/ships/\" + ship.type + \".gltf\";\r\n    };\r\n    ShipService.prototype.addShip = function (data) {\r\n        var found = false;\r\n        for (var _i = 0, _a = this.ships; _i < _a.length; _i++) {\r\n            var s = _a[_i];\r\n            if (s.origin.type == data.origin.type) {\r\n                found = true;\r\n                break;\r\n            }\r\n        }\r\n        ;\r\n        if (found) {\r\n            return false;\r\n        }\r\n        else {\r\n            this.ships.push(data);\r\n            this.sceneService.addShipModelFor(this.getModel3d(data.origin), data);\r\n            return true;\r\n        }\r\n    };\r\n    ShipService.prototype.deleteShip = function (data) {\r\n        var index = this.ships.indexOf(data);\r\n        if (index !== -1) {\r\n            this.ships.splice(index, 1);\r\n        }\r\n    };\r\n    ShipService.prototype.getShips = function () {\r\n        var _this = this;\r\n        if (this.ships.length == 0) {\r\n            this.route.queryParams.subscribe(function (queryParams) {\r\n                var ships = queryParams['ships'];\r\n                if (ships) {\r\n                    var shipsArray = ships.split(',');\r\n                    for (var i = 0; i + 2 < shipsArray.length; i += 3) {\r\n                        var type = shipsArray[i];\r\n                        var amount = shipsArray[i + 1];\r\n                        var instances = shipsArray[i + 2];\r\n                        var model = _this.models[type];\r\n                        var data = new ship_data_1.ShipData();\r\n                        data.origin.type = type;\r\n                        data.origin = model;\r\n                        data.amount = Number(amount);\r\n                        var instancesArray = instances.split(';');\r\n                        for (var j = 0; j < instancesArray.length; j++) {\r\n                            var positions = instancesArray[j].split(':');\r\n                            if (positions.length !== 2) {\r\n                                break;\r\n                            }\r\n                            var sdi = new ship_data_1.ShipDataInstance();\r\n                            sdi.position = new three_1.Vector3(Number(positions[0]), 1, Number(positions[1]));\r\n                            data.add(sdi);\r\n                        }\r\n                        _this.addShip(data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return Promise.resolve(this.ships);\r\n    };\r\n    ShipService.prototype.getNavigationExtras = function () {\r\n        var shipsParam = \"\";\r\n        for (var _i = 0, _a = this.ships; _i < _a.length; _i++) {\r\n            var s = _a[_i];\r\n            var instances = \"\";\r\n            s.instances.forEach(function (i) {\r\n                instances += i.position.x + \":\" + i.position.z + \";\";\r\n            });\r\n            shipsParam += s.origin.type + \",\" + String(s.amount) + \",\" + instances + \",\";\r\n        }\r\n        ;\r\n        var navigationExtras = {\r\n            queryParams: { 'ships': shipsParam },\r\n            queryParamsHandling: 'merge'\r\n        };\r\n        return navigationExtras;\r\n    };\r\n    ShipService.prototype.getModels = function () {\r\n        return Promise.resolve(this.modelsArray);\r\n    };\r\n    ShipService.prototype.getShipsSlowly = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            // Simulate server latency with 2 second delay\r\n            setTimeout(function () { return resolve(_this.getShips()); }, 2000);\r\n        });\r\n    };\r\n    ShipService.prototype.getShip = function (type) {\r\n        return this.getShips()\r\n            .then(function (ships) { return ships.find(function (ship) { return ship.origin.type === type; }); });\r\n    };\r\n    ShipService = __decorate([\r\n        core_1.Injectable(),\r\n        __metadata(\"design:paramtypes\", [scene_service_1.SceneService, router_1.ActivatedRoute])\r\n    ], ShipService);\r\n    return ShipService;\r\n}());\r\nexports.ShipService = ShipService;\r\n\n\n/***/ }),\n\n/***/ 720:\n/***/ (function(module, exports, __webpack_require__) {\n\n\n        var result = __webpack_require__(721);\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n/***/ }),\n\n/***/ 721:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(67)(undefined);\n// imports\n\n\n// module\nexports.push([module.i, \".container{text-align:center}.loader{padding:20px}#text-label{display:none;position:absolute;z-index:1;width:auto;white-space:nowrap;min-height:40px}#text-label:hover{background-color:#888}.info{background-color:rgba(22,255,255,.1);color:#fff;padding:20px}.save-image{right:70px}.fullscreen,.save-image{position:absolute;top:20px;z-index:1}.fullscreen{right:20px}\", \"\"]);\n\n// exports\n\n\n/***/ }),\n\n/***/ 722:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar core_1 = __webpack_require__(3);\r\nvar router_1 = __webpack_require__(43);\r\nvar inventory_component_1 = __webpack_require__(249);\r\nvar add_ship_component_1 = __webpack_require__(250);\r\nvar simulator_component_1 = __webpack_require__(251);\r\nvar routes = [\r\n    { path: '', redirectTo: '/inventory', pathMatch: 'full' },\r\n    {\r\n        path: 'inventory',\r\n        children: [\r\n            {\r\n                path: '',\r\n                component: inventory_component_1.InventoryComponent\r\n            },\r\n            {\r\n                path: 'add-ship/:size',\r\n                component: add_ship_component_1.AddShipComponent\r\n            }\r\n        ]\r\n    },\r\n    { path: 'simulator', component: simulator_component_1.SimulatorComponent },\r\n    { path: '**', component: inventory_component_1.InventoryComponent }\r\n];\r\nvar AppRoutingModule = (function () {\r\n    function AppRoutingModule() {\r\n    }\r\n    AppRoutingModule = __decorate([\r\n        core_1.NgModule({\r\n            imports: [router_1.RouterModule.forRoot(routes)],\r\n            exports: [router_1.RouterModule]\r\n        })\r\n    ], AppRoutingModule);\r\n    return AppRoutingModule;\r\n}());\r\nexports.AppRoutingModule = AppRoutingModule;\r\n\n\n/***/ }),\n\n/***/ 723:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (true) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n        return Hammer;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n/***/ })\n\n},[697]);\n\n\n// WEBPACK FOOTER //\n// app.js","import { Ship } from './ship';\nimport { Vector3 } from 'three';\n\nexport class ShipData {\n    origin: Ship = new Ship();\n    amount: number = 0;\n    instances: ShipDataInstance[] = [];\n\n    add(instance: ShipDataInstance) {\n        this.instances.push(instance);\n    }\n}\n\nexport class ShipDataInstance {\n    position: Vector3;\n    // crew ...\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/ship-data.ts","import { Injectable } from '@angular/core';\nimport { NavigationExtras, ActivatedRoute } from '@angular/router';\n\nimport { ShipData } from './ship-data';\nimport { ShipModel3D } from './simulator/ship-model3d';\n\n@Injectable()\nexport class SceneService {\n\n    shipModels3d: Map<string, ShipModel3D> = new Map();\n\n    constructor(private route: ActivatedRoute) {\n\n    }\n\n    addShipModelFor(modelPath:string, shipData: ShipData) {\n        if (!this.shipModels3d.has(shipData.origin.type)) {\n            var model = new ShipModel3D(shipData);\n            this.shipModels3d.set(shipData.origin.type, model);\n            model.load(modelPath);\n        }\n    }\n\n    loadingProgress(): number {\n        var progress = 100;\n        console.log(this.shipModels3d.size);\n        if (this.shipModels3d.size == 0) {\n            return progress;\n        }\n        let step = progress / this.shipModels3d.size;\n        var processed = 0;\n        this.shipModels3d.forEach((model: ShipModel3D, type: string) => {\n            if (!model.isLoaded()) {\n                progress -= step;\n            } else {\n                processed++;\n            }\n        });\n        if (processed == this.shipModels3d.size) {\n            return 100;\n        }\n        return progress;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/scene.service.ts","declare var require: any\n\nimport { Mesh, Vector3, TextureLoader, MeshLambertMaterial, Object3D } from 'three';\n\nimport * as THREE from 'three';\nimport { GLTF2Loader } from '../util/GLTF2Loader';\n//import { CTMLoader } from './util/CTMLoader';\n\nimport { ShipData, ShipDataInstance } from '../ship-data';\n\nconst MAX_POS: number = 30;\n\nexport class ShipModel3D {\n    static stepSize: number = 10;\n    static currentZ: number = 30;\n    static currentX: number = 0;\n\n    model: any;\n    first: boolean = true;\n\n    objects = [];\n\n    constructor(public data: ShipData) {\n\n    }\n\n    static init() {\n        ShipModel3D.stepSize = 10;\n        ShipModel3D.currentZ = 30;\n        ShipModel3D.currentX = 0;\n    }\n\n    init() {\n        if (this.model.children.length > 3) {\n            this.model.children.splice(3, this.model.children.length - 3);\n        }\n        if (this.data.instances.length !== this.data.amount) {\n            for (var i = this.data.instances.length; i < this.data.amount; i++) {\n                var sdi = new ShipDataInstance();\n                var position = ShipModel3D.getNextPosition();\n                sdi.position = position;\n                this.data.add(sdi);\n            }\n        }\n    }\n\n    isLoaded(): boolean {\n        return this.model !== undefined;\n    }\n\n    load(modelPath:string) {\n        var loader = new GLTF2Loader();\n        var scope = this;\n        loader.load(modelPath, function (data) {\n            console.log(data.scene);\n            scope.model = data.scene;\n            scope.model.children[0].name = scope.data.origin.type;\n        });\n        /**var loader = new CTMLoader();\n        var textureLoader = new TextureLoader();\n        var scope = this;\n\n        loader.load(\"ships/hornet-lp1.ctm\", function (geometry) {\n            var material = new MeshLambertMaterial({ color: 0xcccccc, side: THREE.DoubleSide, combine: THREE.MixOperation, reflectivity: 0.1 });\n            var model = scope.callbackModel(geometry, 70, material, 0, 0, 0, 0, 0);\n            scope.scene.add(model);\n        }, { useWorker: false });*/\n    }\n\n    addShipsToScene(scene) {\n\n        for (var i = 0; i < this.data.amount; i++) {\n            var instance = this.data.instances[i];\n            this.addShipTo(scene, i, instance.position, this.data.origin.scale);\n        }\n    }\n\n    addShipTo(scene, id:number, position: Vector3, scale: number) {\n        var scope = this;\n        /**var material = new THREE.MeshPhongMaterial({\n            color: 0xaa0000, side: THREE.DoubleSide\n        });*/\n        // 0x22dd22 green\n        // 0x00ffff cyan\n        // 0xdddd22 gold\n        // 0xdd2222 red\n        var material = new THREE.MeshStandardMaterial({\n            color: 0x00ffff,\n            metalness: 1.0,\n            roughness: 0.7,\n            transparent: true,\n            opacity: 0.4,\n            side: THREE.DoubleSide\n        });\n        let i = scene.getObjectByName(this.data.origin.type);\n        if (i == undefined) {\n            var object = scope.model.children[0];\n            object.scale.set(scale, scale, scale);\n            object.position.set(position.x, position.y, position.z);\n            object.rotation.z = Math.PI;\n            object.children[0].geometry.computeBoundingSphere();\n            if (this.data.origin.size == 'L') {\n                material.opacity = 0.6;\n            }\n            object.children[0].material = material;\n            object.userData.id = id;\n            object.userData.shipData = this.data;\n            if (object.children.length > 0) {\n                //object.children.splice(1,object.children.length-1);\n            }\n            this.objects.push(object.children[0]);\n            scene.add(scope.model);\n        } else {\n            var obj = scope.model.children[0].clone(false);\n            var mesh = new THREE.Mesh(scope.model.children[0].children[0].geometry, material);\n            obj.position.set(position.x, position.y, position.z);\n            obj.scale.set(scale, scale, scale);\n            obj.add(mesh);\n            this.objects.push(mesh);\n            obj.userData.id = id;\n            obj.userData.shipData = this.data;\n            scope.model.add(obj);\n        }\n        console.log(scene);\n    }\n\n    static getNextPosition(): Vector3 {\n        var x = ShipModel3D.currentX;\n        var z = ShipModel3D.currentZ;\n        ShipModel3D.currentX = ShipModel3D.currentX + ShipModel3D.stepSize;\n        if (ShipModel3D.currentX + ShipModel3D.currentZ > MAX_POS) {\n            ShipModel3D.currentX = -ShipModel3D.currentX;\n            ShipModel3D.currentZ -= ShipModel3D.stepSize;\n        }\n        return new Vector3(-x, 1, z);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/simulator/ship-model3d.ts","import { Component, OnInit } from '@angular/core';\nimport { ObservableMedia } from '@angular/flex-layout';\nimport { Observable } from \"rxjs/Observable\";\nimport {Router, ActivatedRoute} from '@angular/router';\n\nimport {Ship} from '../ship';\nimport {ShipData} from '../ship-data';\nimport {ShipService} from '../ship.service';\n\n@Component({\n    selector: 'inventory',\n    template: require('./inventory.component.html'),\n    styles: [require('./inventory.component.css')]\n})\nexport class InventoryComponent implements OnInit {\n    ships:ShipData[] = [];\n    public cols: Observable<number>;\n\n    constructor(private shipService: ShipService, private observableMedia: ObservableMedia, private route: ActivatedRoute, private router: Router) {\n\n    }\n\n    ngOnInit() {\n        this.shipService.getShips().then(ships => this.ships = ships);\n\n        // set cols\n        if (this.observableMedia.isActive(\"xs\")) {\n            this.cols = Observable.of(2);\n        } else if (this.observableMedia.isActive(\"sm\")) {\n            this.cols = Observable.of(3);\n        } else if (this.observableMedia.isActive(\"md\")) {\n            this.cols = Observable.of(5);\n        } else if (this.observableMedia.isActive(\"lg\")) {\n            this.cols = Observable.of(6);\n        } else if (this.observableMedia.isActive(\"x1\")) {\n            this.cols = Observable.of(7);\n        }\n\n        // observe changes\n        this.observableMedia.asObservable()\n            .subscribe(change => {\n                switch (change.mqAlias) {\n                    case \"xs\":\n                        return this.cols = Observable.of(2);\n                    case \"sm\":\n                        return this.cols = Observable.of(3);\n                    case \"md\":\n                        return this.cols = Observable.of(5);\n                    case \"lg\":\n                        return this.cols = Observable.of(6);\n                    case \"xl\":\n                        return this.cols = Observable.of(7);\n                }\n            });\n    }\n\n    filterSize(array, size: string) {\n        return array.filter(x => x.origin.size == size);\n    }\n\n    addS() {\n        this.router.navigate([\"inventory/add-ship/S\"], this.shipService.getNavigationExtras());\n    }\n\n    addM() {\n        this.router.navigate([\"inventory/add-ship/M\"], this.shipService.getNavigationExtras());\n    }\n\n    addL() {\n        this.router.navigate([\"inventory/add-ship/L\"], this.shipService.getNavigationExtras());\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/inventory/inventory.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, ParamMap, NavigationExtras } from '@angular/router';\n\nimport { Ship } from '../ship';\nimport { ShipData } from '../ship-data';\nimport { ShipService } from '../ship.service';\n\n@Component({\n  selector: 'add-ship',\n  template: require('./add-ship.component.html'),\n  styles: [require('./add-ship.component.css')]\n})\nexport class AddShipComponent implements OnInit {\n  models: Ship[] = [];\n  size: string = \"S\";\n  selectedModel: any;\n  typeExistsError: boolean = false;\n\n  constructor(private shipService: ShipService, private router: Router, private route: ActivatedRoute) {\n\n  }\n\n  ngOnInit() {\n    this.shipService.getModels().then(models => this.models = models.sort((a, b) => a.type > b.type ? 1 : -1));\n\n    this.route.params\n      .subscribe(params => this.size = params['size']);\n  }\n\n  onShipTypeChange(): void {\n    this.typeExistsError = false;\n  }\n\n  goBack(): void {\n    this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\n  }\n\n  addShip(): void {\n    var newShip = new ShipData();\n    newShip.origin = this.selectedModel;\n    newShip.amount = 1;\n    let added = this.shipService.addShip(newShip);\n    if (added) {\n      this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\n    } else {\n      this.typeExistsError = true;\n    }\n  }\n\n  filterSize(array) {\n    return array.filter(x => x.size == this.size);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/inventory/add-ship.component.ts","declare var require: any\n\nimport { Component, AfterViewInit, HostListener, ViewChild, ElementRef } from '@angular/core';\nimport { MdSidenav } from '@angular/material';\nimport {\n    Scene, PerspectiveCamera, WebGLRenderer,\n    BoxGeometry, Mesh, MeshBasicMaterial,\n    MeshPhongMaterial, AmbientLight, DirectionalLight,\n    Color, JSONLoader, SkinnedMesh, ObjectLoader, Vector3\n} from 'three';\nimport * as THREE from 'three';\n\nimport { Router } from '@angular/router';\n\nimport { OrbitControls } from 'three-orbitcontrols-ts';\nimport { ShipModel3D } from './ship-model3d';\nimport { SceneService } from '../scene.service';\nimport { ShipService } from '../ship.service';\nimport { ShipData } from '../ship-data';\nimport { ObjectControls } from '../util/ObjectControls';\n\n@Component({\n    selector: 'simulator',\n    template: require('./simulator.component.html'),\n    styles: [require('./simulator.component.css')]\n})\nexport class SimulatorComponent implements AfterViewInit {\n    @ViewChild('container') container;\n    @ViewChild('shipInfo') shipInfoBar: MdSidenav;\n\n    loadingProgress: number = 0;\n    loaded: boolean = false;\n\n    screenWidth = window.innerWidth - 20;\n    screenHeight = window.innerHeight - 85;\n\n    scene: Scene = new Scene();\n    camera: PerspectiveCamera = new PerspectiveCamera(60, this.screenWidth / this.screenHeight, 10, 500);\n    renderer: WebGLRenderer = new WebGLRenderer({ antialias: true });\n\n    gridScene: Scene = new Scene();\n    gridCamera: PerspectiveCamera = new PerspectiveCamera(60, this.screenWidth / this.screenHeight, 0.1, 300);\n    grid: Mesh;\n    bgScene: Scene = new THREE.Scene();\n    bgCam: THREE.Camera = new THREE.Camera();\n\n    controls: ObjectControls;\n\n    directionalLight: DirectionalLight;\n\n    objects: any = [];\n\n    // remember these initial values\n    tanFOV = Math.tan(((Math.PI / 180) * this.camera.fov / 2));\n    windowHeight = window.innerHeight;\n\n    shipData: ShipData; // info for selected ship\n\n    constructor(private sceneService: SceneService, private shipService: ShipService, private router: Router) {\n\n    }\n\n    ngAfterViewInit(): void {\n        window.onerror = function () { debugger; } // DEBUG\n\n        this.renderer.setPixelRatio(window.devicePixelRatio);\n        this.renderer.setSize(this.screenWidth, this.screenHeight);\n        this.renderer.domElement.style.position = \"relative\";\n        this.renderer.setClearColor(0xEEEEEE);\n\n        this.configureCamera();\n\n        this.configureLight();\n        this.scene.add(this.directionalLight);\n        this.scene.add(new AmbientLight(new Color(0.7, 0.7, 0.7).getHex()));\n        this.gridScene.add(new AmbientLight(new Color(1.0, 1.0, 1.0).getHex()));\n\n        this.addBackground();\n        this.addGrid();\n        this.configureControls();\n\n        this.start();\n    }\n\n    addBackground() {\n        var texture: THREE.Texture = THREE.ImageUtils.loadTexture(\"assets/images/background.png\");\n        var bg = new THREE.Mesh(\n            new THREE.PlaneGeometry(2, 2, 0),\n            new THREE.MeshBasicMaterial({ map: texture })\n        );\n        bg.material.depthTest = false;\n        bg.material.depthWrite = false;\n\n        this.bgScene.add(this.bgCam);\n        this.bgScene.add(bg);\n    }\n\n    addGrid() {\n        var texture, material;\n\n        texture = THREE.ImageUtils.loadTexture(\"assets/images/grid.png\");\n\n        texture.wrapS = THREE.RepeatWrapping;\n        texture.wrapT = THREE.RepeatWrapping;\n\n        texture.repeat.set(30, 30);\n\n        material = new THREE.MeshLambertMaterial({ map: texture, transparent: true, opacity: 1.0 });\n        this.grid = new THREE.Mesh(new THREE.PlaneGeometry(180, 120), material);\n        this.grid.material.side = THREE.DoubleSide;\n        this.grid.rotation.x = Math.PI / 2;\n        this.grid.position.y = -1;\n        this.grid.position.z = 0;\n\n        this.gridScene.add(this.grid);\n    }\n\n    configureLight() {\n        this.directionalLight = new DirectionalLight(0xffffff);\n        this.directionalLight.position.set(0, 1000, 0);\n        this.directionalLight.lookAt(new Vector3(0, 0, 0));\n    }\n\n    configureCamera() {\n        this.camera.position.x = 0;\n        this.camera.position.y = 110;\n        this.camera.position.z = -80;\n        this.camera.lookAt(new Vector3(0, 0, 0));\n        this.gridCamera.position.x = 0;\n        this.gridCamera.position.y = 110;\n        this.gridCamera.position.z = -80;\n        this.gridCamera.lookAt(new Vector3(0, 0, 0));\n    }\n\n    configureControls() {\n        this.controls = new ObjectControls(this.camera, this.renderer.domElement, this.container, this.objects, this.grid, this.scene);\n        this.controls.fixed.y = 1;\n        var scope = this;\n        this.controls.move = function () {\n            this.container.style.cursor = 'move';\n        }\n        this.controls.mouseup = function () {\n            this.container.style.cursor = 'auto';\n            scope.router.navigate([\"simulator\"], scope.shipService.getNavigationExtras());\n        }\n        this.controls.onclick = function () {\n\n        }\n        this.controls.activate();\n    }\n\n    getImageData: any;\n    render() {\n        requestAnimationFrame(() => this.render());\n        this.controls.update();\n        this.renderer.autoClear = false;\n        this.renderer.clear();\n        this.renderer.render(this.bgScene, this.bgCam);\n        this.renderer.render(this.gridScene, this.gridCamera);\n        this.renderer.render(this.scene, this.camera);\n        this.controls.updateAfter(this.screenWidth, this.screenHeight);\n    }\n\n    start() {\n        let data: Promise<ShipData[]> = this.shipService.getShips(); // the list needs to be upto date\n        data.then((res) => {\n            this.loadingProgress = this.sceneService.loadingProgress();\n            console.log(this.loadingProgress);\n            var scope = this;\n            if (this.loadingProgress == 100) {\n                this.loaded = true;\n                this.container.nativeElement.appendChild(this.renderer.domElement);\n                ShipModel3D.init();\n                this.sceneService.shipModels3d.forEach((model: ShipModel3D, type: string) => {\n                    model.init();\n                    model.addShipsToScene(scope.scene);\n                    model.objects.forEach(o => scope.objects.push(o));\n                });\n                this.render();\n            } else {\n                setTimeout(() => {\n                    scope.start();\n                }, 500);\n            }\n        });\n\n    }\n\n    showInfo() {\n        this.shipData = this.controls.selected.parent.userData.shipData.origin;\n        this.shipInfoBar.toggle();\n    }\n\n    onCloseShipInfo() {\n        this.controls.hideSelected();\n    }\n\n    saveImage() {\n        this.controls.hideSelected();\n        this.render();\n        var imgData = this.renderer.domElement.toDataURL();\n        var a: any = document.createElement(\"a\");\n        a.href = imgData.replace('image/png', 'image/octet-stream');\n        a.download = \"tactical-plan.png\";\n        a.click();\n    }\n\n    toggleFullscreen() {\n        var document: any = window.document;\n        var elem = document.documentElement;\n        if (!document.fullscreenElement && !document.mozFullScreenElement &&\n            !document.webkitFullscreenElement && !document.msFullscreenElement) {\n            if (elem.requestFullscreen) {\n                elem.requestFullscreen();\n            } else if (elem.msRequestFullscreen) {\n                elem.msRequestFullscreen();\n            } else if (elem.mozRequestFullScreen) {\n                elem.mozRequestFullScreen();\n            } else if (elem.webkitRequestFullscreen) {\n                elem.webkitRequestFullscreen((<any>Element).ALLOW_KEYBOARD_INPUT);\n            }\n        } else {\n            if (document.exitFullscreen) {\n                document.exitFullscreen();\n            } else if (document.msExitFullscreen) {\n                document.msExitFullscreen();\n            } else if (document.mozCancelFullScreen) {\n                document.mozCancelFullScreen();\n            } else if (document.webkitExitFullscreen) {\n                document.webkitExitFullscreen();\n            }\n        }\n    }\n\n    @HostListener('window:resize', ['$event'])\n    onResize(event) {\n        this.screenWidth = window.innerWidth - 5;\n        this.screenHeight = window.innerHeight - 40;\n        this.camera.aspect = this.screenWidth / this.screenHeight;\n\n        // adjust the FOV\n        this.camera.fov = (360 / Math.PI) * Math.atan(this.tanFOV * (this.screenHeight / this.windowHeight));\n\n        this.camera.updateProjectionMatrix();\n        this.camera.lookAt(this.scene.position);\n\n        this.renderer.setSize(this.screenWidth, this.screenHeight);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/simulator/simulator.component.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\n\nimport { AppModule } from './app/app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/main.ts","import { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { MaterialModule } from '@angular/material';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { ShipCardComponent } from './inventory/ship-card.component';\nimport { AddShipComponent } from './inventory/add-ship.component';\nimport { SimulatorComponent } from './simulator/simulator.component';\n\nimport { SceneService } from './scene.service';\nimport { ShipService } from './ship.service';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport 'hammerjs';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    MaterialModule,\n    FormsModule,\n    HttpModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    AppRoutingModule\n  ],\n  declarations: [\n    AppComponent,\n    InventoryComponent,\n    ShipCardComponent,\n    AddShipComponent,\n    SimulatorComponent\n  ],\n  providers: [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }, SceneService, ShipService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { ShipService } from './ship.service';\n\nimport './styles.scss';\n\n@Component({\n  selector: 'holocom',\n  template: require('./app.component.html'),\n  styles: [require('./app.component.css')]\n})\nexport class AppComponent {\n\n  constructor(private shipService: ShipService, private router: Router) {\n\n  }\n\n  inventory(): void {\n    this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\n  }\n\n  simulator(): void {\n    this.router.navigate([\"simulator\"], this.shipService.getNavigationExtras());\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app.component.ts","export class Ship {\n    type: string;\n    size: string;\n    scale: number;\n    maxcrew: number;\n    cargo: number;\n    // speed, additional information to the ship type\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/ship.ts","import * as THREE from 'three';\n\nconst EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_LIGHTS: 'KHR_lights',\n    KHR_MATERIALS_COMMON: 'KHR_materials_common',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n    KHR_TECHNIQUE_WEBGL: 'KHR_technique_webgl',\n};\n\nconst BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\nconst BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\nconst BINARY_EXTENSION_HEADER_LENGTH = 12;\nconst BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\nexport class GLTF2Loader {\n\n    manager: any;\n    path: string;\n    crossOrigin: any;\n\n    constructor(manager?: any) {\n        this.manager = (manager !== undefined) ? manager : THREE.DefaultLoadingManager;\n    }\n\n    load(url: string, onLoad: any, onProgress?: any, onError?: any) {\n        var scope = this;\n        var path = this.path && (typeof this.path === \"string\") ? this.path : THREE.Loader.prototype.extractUrlBase(url);\n        var loader = new THREE.FileLoader(scope.manager);\n\n        loader.setResponseType('arraybuffer');\n        loader.load(url, function (data) {\n            scope.parse(data, onLoad, path);\n        }, onProgress, onError);\n    }\n\n    setCrossOrigin(value: any) {\n        this.crossOrigin = value;\n    }\n\n    setPath(value: string) {\n        this.path = value;\n    }\n\n    parse(data, callback, path) {\n        var content;\n        var extensions = {};\n\n        var magic = Utility.convertUint8ArrayToString(new Uint8Array(data, 0, 4));\n\n        if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n\n            extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n            content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n\n        } else {\n\n            content = Utility.convertUint8ArrayToString(new Uint8Array(data));\n\n        }\n\n        var json = JSON.parse(content);\n\n        if (json.extensionsUsed) {\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_LIGHTS) >= 0) {\n\n                extensions[EXTENSIONS.KHR_LIGHTS] = new GLTFLightsExtension(json);\n\n            }\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_MATERIALS_COMMON) >= 0) {\n\n                extensions[EXTENSIONS.KHR_MATERIALS_COMMON] = new GLTFMaterialsCommonExtension(json);\n\n            }\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS) >= 0) {\n\n                extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\n            }\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_TECHNIQUE_WEBGL) >= 0) {\n\n                extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL] = new GLTFTechniqueWebglExtension(json);\n\n            }\n\n        }\n\n        console.time('GLTF2Loader');\n\n        var parser = new GLTFParser(json, extensions, {\n\n            path: path || this.path,\n            crossOrigin: this.crossOrigin\n\n        });\n\n        parser.parse(function (scene, scenes, cameras, animations) {\n\n            console.timeEnd('GLTF2Loader');\n\n            var glTF = {\n                \"scene\": scene,\n                \"scenes\": scenes,\n                \"cameras\": cameras,\n                \"animations\": animations\n            };\n\n            callback(glTF);\n\n        });\n\n    }\n\n}\n\nexport class GLTFRegistry {\n    objects: {};\n\n    get(key) {\n        return this.objects[key];\n    }\n\n    add(key, object) {\n        this.objects[key] = object;\n    }\n\n    remove(key) {\n        delete this.objects[key];\n    }\n\n    removeAll() {\n        this.objects = {};\n    }\n\n    update(scene, camera) {\n        for (var name in this.objects) {\n            var object = this.objects[name];\n            if (object.update) {\n                object.update(scene, camera);\n            }\n        }\n    }\n}\n\nexport class GLTFShader {\n\n    boundUniforms: any;\n    _m4: THREE.Matrix4;\n\n    constructor(targetNode, allNodes) {\n        var boundUniforms = {};\n\n        // bind each uniform to its source node\n\n        var uniforms = targetNode.material.uniforms;\n\n        for (var uniformId in uniforms) {\n\n            var uniform = uniforms[uniformId];\n\n            if (uniform.semantic) {\n\n                var sourceNodeRef = uniform.node;\n\n                var sourceNode = targetNode;\n\n                if (sourceNodeRef) {\n\n                    sourceNode = allNodes[sourceNodeRef];\n\n                }\n\n                boundUniforms[uniformId] = {\n                    semantic: uniform.semantic,\n                    sourceNode: sourceNode,\n                    targetNode: targetNode,\n                    uniform: uniform\n                };\n\n            }\n\n        }\n\n        this.boundUniforms = boundUniforms;\n        this._m4 = new THREE.Matrix4();\n    }\n\n    update(scene, camera) {\n        var boundUniforms = this.boundUniforms;\n\n        for (var name in boundUniforms) {\n\n            var boundUniform = boundUniforms[name];\n\n            switch (boundUniform.semantic) {\n\n                case \"MODELVIEW\":\n\n                    var m4 = boundUniform.uniform.value;\n                    m4.multiplyMatrices(camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld);\n                    break;\n\n                case \"MODELVIEWINVERSETRANSPOSE\":\n\n                    var m3 = boundUniform.uniform.value;\n                    this._m4.multiplyMatrices(camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld);\n                    m3.getNormalMatrix(this._m4);\n                    break;\n\n                case \"PROJECTION\":\n\n                    var m4 = boundUniform.uniform.value;\n                    m4.copy(camera.projectionMatrix);\n                    break;\n\n                case \"JOINTMATRIX\":\n\n                    var m4v = boundUniform.uniform.value;\n\n                    for (var mi = 0; mi < m4v.length; mi++) {\n\n                        // So it goes like this:\n                        // SkinnedMesh world matrix is already baked into MODELVIEW;\n                        // transform joints to local space,\n                        // then transform using joint's inverse\n                        m4v[mi]\n                            .getInverse(boundUniform.sourceNode.matrixWorld)\n                            .multiply(boundUniform.targetNode.skeleton.bones[mi].matrixWorld)\n                            .multiply(boundUniform.targetNode.skeleton.boneInverses[mi])\n                            .multiply(boundUniform.targetNode.bindMatrix);\n\n                    }\n\n                    break;\n\n                default:\n\n                    console.warn(\"Unhandled shader semantic: \" + boundUniform.semantic);\n                    break;\n\n            }\n\n        }\n    }\n\n}\n\nexport class GLTFLightsExtension {\n    name: any;\n    lights: any;\n\n    constructor(json) {\n        this.name = EXTENSIONS.KHR_LIGHTS;\n\n        this.lights = {};\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS]) || {};\n        var lights = extension.lights || {};\n\n        for (var lightId in lights) {\n\n            var light = lights[lightId];\n            var lightNode;\n\n            var color: any = new THREE.Color().fromArray(light.color);\n\n            switch (light.type) {\n\n                case 'directional':\n                    lightNode = new THREE.DirectionalLight(color);\n                    lightNode.position.set(0, 0, 1);\n                    break;\n\n                case 'point':\n                    lightNode = new THREE.PointLight(color);\n                    break;\n\n                case 'spot':\n                    lightNode = new THREE.SpotLight(color);\n                    lightNode.position.set(0, 0, 1);\n                    break;\n\n                case 'ambient':\n                    lightNode = new THREE.AmbientLight(color);\n                    break;\n\n            }\n\n            if (lightNode) {\n\n                if (light.constantAttenuation !== undefined) {\n\n                    lightNode.intensity = light.constantAttenuation;\n\n                }\n\n                if (light.linearAttenuation !== undefined) {\n\n                    lightNode.distance = 1 / light.linearAttenuation;\n\n                }\n\n                if (light.quadraticAttenuation !== undefined) {\n\n                    lightNode.decay = light.quadraticAttenuation;\n\n                }\n\n                if (light.fallOffAngle !== undefined) {\n\n                    lightNode.angle = light.fallOffAngle;\n\n                }\n\n                if (light.fallOffExponent !== undefined) {\n\n                    console.warn('GLTF2Loader: light.fallOffExponent not currently supported.');\n\n                }\n\n                lightNode.name = light.name || ('light_' + lightId);\n                this.lights[lightId] = lightNode;\n\n            }\n\n        }\n    }\n}\n\nexport class GLTFMaterialsCommonExtension {\n    name: any;\n\n    constructor(json) {\n        this.name = EXTENSIONS.KHR_MATERIALS_COMMON;\n    }\n\n    getMaterialType(material): any {\n        var khrMaterial = material.extensions[this.name];\n\n        switch (khrMaterial.type) {\n\n            case 'commonBlinn':\n            case 'commonPhong':\n                return THREE.MeshPhongMaterial;\n\n            case 'commonLambert':\n                return THREE.MeshLambertMaterial;\n\n            case 'commonConstant':\n            default:\n                return THREE.MeshBasicMaterial;\n\n        }\n    }\n\n    extendParams(materialParams, material, dependencies) {\n        var khrMaterial = material.extensions[this.name];\n\n        var keys = [];\n\n        // TODO: Currently ignored: 'ambientFactor', 'ambientTexture'\n        switch (khrMaterial.type) {\n\n            case 'commonBlinn':\n            case 'commonPhong':\n                keys.push('diffuseFactor', 'diffuseTexture', 'specularFactor', 'specularTexture', 'shininessFactor');\n                break;\n\n            case 'commonLambert':\n                keys.push('diffuseFactor', 'diffuseTexture');\n                break;\n\n            case 'commonConstant':\n            default:\n                break;\n\n        }\n\n        var materialValues: any = {};\n\n        keys.forEach(function (v) {\n\n            if (khrMaterial[v] !== undefined) materialValues[v] = khrMaterial[v];\n\n        });\n\n        if (materialValues.diffuseFactor !== undefined) {\n\n            materialParams.color = new THREE.Color().fromArray(materialValues.diffuseFactor);\n            materialParams.opacity = materialValues.diffuseFactor[3];\n\n        }\n\n        if (materialValues.diffuseTexture !== undefined) {\n\n            materialParams.map = dependencies.textures[materialValues.diffuseTexture.index];\n\n        }\n\n        if (materialValues.specularFactor !== undefined) {\n\n            materialParams.specular = new THREE.Color().fromArray(materialValues.specularFactor);\n\n        }\n\n        if (materialValues.specularTexture !== undefined) {\n\n            materialParams.specularMap = dependencies.textures[materialValues.specularTexture.index];\n\n        }\n\n        if (materialValues.shininessFactor !== undefined) {\n\n            materialParams.shininess = materialValues.shininessFactor;\n\n        }\n    }\n}\n\nexport class GLTFBinaryExtension {\n    name: any;\n    content: any;\n    body: any;\n    header: any;\n\n\n    constructor(data) {\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\n        this.content = null;\n        this.body = null;\n\n        var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n        this.header = {\n            magic: Utility.convertUint8ArrayToString(new Uint8Array(data.slice(0, 4))),\n            version: headerView.getUint32(4, true),\n            length: headerView.getUint32(8, true)\n        };\n\n        if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n\n            throw new Error('GLTF2Loader: Unsupported glTF-Binary header.');\n\n        } else if (this.header.version < 2.0) {\n\n            throw new Error('GLTF2Loader: Legacy binary file detected. Use GLTFLoader instead.');\n\n        }\n\n        var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n        var chunkIndex = 0;\n\n        while (chunkIndex < chunkView.byteLength) {\n\n            var chunkLength = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            var chunkType = chunkView.getUint32(chunkIndex, true);\n            chunkIndex += 4;\n\n            if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n\n                var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n                this.content = Utility.convertUint8ArrayToString(contentArray);\n\n            } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n\n                var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n                this.body = data.slice(byteOffset, byteOffset + chunkLength);\n\n            }\n\n            // Clients must ignore chunks with unknown types.\n\n            chunkIndex += chunkLength;\n\n        }\n\n        if (this.content === null) {\n\n            throw new Error('GLTF2Loader: JSON content not found.');\n\n        }\n    }\n}\n\nexport class GLTFTechniqueWebglExtension {\n    name: any;\n    techniques: any;\n    programs: any;\n    shaders: any;\n\n    constructor(json) {\n        this.name = EXTENSIONS.KHR_TECHNIQUE_WEBGL;\n\n        var extension = (json.extensions && json.extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL]) || {};\n\n        this.techniques = extension.techniques || {};\n        this.programs = extension.programs || {};\n        this.shaders = extension.shaders || {};\n    }\n\n    getMaterialType(): any {\n        return DeferredShaderMaterial;\n    }\n\n    extendParams(materialParams, material, dependencies) {\n        var extension = material[EXTENSIONS.KHR_TECHNIQUE_WEBGL];\n        var technique = dependencies.techniques[extension.technique];\n\n        materialParams.uniforms = {};\n\n        var program = dependencies.programs[technique.program];\n\n        if (program === undefined) {\n\n            return;\n\n        }\n\n        materialParams.fragmentShader = dependencies.shaders[program.fragmentShader];\n\n        if (!materialParams.fragmentShader) {\n\n            throw new Error('ERROR: Missing fragment shader definition:' + program.fragmentShader);\n\n        }\n\n        var vertexShader = dependencies.shaders[program.vertexShader];\n\n        if (!vertexShader) {\n\n            throw new Error('ERROR: Missing vertex shader definition:' + program.vertexShader);\n\n        }\n\n        // IMPORTANT: FIX VERTEX SHADER ATTRIBUTE DEFINITIONS\n        materialParams.vertexShader = Utility.replaceTHREEShaderAttributes(vertexShader, technique);\n\n        var uniforms = technique.uniforms;\n\n        for (var uniformId in uniforms) {\n\n            var pname = uniforms[uniformId];\n            var shaderParam = technique.parameters[pname];\n\n            var ptype = shaderParam.type;\n\n            if (WEBGL_TYPE[ptype]) {\n\n                var pcount = shaderParam.count;\n                var value;\n\n                if (material.values !== undefined) value = material.values[pname];\n\n                var uvalue = new WEBGL_TYPE[ptype]();\n                var usemantic = shaderParam.semantic;\n                var unode = shaderParam.node;\n\n                switch (ptype) {\n\n                    case WEBGL_CONSTANTS.FLOAT:\n\n                        uvalue = shaderParam.value;\n\n                        if (pname === 'transparency') {\n\n                            materialParams.transparent = true;\n\n                        }\n\n                        if (value !== undefined) {\n\n                            uvalue = value;\n\n                        }\n\n                        break;\n\n                    case WEBGL_CONSTANTS.FLOAT_VEC2:\n                    case WEBGL_CONSTANTS.FLOAT_VEC3:\n                    case WEBGL_CONSTANTS.FLOAT_VEC4:\n                    case WEBGL_CONSTANTS.FLOAT_MAT3:\n\n                        if (shaderParam && shaderParam.value) {\n\n                            uvalue.fromArray(shaderParam.value);\n\n                        }\n\n                        if (value) {\n\n                            uvalue.fromArray(value);\n\n                        }\n\n                        break;\n\n                    case WEBGL_CONSTANTS.FLOAT_MAT4:\n\n                        if (pcount) {\n\n                            uvalue = new Array(pcount);\n\n                            for (var mi = 0; mi < pcount; mi++) {\n\n                                uvalue[mi] = new WEBGL_TYPE[ptype]();\n\n                            }\n\n                            if (shaderParam && shaderParam.value) {\n\n                                var m4v = shaderParam.value;\n                                uvalue.fromArray(m4v);\n\n                            }\n\n                            if (value) {\n\n                                uvalue.fromArray(value);\n\n                            }\n\n                        } else {\n\n                            if (shaderParam && shaderParam.value) {\n\n                                var m4 = shaderParam.value;\n                                uvalue.fromArray(m4);\n\n                            }\n\n                            if (value) {\n\n                                uvalue.fromArray(value);\n\n                            }\n\n                        }\n\n                        break;\n\n                    case WEBGL_CONSTANTS.SAMPLER_2D:\n\n                        if (value !== undefined) {\n\n                            uvalue = dependencies.textures[value];\n\n                        } else if (shaderParam.value !== undefined) {\n\n                            uvalue = dependencies.textures[shaderParam.value];\n\n                        } else {\n\n                            uvalue = null;\n\n                        }\n\n                        break;\n\n                }\n\n                materialParams.uniforms[uniformId] = {\n                    value: uvalue,\n                    semantic: usemantic,\n                    node: unode\n                };\n\n            } else {\n\n                throw new Error('Unknown shader uniform param type: ' + ptype);\n\n            }\n\n        }\n\n        var states = technique.states || {};\n        var enables = states.enable || [];\n        var functions = states.functions || {};\n\n        var enableCullFace = false;\n        var enableDepthTest = false;\n        var enableBlend = false;\n\n        for (var i = 0, il = enables.length; i < il; i++) {\n\n            var enable = enables[i];\n\n            switch (STATES_ENABLES[enable]) {\n\n                case 'CULL_FACE':\n\n                    enableCullFace = true;\n\n                    break;\n\n                case 'DEPTH_TEST':\n\n                    enableDepthTest = true;\n\n                    break;\n\n                case 'BLEND':\n\n                    enableBlend = true;\n\n                    break;\n\n                // TODO: implement\n                case 'SCISSOR_TEST':\n                case 'POLYGON_OFFSET_FILL':\n                case 'SAMPLE_ALPHA_TO_COVERAGE':\n\n                    break;\n\n                default:\n\n                    throw new Error(\"Unknown technique.states.enable: \" + enable);\n\n            }\n\n        }\n\n        if (enableCullFace) {\n\n            materialParams.side = functions.cullFace !== undefined ? WEBGL_SIDES[functions.cullFace] : THREE.FrontSide;\n\n        } else {\n\n            materialParams.side = THREE.DoubleSide;\n\n        }\n\n        materialParams.depthTest = enableDepthTest;\n        materialParams.depthFunc = functions.depthFunc !== undefined ? WEBGL_DEPTH_FUNCS[functions.depthFunc] : THREE.LessDepth;\n        materialParams.depthWrite = functions.depthMask !== undefined ? functions.depthMask[0] : true;\n\n        materialParams.blending = enableBlend ? THREE.CustomBlending : THREE.NoBlending;\n        materialParams.transparent = enableBlend;\n\n        var blendEquationSeparate = functions.blendEquationSeparate;\n\n        if (blendEquationSeparate !== undefined) {\n\n            materialParams.blendEquation = WEBGL_BLEND_EQUATIONS[blendEquationSeparate[0]];\n            materialParams.blendEquationAlpha = WEBGL_BLEND_EQUATIONS[blendEquationSeparate[1]];\n\n        } else {\n\n            materialParams.blendEquation = THREE.AddEquation;\n            materialParams.blendEquationAlpha = THREE.AddEquation;\n\n        }\n\n        var blendFuncSeparate = functions.blendFuncSeparate;\n\n        if (blendFuncSeparate !== undefined) {\n\n            materialParams.blendSrc = WEBGL_BLEND_FUNCS[blendFuncSeparate[0]];\n            materialParams.blendDst = WEBGL_BLEND_FUNCS[blendFuncSeparate[1]];\n            materialParams.blendSrcAlpha = WEBGL_BLEND_FUNCS[blendFuncSeparate[2]];\n            materialParams.blendDstAlpha = WEBGL_BLEND_FUNCS[blendFuncSeparate[3]];\n\n        } else {\n\n            materialParams.blendSrc = THREE.OneFactor;\n            materialParams.blendDst = THREE.ZeroFactor;\n            materialParams.blendSrcAlpha = THREE.OneFactor;\n            materialParams.blendDstAlpha = THREE.ZeroFactor;\n\n        }\n    }\n}\n\nexport class GLTFMaterialsPbrSpecularGlossinessExtension {\n\n    name = EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS;\n\n    getMaterialType(): any {\n        return THREE.ShaderMaterial;\n    }\n\n    extendParams(params, material, dependencies) {\n\n        // specification\n        // https://github.com/sbtron/glTF/tree/KHRpbrSpecGloss/extensions/Khronos/KHR_materials_pbrSpecularGlossiness\n\n        var pbrSpecularGlossiness = material.extensions[this.name];\n\n        var shader = THREE.ShaderLib['standard'];\n\n        var uniforms = THREE.UniformsUtils.clone(shader.uniforms);\n\n        var specularMapParsFragmentChunk = [\n            '#ifdef USE_SPECULARMAP',\n            '\tuniform sampler2D specularMap;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapParsFragmentChunk = [\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tuniform sampler2D glossinessMap;',\n            '#endif'\n        ].join('\\n');\n\n        var specularMapFragmentChunk = [\n            'vec3 specularFactor = specular;',\n            '#ifdef USE_SPECULARMAP',\n            '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n            '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tspecularFactor *= texelSpecular.rgb;',\n            '#endif'\n        ].join('\\n');\n\n        var glossinessMapFragmentChunk = [\n            'float glossinessFactor = glossiness;',\n            '#ifdef USE_GLOSSINESSMAP',\n            '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n            '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n            '\tglossinessFactor *= texelGlossiness.a;',\n            '#endif'\n        ].join('\\n');\n\n        var lightPhysicalFragmentChunk = [\n            'PhysicalMaterial material;',\n            'material.diffuseColor = diffuseColor.rgb;',\n            'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n            'material.specularColor = specularFactor.rgb;',\n        ].join('\\n');\n\n        var fragmentShader = shader.fragmentShader\n            .replace('#include <specularmap_fragment>', '')\n            .replace('uniform float roughness;', 'uniform vec3 specular;')\n            .replace('uniform float metalness;', 'uniform float glossiness;')\n            .replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk)\n            .replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk)\n            .replace('#include <roughnessmap_fragment>', specularMapFragmentChunk)\n            .replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk)\n            .replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n\n        delete uniforms.roughness;\n        delete uniforms.metalness;\n        delete uniforms.roughnessMap;\n        delete uniforms.metalnessMap;\n\n        uniforms.specular = { value: new THREE.Color().setHex(0x111111) };\n        uniforms.glossiness = { value: 0.5 };\n        uniforms.specularMap = { value: null };\n        uniforms.glossinessMap = { value: null };\n\n        params.vertexShader = shader.vertexShader;\n        params.fragmentShader = fragmentShader;\n        params.uniforms = uniforms;\n        params.defines = { 'STANDARD': '' };\n\n        params.color = new THREE.Color(1.0, 1.0, 1.0);\n        params.opacity = 1.0;\n\n        if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n\n            var array = pbrSpecularGlossiness.diffuseFactor;\n\n            params.color.fromArray(array);\n            params.opacity = array[3];\n\n        }\n\n        if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n\n            params.map = dependencies.textures[pbrSpecularGlossiness.diffuseTexture.index];\n\n        }\n\n        params.emissive = new THREE.Color(0.0, 0.0, 0.0);\n        params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n        params.specular = new THREE.Color(1.0, 1.0, 1.0);\n\n        if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n\n            params.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n\n        }\n\n        if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n\n            params.glossinessMap = dependencies.textures[pbrSpecularGlossiness.specularGlossinessTexture.index];\n            params.specularMap = dependencies.textures[pbrSpecularGlossiness.specularGlossinessTexture.index];\n\n        }\n    }\n\n    createMaterial(params): any {\n        // setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n        var material: any = new THREE.ShaderMaterial({\n            defines: params.defines,\n            vertexShader: params.vertexShader,\n            fragmentShader: params.fragmentShader,\n            uniforms: params.uniforms,\n            fog: true,\n            lights: true,\n            opacity: params.opacity,\n            transparent: params.transparent\n        });\n\n        material.color = params.color;\n\n        material.map = params.map === undefined ? null : params.map;\n\n        material.lightMap = null;\n        material.lightMapIntensity = 1.0;\n\n        material.aoMap = params.aoMap === undefined ? null : params.aoMap;\n        material.aoMapIntensity = 1.0;\n\n        material.emissive = params.emissive;\n        material.emissiveIntensity = 1.0;\n        material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n        material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n        material.bumpScale = 1;\n\n        material.normalMap = params.normalMap === undefined ? null : params.normalMap;\n        material.normalScale = new THREE.Vector2(1, 1);\n\n        material.displacementMap = null;\n        material.displacementScale = 1;\n        material.displacementBias = 0;\n\n        material.specularMap = params.specularMap === undefined ? null : params.specularMap;\n        material.specular = params.specular;\n\n        material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n        material.glossiness = params.glossiness;\n\n        material.alphaMap = null;\n\n        material.envMap = params.envMap === undefined ? null : params.envMap;\n        material.envMapIntensity = 1.0;\n\n        material.refractionRatio = 0.98;\n\n        material.extensions.derivatives = true;\n\n        return material;\n    }\n\n    refreshUniforms(renderer, scene, camera, geometry, material, group) {\n        var uniforms = material.uniforms;\n        var defines = material.defines;\n\n        uniforms.opacity.value = material.opacity;\n\n        uniforms.diffuse.value.copy(material.color);\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\n        uniforms.map.value = material.map;\n        uniforms.specularMap.value = material.specularMap;\n        uniforms.alphaMap.value = material.alphaMap;\n\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n        // uv repeat and offset setting priorities\n        // 1. color map\n        // 2. specular map\n        // 3. normal map\n        // 4. bump map\n        // 5. alpha map\n        // 6. emissive map\n\n        var uvScaleMap;\n\n        if (material.map) {\n\n            uvScaleMap = material.map;\n\n        } else if (material.specularMap) {\n\n            uvScaleMap = material.specularMap;\n\n        } else if (material.displacementMap) {\n\n            uvScaleMap = material.displacementMap;\n\n        } else if (material.normalMap) {\n\n            uvScaleMap = material.normalMap;\n\n        } else if (material.bumpMap) {\n\n            uvScaleMap = material.bumpMap;\n\n        } else if (material.glossinessMap) {\n\n            uvScaleMap = material.glossinessMap;\n\n        } else if (material.alphaMap) {\n\n            uvScaleMap = material.alphaMap;\n\n        } else if (material.emissiveMap) {\n\n            uvScaleMap = material.emissiveMap;\n\n        }\n\n        if (uvScaleMap !== undefined) {\n\n            // backwards compatibility\n            if (uvScaleMap.isWebGLRenderTarget) {\n\n                uvScaleMap = uvScaleMap.texture;\n\n            }\n\n            var offset = uvScaleMap.offset;\n            var repeat = uvScaleMap.repeat;\n\n            uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n\n        }\n\n        uniforms.envMap.value = material.envMap;\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n        uniforms.flipEnvMap.value = (material.envMap && material.envMap.isCubeTexture) ? -1 : 1;\n\n        uniforms.refractionRatio.value = material.refractionRatio;\n\n        uniforms.specular.value.copy(material.specular);\n        uniforms.glossiness.value = material.glossiness;\n\n        uniforms.glossinessMap.value = material.glossinessMap;\n\n        uniforms.emissiveMap.value = material.emissiveMap;\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.normalMap.value = material.normalMap;\n\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n\n        if (uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined) {\n\n            defines.USE_GLOSSINESSMAP = '';\n            // set USE_ROUGHNESSMAP to enable vUv\n            defines.USE_ROUGHNESSMAP = ''\n\n        }\n\n        if (uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined) {\n\n            delete defines.USE_GLOSSINESSMAP;\n            delete defines.USE_ROUGHNESSMAP;\n\n        }\n    }\n\n}\n\nvar WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    //FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    TRIANGLES: 4,\n    LINES: 1,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123,\n\n    VERTEX_SHADER: 35633,\n    FRAGMENT_SHADER: 35632\n};\n\nvar WEBGL_TYPE = {\n    5126: Number,\n    //35674: THREE.Matrix2,\n    35675: THREE.Matrix3,\n    35676: THREE.Matrix4,\n    35664: THREE.Vector2,\n    35665: THREE.Vector3,\n    35666: THREE.Vector4,\n    35678: THREE.Texture\n};\n\nvar WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n};\n\nvar WEBGL_FILTERS = {\n    9728: THREE.NearestFilter,\n    9729: THREE.LinearFilter,\n    9984: THREE.NearestMipMapNearestFilter,\n    9985: THREE.LinearMipMapNearestFilter,\n    9986: THREE.NearestMipMapLinearFilter,\n    9987: THREE.LinearMipMapLinearFilter\n};\n\nvar WEBGL_WRAPPINGS = {\n    33071: THREE.ClampToEdgeWrapping,\n    33648: THREE.MirroredRepeatWrapping,\n    10497: THREE.RepeatWrapping\n};\n\nvar WEBGL_TEXTURE_FORMATS = {\n    6406: THREE.AlphaFormat,\n    6407: THREE.RGBFormat,\n    6408: THREE.RGBAFormat,\n    6409: THREE.LuminanceFormat,\n    6410: THREE.LuminanceAlphaFormat\n};\n\nvar WEBGL_TEXTURE_DATATYPES = {\n    5121: THREE.UnsignedByteType,\n    32819: THREE.UnsignedShort4444Type,\n    32820: THREE.UnsignedShort5551Type,\n    33635: THREE.UnsignedShort565Type\n};\n\nvar WEBGL_SIDES = {\n    1028: THREE.BackSide,  // Culling front\n    1029: THREE.FrontSide  // Culling back\n    //1032: THREE.NoSide   // Culling front and back, what to do?\n};\n\nvar WEBGL_DEPTH_FUNCS = {\n    512: THREE.NeverDepth,\n    513: THREE.LessDepth,\n    514: THREE.EqualDepth,\n    515: THREE.LessEqualDepth,\n    516: THREE.GreaterEqualDepth,\n    517: THREE.NotEqualDepth,\n    518: THREE.GreaterEqualDepth,\n    519: THREE.AlwaysDepth\n};\n\nvar WEBGL_BLEND_EQUATIONS = {\n    32774: THREE.AddEquation,\n    32778: THREE.SubtractEquation,\n    32779: THREE.ReverseSubtractEquation\n};\n\nvar WEBGL_BLEND_FUNCS = {\n    0: THREE.ZeroFactor,\n    1: THREE.OneFactor,\n    768: THREE.SrcColorFactor,\n    769: THREE.OneMinusSrcColorFactor,\n    770: THREE.SrcAlphaFactor,\n    771: THREE.OneMinusSrcAlphaFactor,\n    772: THREE.DstAlphaFactor,\n    773: THREE.OneMinusDstAlphaFactor,\n    774: THREE.DstColorFactor,\n    775: THREE.OneMinusDstColorFactor,\n    776: THREE.SrcAlphaSaturateFactor\n    // The followings are not supported by Three.js yet\n    //32769: CONSTANT_COLOR,\n    //32770: ONE_MINUS_CONSTANT_COLOR,\n    //32771: CONSTANT_ALPHA,\n    //32772: ONE_MINUS_CONSTANT_COLOR\n};\n\nvar WEBGL_TYPE_SIZES = {\n    'SCALAR': 1,\n    'VEC2': 2,\n    'VEC3': 3,\n    'VEC4': 4,\n    'MAT2': 4,\n    'MAT3': 9,\n    'MAT4': 16\n};\n\nvar PATH_PROPERTIES = {\n    scale: 'scale',\n    position: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences'\n};\n\nvar INTERPOLATION = {\n    LINEAR: THREE.InterpolateLinear,\n    STEP: THREE.InterpolateDiscrete\n};\n\nvar STATES_ENABLES = {\n    2884: 'CULL_FACE',\n    2929: 'DEPTH_TEST',\n    3042: 'BLEND',\n    3089: 'SCISSOR_TEST',\n    32823: 'POLYGON_OFFSET_FILL',\n    32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n};\n\nvar ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND'\n};\n\n/* UTILITY FUNCTIONS */\n\nclass Utility {\n    static each(object, callback, thisObj?: any) {\n        if (!object) {\n            return Promise.resolve();\n        }\n\n        var results;\n        var fns = [];\n\n        if (Object.prototype.toString.call(object) === '[object Array]') {\n\n            results = [];\n\n            var length = object.length;\n\n            for (var idx = 0; idx < length; idx++) {\n\n                var value = callback.call(thisObj || this, object[idx], idx);\n\n                if (value) {\n\n                    fns.push(value);\n\n                    if (value instanceof Promise) {\n\n                        value.then(function (key, value) {\n\n                            results[key] = value;\n\n                        }.bind(this, idx));\n\n                    } else {\n\n                        results[idx] = value;\n\n                    }\n\n                }\n\n            }\n\n        } else {\n\n            results = {};\n\n            for (var key in object) {\n\n                if (object.hasOwnProperty(key)) {\n\n                    var value = callback.call(thisObj || this, object[key], key);\n\n                    if (value) {\n\n                        fns.push(value);\n\n                        if (value instanceof Promise) {\n\n                            value.then(function (key, value) {\n\n                                results[key] = value;\n\n                            }.bind(this, key));\n\n                        } else {\n\n                            results[key] = value;\n\n                        }\n\n                    }\n\n                }\n\n            }\n\n        }\n\n        return Promise.all(fns).then(function () {\n\n            return results;\n\n        });\n    }\n\n    static resolveURL(url: string, path: string): string {\n        // Invalid URL\n        if (typeof url !== 'string' || url === '')\n            return '';\n\n        // Absolute URL http://,https://,//\n        if (/^(https?:)?\\/\\//i.test(url)) {\n\n            return url;\n\n        }\n\n        // Data URI\n        if (/^data:.*,.*$/i.test(url)) {\n\n            return url;\n\n        }\n\n        // Blob URL\n        if (/^blob:.*$/i.test(url)) {\n\n            return url;\n\n        }\n\n        // Relative URL\n        return (path || '') + url;\n    }\n\n    static convertUint8ArrayToString(array): string {\n\n        // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n        // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n        var s = '';\n\n        for (var i = 0, il = array.length; i < il; i++) {\n\n            s += String.fromCharCode(array[i]);\n\n        }\n\n        return s;\n    }\n\n    static replaceTHREEShaderAttributes(shaderText, technique): any {\n\n        // Expected technique attributes\n        var attributes = {};\n\n        for (var attributeId in technique.attributes) {\n\n            var pname = technique.attributes[attributeId];\n\n            var param = technique.parameters[pname];\n            var atype = param.type;\n            var semantic = param.semantic;\n\n            attributes[attributeId] = {\n                type: atype,\n                semantic: semantic\n            };\n\n        }\n\n        // Figure out which attributes to change in technique\n\n        var shaderParams = technique.parameters;\n        var shaderAttributes = technique.attributes;\n        var params: any = {};\n\n        for (var attributeId in attributes) {\n\n            var pname = shaderAttributes[attributeId];\n            var shaderParam = shaderParams[pname];\n            var semantic = shaderParam.semantic;\n            if (semantic) {\n\n                params[attributeId] = shaderParam;\n\n            }\n\n        }\n\n        var pname: any;\n        for (pname in params) {\n\n            var param = params[pname];\n            var semantic = param.semantic;\n\n            var regEx = new RegExp(\"\\\\b\" + pname + \"\\\\b\", \"g\");\n\n            switch (semantic) {\n\n                case 'POSITION':\n\n                    shaderText = shaderText.replace(regEx, 'position');\n                    break;\n\n                case 'NORMAL':\n\n                    shaderText = shaderText.replace(regEx, 'normal');\n                    break;\n\n                case 'TEXCOORD_0':\n                case 'TEXCOORD0':\n                case 'TEXCOORD':\n\n                    shaderText = shaderText.replace(regEx, 'uv');\n                    break;\n\n                case 'TEXCOORD_1':\n\n                    shaderText = shaderText.replace(regEx, 'uv2');\n                    break;\n\n                case 'COLOR_0':\n                case 'COLOR0':\n                case 'COLOR':\n\n                    shaderText = shaderText.replace(regEx, 'color');\n                    break;\n\n                case 'WEIGHTS_0':\n                case 'WEIGHT': // WEIGHT semantic deprecated.\n\n                    shaderText = shaderText.replace(regEx, 'skinWeight');\n                    break;\n\n                case 'JOINTS_0':\n                case 'JOINT': // JOINT semantic deprecated.\n\n                    shaderText = shaderText.replace(regEx, 'skinIndex');\n                    break;\n\n            }\n\n        }\n\n        return shaderText;\n    }\n\n    static createDefaultMaterial(): any {\n        return new THREE.MeshPhongMaterial({\n            color: 0x000000, side: THREE.DoubleSide\n        });\n        //var textureLoader = new THREE.TextureLoader();\n        //return new THREE.MeshLambertMaterial({ color: 0x444444, side: THREE.DoubleSide, combine: THREE.MixOperation, reflectivity: 0.6 });\n    }\n}\n\nclass DeferredShaderMaterial {\n    params: any;\n    isDeferredShaderMaterial: boolean;\n    constructor(params) {\n        this.isDeferredShaderMaterial = true;\n        this.params = params;\n    }\n\n    create() {\n        var uniforms = THREE.UniformsUtils.clone(this.params.uniforms);\n\n        for (var uniformId in this.params.uniforms) {\n\n            var originalUniform = this.params.uniforms[uniformId];\n\n            if (originalUniform.value instanceof THREE.Texture) {\n\n                uniforms[uniformId].value = originalUniform.value;\n                uniforms[uniformId].value.needsUpdate = true;\n\n            }\n\n            uniforms[uniformId].semantic = originalUniform.semantic;\n            uniforms[uniformId].node = originalUniform.node;\n\n        }\n\n        this.params.uniforms = uniforms;\n\n        return new THREE.RawShaderMaterial(this.params);\n    }\n}\n\nclass GLTFParser {\n    json: any;\n    extensions: any;\n    options: any;\n    cache: any;\n\n    constructor(json, extensions, options) {\n        this.json = json || {};\n        this.extensions = extensions || {};\n        this.options = options || {};\n\n        // loader object cache\n        this.cache = new GLTFRegistry();\n    }\n\n    withDependencies(dependencies): any {\n        var _dependencies = {};\n        for (var i = 0; i < dependencies.length; i++) {\n            var dependency = dependencies[i];\n            var fnName = \"load\" + dependency.charAt(0).toUpperCase() + dependency.slice(1);\n            var cached = this.cache.get(dependency);\n\n            if (cached !== undefined) {\n                _dependencies[dependency] = cached;\n            } else if (this[fnName]) {\n                var fn = this[fnName]();\n                this.cache.add(dependency, fn);\n                _dependencies[dependency] = fn;\n            }\n        }\n\n        return Utility.each(_dependencies, function (dependency) {\n            return dependency;\n        });\n    }\n\n    parse(callback) {\n        var json = this.json;\n\n        // Clear the loader cache\n        this.cache.removeAll();\n\n        // Fire the callback on complete\n        this.withDependencies([\n\n            \"scenes\",\n            \"cameras\",\n            \"animations\"\n\n        ]).then(function (dependencies) {\n            var scenes = [];\n            for (var name in dependencies.scenes) {\n                scenes.push(dependencies.scenes[name]);\n            }\n            var scene = json.scene !== undefined ? dependencies.scenes[json.scene] : scenes[0];\n            var cameras = [];\n            for (var name in dependencies.cameras) {\n                var camera = dependencies.cameras[name];\n                cameras.push(camera);\n            }\n            var animations = [];\n            for (var name in dependencies.animations) {\n                animations.push(dependencies.animations[name]);\n            }\n            callback(scene, scenes, cameras, animations);\n        });\n    }\n\n    loadShaders(): any {\n        var json = this.json;\n        var options = this.options;\n        var extensions = this.extensions;\n\n        return this.withDependencies([\n\n            \"bufferViews\"\n\n        ]).then(function (dependencies) {\n\n            var shaders = extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL] !== undefined ? extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL].shaders : json.shaders;\n\n            if (shaders === undefined) shaders = {};\n\n            return Utility.each(shaders, function (shader) {\n\n                if (shader.bufferView !== undefined) {\n\n                    var bufferView = dependencies.bufferViews[shader.bufferView];\n                    var array = new Uint8Array(bufferView);\n                    return Utility.convertUint8ArrayToString(array);\n\n                }\n\n                return new Promise(function (resolve) {\n\n                    var loader = new THREE.FileLoader();\n                    loader.setResponseType('text');\n                    loader.load(Utility.resolveURL(shader.uri, options.path), function (shaderText) {\n\n                        resolve(shaderText);\n\n                    });\n\n                });\n\n            });\n\n        });\n\n    }\n\n    loadBuffers(): any {\n        var json = this.json;\n        var extensions = this.extensions;\n        var options = this.options;\n\n        return Utility.each(json.buffers, function (buffer, name) {\n\n            if (buffer.type === 'arraybuffer' || buffer.type === undefined) {\n\n                // If present, GLB container is required to be the first buffer.\n                if (buffer.uri === undefined && name === 0) {\n\n                    return extensions[EXTENSIONS.KHR_BINARY_GLTF].body;\n\n                }\n\n                return new Promise(function (resolve) {\n\n                    var loader = new THREE.FileLoader();\n                    loader.setResponseType('arraybuffer');\n                    loader.load(Utility.resolveURL(buffer.uri, options.path), function (buffer) {\n\n                        resolve(buffer);\n\n                    });\n\n                });\n\n            } else {\n\n                console.warn('THREE.GLTF2Loader: ' + buffer.type + ' buffer type is not supported');\n\n            }\n\n        });\n    }\n\n    loadBufferViews(): any {\n        var json = this.json;\n\n        return this.withDependencies([\n\n            \"buffers\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.bufferViews, function (bufferView) {\n\n                var arraybuffer = dependencies.buffers[bufferView.buffer];\n\n                var byteLength = bufferView.byteLength || 0;\n                var byteOffset = bufferView.byteOffset || 0;\n\n                return arraybuffer.slice(byteOffset, byteOffset + byteLength);\n\n            });\n\n        });\n    }\n\n    loadAccessors(): any {\n        var json = this.json;\n\n        return this.withDependencies([\n\n            \"bufferViews\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.accessors, function (accessor) {\n\n                var arraybuffer = dependencies.bufferViews[accessor.bufferView];\n                var itemSize = WEBGL_TYPE_SIZES[accessor.type];\n                var TypedArray = WEBGL_COMPONENT_TYPES[accessor.componentType];\n\n                // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n                var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n                var itemBytes = elementBytes * itemSize;\n                var byteStride = json.bufferViews[accessor.bufferView].byteStride;\n                var array;\n\n                // The buffer is not interleaved if the stride is the item size in bytes.\n                if (byteStride && byteStride !== itemBytes) {\n\n                    // Use the full buffer if it's interleaved.\n                    array = new TypedArray(arraybuffer);\n\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\n                    var ib = new THREE.InterleavedBuffer(array, byteStride / elementBytes);\n\n                    return new THREE.InterleavedBufferAttribute(ib, itemSize, accessor.byteOffset / elementBytes, false);\n\n                } else {\n\n                    array = new TypedArray(arraybuffer, accessor.byteOffset, accessor.count * itemSize);\n\n                    return new THREE.BufferAttribute(array, itemSize);\n\n                }\n\n            });\n\n        });\n    }\n\n    loadTextures(): any {\n        var json = this.json;\n        var options = this.options;\n\n        return this.withDependencies([\n\n            \"bufferViews\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.textures, function (texture) {\n\n                if (texture.source !== undefined) {\n\n                    return new Promise(function (resolve) {\n\n                        var source = json.images[texture.source];\n                        var sourceUri = source.uri;\n\n                        var urlCreator;\n\n                        if (source.bufferView !== undefined) {\n\n                            var bufferView = dependencies.bufferViews[source.bufferView];\n                            var blob = new Blob([bufferView], { type: source.mimeType });\n                            urlCreator = window.URL;\n                            sourceUri = urlCreator.createObjectURL(blob);\n\n                        }\n\n                        var textureLoader: any = THREE.Loader.Handlers.get(sourceUri);\n\n                        if (textureLoader === null) {\n\n                            textureLoader = new THREE.TextureLoader();\n\n                        }\n\n                        textureLoader.setCrossOrigin(options.crossOrigin);\n\n                        textureLoader.load(Utility.resolveURL(sourceUri, options.path), function (_texture) {\n\n                            if (urlCreator !== undefined) {\n\n                                urlCreator.revokeObjectURL(sourceUri);\n\n                            }\n\n                            _texture.flipY = false;\n\n                            if (texture.name !== undefined) _texture.name = texture.name;\n\n                            _texture.format = texture.format !== undefined ? WEBGL_TEXTURE_FORMATS[texture.format] : THREE.RGBAFormat;\n\n                            if (texture.internalFormat !== undefined && _texture.format !== WEBGL_TEXTURE_FORMATS[texture.internalFormat]) {\n\n                                console.warn('THREE.GLTF2Loader: Three.js doesn\\'t support texture internalFormat which is different from texture format. ' +\n                                    'internalFormat will be forced to be the same value as format.');\n\n                            }\n\n                            _texture.type = texture.type !== undefined ? WEBGL_TEXTURE_DATATYPES[texture.type] : THREE.UnsignedByteType;\n\n                            var samplers = json.samplers || {};\n                            var sampler = samplers[texture.sampler] || {};\n\n                            _texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || THREE.LinearFilter;\n                            _texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || THREE.NearestMipMapLinearFilter;\n                            _texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || THREE.RepeatWrapping;\n                            _texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || THREE.RepeatWrapping;\n\n                            resolve(_texture);\n\n                        }, undefined, function () {\n\n                            resolve();\n\n                        });\n\n                    });\n\n                }\n\n            });\n\n        });\n    }\n\n    loadMaterials(): any {\n        var json = this.json;\n        var extensions = this.extensions;\n\n        return this.withDependencies([\n\n            'shaders',\n            'textures'\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.materials, function (material) {\n\n                var materialType;\n                var materialParams: any = {};\n                var materialExtensions = material.extensions || {};\n\n                if (materialExtensions[EXTENSIONS.KHR_MATERIALS_COMMON]) {\n\n                    materialType = extensions[EXTENSIONS.KHR_MATERIALS_COMMON].getMaterialType(material);\n                    extensions[EXTENSIONS.KHR_MATERIALS_COMMON].extendParams(materialParams, material, dependencies);\n\n                } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n\n                    materialType = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].getMaterialType(material);\n                    extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].extendParams(materialParams, material, dependencies);\n\n                } else if (materialExtensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL]) {\n\n                    materialType = extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL].getMaterialType(material);\n                    extensions[EXTENSIONS.KHR_TECHNIQUE_WEBGL].extendParams(materialParams, material, dependencies);\n\n                } else if (material.pbrMetallicRoughness !== undefined) {\n\n                    // Specification:\n                    // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n                    materialType = THREE.MeshStandardMaterial;\n\n                    var metallicRoughness = material.pbrMetallicRoughness;\n\n                    materialParams.color = new THREE.Color(1.0, 1.0, 1.0);\n                    materialParams.opacity = 1.0;\n\n                    if (Array.isArray(metallicRoughness.baseColorFactor)) {\n\n                        var array = metallicRoughness.baseColorFactor;\n\n                        materialParams.color.fromArray(array);\n                        materialParams.opacity = array[3];\n\n                    }\n\n                    if (metallicRoughness.baseColorTexture !== undefined) {\n\n                        materialParams.map = dependencies.textures[metallicRoughness.baseColorTexture.index];\n\n                    }\n\n                    materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n                    materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n                    if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n\n                        var textureIndex = metallicRoughness.metallicRoughnessTexture.index;\n                        materialParams.metalnessMap = dependencies.textures[textureIndex];\n                        materialParams.roughnessMap = dependencies.textures[textureIndex];\n\n                    }\n\n                } else {\n\n                    materialType = THREE.MeshPhongMaterial;\n\n                }\n\n                if (material.doubleSided === true) {\n\n                    materialParams.side = THREE.DoubleSide;\n\n                }\n\n                var alphaMode = material.alphaMode || ALPHA_MODES.OPAQUE;\n\n                if (alphaMode !== ALPHA_MODES.OPAQUE) {\n\n                    materialParams.transparent = true;\n\n                } else {\n\n                    materialParams.transparent = false;\n\n                }\n\n                if (material.normalTexture !== undefined) {\n\n                    materialParams.normalMap = dependencies.textures[material.normalTexture.index];\n\n                }\n\n                if (material.occlusionTexture !== undefined) {\n\n                    materialParams.aoMap = dependencies.textures[material.occlusionTexture.index];\n\n                }\n\n                if (material.emissiveFactor !== undefined) {\n\n                    if (materialType === THREE.MeshBasicMaterial) {\n\n                        materialParams.color = new THREE.Color().fromArray(material.emissiveFactor);\n\n                    } else {\n\n                        materialParams.emissive = new THREE.Color().fromArray(material.emissiveFactor);\n\n                    }\n\n                }\n\n                if (material.emissiveTexture !== undefined) {\n\n                    if (materialType === THREE.MeshBasicMaterial) {\n\n                        materialParams.map = dependencies.textures[material.emissiveTexture.index];\n\n                    } else {\n\n                        materialParams.emissiveMap = dependencies.textures[material.emissiveTexture.index];\n\n                    }\n\n                }\n\n                var _material;\n\n                if (materialType === THREE.ShaderMaterial) {\n\n                    _material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n\n                } else {\n\n                    _material = new materialType(materialParams);\n\n                }\n\n                if (material.name !== undefined) _material.name = material.name;\n\n                return _material;\n\n            });\n\n        });\n    }\n\n    loadMeshes(): any {\n        var json = this.json;\n\n        return this.withDependencies([\n\n            \"accessors\",\n            \"materials\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.meshes, function (mesh) {\n\n                var group = new THREE.Group();\n                if (mesh.name !== undefined) group.name = mesh.name;\n\n                if (mesh.extras) group.userData = mesh.extras;\n\n                var primitives = mesh.primitives || [];\n\n                for (var name in primitives) {\n\n                    var primitive = primitives[name];\n\n                    var material = primitive.material !== undefined ? dependencies.materials[primitive.material] : Utility.createDefaultMaterial();\n\n                    var geometry;\n\n                    var meshNode;\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === undefined) {\n\n                        geometry = new THREE.BufferGeometry();\n\n                        var attributes = primitive.attributes;\n\n                        for (var attributeId in attributes) {\n\n                            var attributeEntry = attributes[attributeId];\n\n                            if (attributeEntry === undefined) return;\n\n                            var bufferAttribute = dependencies.accessors[attributeEntry];\n\n                            switch (attributeId) {\n\n                                case 'POSITION':\n\n                                    geometry.addAttribute('position', bufferAttribute);\n                                    break;\n\n                                case 'NORMAL':\n\n                                    geometry.addAttribute('normal', bufferAttribute);\n                                    break;\n\n                                case 'TEXCOORD_0':\n                                case 'TEXCOORD0':\n                                case 'TEXCOORD':\n\n                                    geometry.addAttribute('uv', bufferAttribute);\n                                    break;\n\n                                case 'TEXCOORD_1':\n\n                                    geometry.addAttribute('uv2', bufferAttribute);\n                                    break;\n\n                                case 'COLOR_0':\n                                case 'COLOR0':\n                                case 'COLOR':\n\n                                    geometry.addAttribute('color', bufferAttribute);\n                                    break;\n\n                                case 'WEIGHTS_0':\n                                case 'WEIGHT': // WEIGHT semantic deprecated.\n\n                                    geometry.addAttribute('skinWeight', bufferAttribute);\n                                    break;\n\n                                case 'JOINTS_0':\n                                case 'JOINT': // JOINT semantic deprecated.\n\n                                    geometry.addAttribute('skinIndex', bufferAttribute);\n                                    break;\n\n                            }\n\n                        }\n\n                        if (primitive.indices !== undefined) {\n\n                            geometry.setIndex(dependencies.accessors[primitive.indices]);\n\n                        }\n\n                        if (material.aoMap !== undefined\n                            && geometry.attributes.uv2 === undefined\n                            && geometry.attributes.uv !== undefined) {\n\n                            console.log('GLTF2Loader: Duplicating UVs to support aoMap.');\n                            geometry.addAttribute('uv2', new THREE.BufferAttribute(geometry.attributes.uv.array, 2));\n\n                        }\n\n                        meshNode = new THREE.Mesh(geometry, material);\n                        meshNode.castShadow = true;\n\n                        if (primitive.targets !== undefined) {\n\n                            var targets = primitive.targets;\n                            var morphAttributes = geometry.morphAttributes;\n\n                            morphAttributes.position = [];\n                            morphAttributes.normal = [];\n\n                            material.morphTargets = true;\n\n                            for (var i = 0, il = targets.length; i < il; i++) {\n\n                                var target = targets[i];\n                                var attributeName = 'morphTarget' + i;\n\n                                var positionAttribute, normalAttribute;\n\n                                if (target.POSITION !== undefined) {\n\n                                    // Three.js morph formula is\n                                    //   position\n                                    //     + weight0 * ( morphTarget0 - position )\n                                    //     + weight1 * ( morphTarget1 - position )\n                                    //     ...\n                                    // while the glTF one is\n                                    //   position\n                                    //     + weight0 * morphTarget0\n                                    //     + weight1 * morphTarget1\n                                    //     ...\n                                    // then adding position to morphTarget.\n                                    // So morphTarget value will depend on mesh's position, then cloning attribute\n                                    // for the case if attribute is shared among two or more meshes.\n\n                                    positionAttribute = dependencies.accessors[target.POSITION].clone();\n                                    var position = geometry.attributes.position;\n\n                                    for (var j = 0, jl = positionAttribute.array.length; j < jl; j++) {\n\n                                        positionAttribute.array[j] += position.array[j];\n\n                                    }\n\n                                } else {\n\n                                    // Copying the original position not to affect the final position.\n                                    // See the formula above.\n                                    positionAttribute = geometry.attributes.position.clone();\n\n                                }\n\n                                if (target.NORMAL !== undefined) {\n\n                                    material.morphNormals = true;\n\n                                    // see target.POSITION's comment\n\n                                    normalAttribute = dependencies.accessors[target.NORMAL].clone();\n                                    var normal = geometry.attributes.normal;\n\n                                    for (var j = 0, jl = normalAttribute.array.length; j < jl; j++) {\n\n                                        normalAttribute.array[j] += normal.array[j];\n\n                                    }\n\n                                } else {\n\n                                    normalAttribute = geometry.attributes.normal.clone();\n\n                                }\n\n                                // TODO: implement\n                                if (target.TANGENT !== undefined) {\n\n                                }\n\n                                positionAttribute.name = attributeName;\n                                normalAttribute.name = attributeName;\n\n                                morphAttributes.position.push(positionAttribute);\n                                morphAttributes.normal.push(normalAttribute);\n\n                            }\n\n                            meshNode.updateMorphTargets();\n\n                            if (mesh.weights !== undefined) {\n\n                                for (var i = 0, il = mesh.weights.length; i < il; i++) {\n\n                                    meshNode.morphTargetInfluences[i] = mesh.weights[i];\n\n                                }\n\n                            }\n\n                        }\n\n                    } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n\n                        geometry = new THREE.BufferGeometry();\n\n                        var attributes = primitive.attributes;\n\n                        for (var attributeId in attributes) {\n\n                            var attributeEntry = attributes[attributeId];\n\n                            if (!attributeEntry) return;\n\n                            var bufferAttribute = dependencies.accessors[attributeEntry];\n\n                            switch (attributeId) {\n\n                                case 'POSITION':\n                                    geometry.addAttribute('position', bufferAttribute);\n                                    break;\n\n                                case 'COLOR_0':\n                                case 'COLOR0':\n                                case 'COLOR':\n                                    geometry.addAttribute('color', bufferAttribute);\n                                    break;\n\n                            }\n\n                        }\n\n                        if (primitive.indices !== undefined) {\n\n                            geometry.setIndex(dependencies.accessors[primitive.indices]);\n\n                            meshNode = new THREE.LineSegments(geometry, material);\n\n                        } else {\n\n                            meshNode = new THREE.Line(geometry, material);\n\n                        }\n\n                    } else {\n\n                        throw new Error(\"Only triangular and line primitives are supported\");\n\n                    }\n\n                    if (geometry.attributes.color !== undefined) {\n\n                        material.vertexColors = THREE.VertexColors;\n                        material.needsUpdate = true;\n\n                    }\n\n                    meshNode.name = (name === \"0\" ? group.name : group.name + name);\n\n                    if (primitive.extras) meshNode.userData = primitive.extras;\n\n                    group.add(meshNode);\n\n                }\n\n                return group;\n\n            });\n\n        });\n    }\n\n    loadCameras(): any {\n        var json = this.json;\n\n        return Utility.each(json.cameras, function (camera) {\n\n            var _camera: any;\n            if (camera.type == \"perspective\" && camera.perspective) {\n\n                var yfov = camera.perspective.yfov;\n                var aspectRatio = camera.perspective.aspectRatio !== undefined ? camera.perspective.aspectRatio : 1;\n\n                // According to COLLADA spec...\n                // aspectRatio = xfov / yfov\n                var xfov = yfov * aspectRatio;\n\n                _camera = new THREE.PerspectiveCamera(THREE.Math.radToDeg(xfov), aspectRatio, camera.perspective.znear || 1, camera.perspective.zfar || 2e6);\n                if (camera.name !== undefined) _camera.name = camera.name;\n\n                if (camera.extras) _camera.userData = camera.extras;\n\n                return _camera;\n\n            } else if (camera.type == \"orthographic\" && camera.orthographic) {\n\n                _camera = new THREE.OrthographicCamera(window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, camera.orthographic.znear, camera.orthographic.zfar);\n                if (camera.name !== undefined) _camera.name = camera.name;\n\n                if (camera.extras) _camera.userData = camera.extras;\n\n                return _camera;\n\n            }\n\n        });\n    }\n\n    loadSkins(): any {\n        var json = this.json;\n\n        return this.withDependencies([\n\n            \"accessors\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.skins, function (skin) {\n\n                var bindShapeMatrix = new THREE.Matrix4();\n\n                if (skin.bindShapeMatrix !== undefined) bindShapeMatrix.fromArray(skin.bindShapeMatrix);\n\n                var _skin = {\n                    bindShapeMatrix: bindShapeMatrix,\n                    joints: skin.joints,\n                    inverseBindMatrices: dependencies.accessors[skin.inverseBindMatrices]\n                };\n\n                return _skin;\n\n            });\n\n        });\n    }\n\n    loadAnimations(): any {\n        var json = this.json;\n\n        return this.withDependencies([\n\n            \"accessors\",\n            \"nodes\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.animations, function (animation, animationId) {\n\n                var tracks = [];\n\n                for (var channelId in animation.channels) {\n\n                    var channel = animation.channels[channelId];\n                    var sampler = animation.samplers[channel.sampler];\n\n                    if (sampler) {\n\n                        var target = channel.target;\n                        var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n                        var input = animation.parameters !== undefined ? animation.parameters[sampler.input] : sampler.input;\n                        var output = animation.parameters !== undefined ? animation.parameters[sampler.output] : sampler.output;\n\n                        var inputAccessor = dependencies.accessors[input];\n                        var outputAccessor = dependencies.accessors[output];\n\n                        var node = dependencies.nodes[name];\n\n                        if (node) {\n\n                            node.updateMatrix();\n                            node.matrixAutoUpdate = true;\n\n                            var TypedKeyframeTrack;\n\n                            switch (PATH_PROPERTIES[target.path]) {\n\n                                case PATH_PROPERTIES.weights:\n\n                                    TypedKeyframeTrack = THREE.NumberKeyframeTrack;\n                                    break;\n\n                                case PATH_PROPERTIES.rotation:\n\n                                    TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n                                    break;\n\n                                case PATH_PROPERTIES.position:\n                                case PATH_PROPERTIES.scale:\n                                default:\n\n                                    TypedKeyframeTrack = THREE.VectorKeyframeTrack;\n                                    break;\n\n                            }\n\n                            var targetName = node.name ? node.name : node.uuid;\n                            var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : THREE.InterpolateLinear;\n\n                            var targetNames = [];\n\n                            if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n\n                                // node should be THREE.Group here but\n                                // PATH_PROPERTIES.weights(morphTargetInfluences) should be\n                                // the property of a mesh object under node.\n                                // So finding targets here.\n\n                                node.traverse(function (object) {\n\n                                    if (object.isMesh === true && object.material.morphTargets === true) {\n\n                                        targetNames.push(object.name ? object.name : object.uuid);\n\n                                    }\n\n                                });\n\n                            } else {\n\n                                targetNames.push(targetName);\n\n                            }\n\n                            // KeyframeTrack.optimize() will modify given 'times' and 'values'\n                            // buffers before creating a truncated copy to keep. Because buffers may\n                            // be reused by other tracks, make copies here.\n                            for (var i = 0, il = targetNames.length; i < il; i++) {\n\n                                tracks.push(new TypedKeyframeTrack(\n                                    targetNames[i] + '.' + PATH_PROPERTIES[target.path],\n                                    THREE.AnimationUtils.arraySlice(inputAccessor.array, 0, undefined),\n                                    THREE.AnimationUtils.arraySlice(outputAccessor.array, 0, undefined),\n                                    interpolation\n                                ));\n\n                            }\n\n                        }\n\n                    }\n\n                }\n\n                var name = animation.name !== undefined ? animation.name : \"animation_\" + animationId;\n\n                return new THREE.AnimationClip(name, undefined, tracks);\n\n            });\n\n        });\n    }\n\n    loadNodes(): any {\n        var json = this.json;\n        var extensions = this.extensions;\n        var scope = this;\n\n        var nodes = json.nodes || [];\n        var skins = json.skins || [];\n\n        // Nothing in the node definition indicates whether it is a Bone or an\n        // Object3D. Use the skins' joint references to mark bones.\n        Array.from(skins).forEach(function (skin: any) {\n\n            skin.joints.forEach(function (id) {\n\n                nodes[id].isBone = true;\n\n            });\n\n        });\n\n        return Utility.each(json.nodes, function (node) {\n\n            var matrix = new THREE.Matrix4();\n\n            var _node = node.isBone === true ? new THREE.Bone(undefined) : new THREE.Object3D();\n\n            if (node.name !== undefined) {\n\n                _node.name = node.name.replace(/\\s/g, '_').replace(/[^\\w-]/g, '');\n\n            }\n\n            if (node.extras) _node.userData = node.extras;\n\n            if (node.matrix !== undefined) {\n\n                matrix.fromArray(node.matrix);\n                _node.applyMatrix(matrix);\n\n            } else {\n\n                if (node.translation !== undefined) {\n\n                    _node.position.fromArray(node.translation);\n\n                }\n\n                if (node.rotation !== undefined) {\n\n                    _node.quaternion.fromArray(node.rotation);\n\n                }\n\n                if (node.scale !== undefined) {\n\n                    _node.scale.fromArray(node.scale);\n\n                }\n\n            }\n\n            return _node;\n\n        }).then(function (__nodes) {\n\n            return scope.withDependencies([\n\n                \"meshes\",\n                \"skins\",\n                \"cameras\"\n\n            ]).then(function (dependencies) {\n\n                return Utility.each(__nodes, function (_node, nodeId) {\n\n                    var node = json.nodes[nodeId];\n\n                    var meshes;\n\n                    if (node.mesh !== undefined) {\n\n                        meshes = [node.mesh];\n\n                    } else if (node.meshes !== undefined) {\n\n                        console.warn('GLTF2Loader: Legacy glTF file detected. Nodes may have no more than 1 mesh.');\n\n                        meshes = node.meshes;\n\n                    }\n\n                    if (meshes !== undefined) {\n\n                        for (var meshId in meshes) {\n\n                            var mesh = meshes[meshId];\n                            var group = dependencies.meshes[mesh];\n\n                            if (group === undefined) {\n\n                                console.warn('GLTF2Loader: Couldn\\'t find node \"' + mesh + '\".');\n                                continue;\n\n                            }\n\n                            for (var childrenId in group.children) {\n\n                                var child = group.children[childrenId];\n\n                                // clone Mesh to add to _node\n\n                                var originalMaterial = child.material;\n                                var originalGeometry = child.geometry;\n                                var originalUserData = child.userData;\n                                var originalName = child.name;\n\n                                var material;\n\n                                if (originalMaterial.isDeferredShaderMaterial) {\n\n                                    originalMaterial = material = originalMaterial.create();\n\n                                } else {\n\n                                    material = originalMaterial;\n\n                                }\n\n                                switch (child.type) {\n\n                                    case 'LineSegments':\n                                        child = new THREE.LineSegments(originalGeometry, material);\n                                        break;\n\n                                    case 'LineLoop':\n                                        child = new THREE.Line(originalGeometry, material);\n                                        break;\n\n                                    case 'Line':\n                                        child = new THREE.Line(originalGeometry, material);\n                                        break;\n\n                                    default:\n                                        child = new THREE.Mesh(originalGeometry, material);\n\n                                }\n\n                                child.castShadow = true;\n                                child.userData = originalUserData;\n                                child.name = originalName;\n\n                                var skinEntry;\n\n                                if (node.skin !== undefined) {\n\n                                    skinEntry = dependencies.skins[node.skin];\n\n                                }\n\n                                // Replace Mesh with SkinnedMesh in library\n                                if (skinEntry) {\n\n                                    var geometry = originalGeometry;\n                                    material = originalMaterial;\n                                    material.skinning = true;\n\n                                    child = new THREE.SkinnedMesh(geometry, material, false);\n                                    child.castShadow = true;\n                                    child.userData = originalUserData;\n                                    child.name = originalName;\n\n                                    var bones = [];\n                                    var boneInverses = [];\n\n                                    for (var i = 0, l = skinEntry.joints.length; i < l; i++) {\n\n                                        var jointId = skinEntry.joints[i];\n                                        var jointNode = __nodes[jointId];\n\n                                        if (jointNode) {\n\n                                            bones.push(jointNode);\n\n                                            var m = skinEntry.inverseBindMatrices.array;\n                                            var mat = new THREE.Matrix4().fromArray(m, i * 16);\n                                            boneInverses.push(mat);\n\n                                        } else {\n\n                                            console.warn(\"WARNING: joint: '\" + jointId + \"' could not be found\");\n\n                                        }\n\n                                    }\n\n                                    child.bind(new THREE.Skeleton(bones, boneInverses, false), skinEntry.bindShapeMatrix);\n\n                                    var buildBoneGraph = function (parentJson, parentObject, property) {\n\n                                        var children = parentJson[property];\n\n                                        if (children === undefined) return;\n\n                                        for (var i = 0, il = children.length; i < il; i++) {\n\n                                            var nodeId = children[i];\n                                            var bone = __nodes[nodeId];\n                                            var boneJson = json.nodes[nodeId];\n\n                                            if (bone !== undefined && bone.isBone === true && boneJson !== undefined) {\n\n                                                parentObject.add(bone);\n                                                buildBoneGraph(boneJson, bone, 'children');\n\n                                            }\n\n                                        }\n\n                                    };\n\n                                    buildBoneGraph(node, child, 'skeletons');\n\n                                }\n\n                                _node.add(child);\n\n                            }\n\n                        }\n\n                    }\n\n                    if (node.camera !== undefined) {\n\n                        var camera = dependencies.cameras[node.camera];\n\n                        _node.add(camera);\n\n                    }\n\n                    if (node.extensions\n                        && node.extensions[EXTENSIONS.KHR_LIGHTS]\n                        && node.extensions[EXTENSIONS.KHR_LIGHTS].light !== undefined) {\n\n                        var lights = extensions[EXTENSIONS.KHR_LIGHTS].lights;\n                        _node.add(lights[node.extensions[EXTENSIONS.KHR_LIGHTS].light]);\n\n                    }\n\n                    return _node;\n\n                });\n\n            });\n\n        });\n    }\n\n    loadScenes() {\n        var json = this.json;\n        var extensions = this.extensions;\n\n        // scene node hierachy builder\n\n        function buildNodeHierachy(nodeId, parentObject, allNodes) {\n\n            var _node = allNodes[nodeId];\n            parentObject.add(_node);\n\n            var node = json.nodes[nodeId];\n\n            if (node.children) {\n\n                var children = node.children;\n\n                for (var i = 0, l = children.length; i < l; i++) {\n\n                    var child = children[i];\n                    buildNodeHierachy(child, _node, allNodes);\n\n                }\n\n            }\n\n        }\n\n        return this.withDependencies([\n\n            \"nodes\"\n\n        ]).then(function (dependencies) {\n\n            return Utility.each(json.scenes, function (scene) {\n\n                var _scene = new THREE.Scene();\n                if (scene.name !== undefined) _scene.name = scene.name;\n\n                if (scene.extras) _scene.userData = scene.extras;\n\n                var nodes = scene.nodes || [];\n\n                for (var i = 0, l = nodes.length; i < l; i++) {\n\n                    var nodeId = nodes[i];\n                    buildNodeHierachy(nodeId, _scene, dependencies.nodes);\n\n                }\n\n                _scene.traverse(function (child: any) {\n\n                    // Register raw material meshes with GLTF2Loader.Shaders\n                    if (child.material && child.material.isRawShaderMaterial) {\n\n                        child.gltfShader = new GLTFShader(child, dependencies.nodes);\n                        child.onBeforeRender = function (renderer, scene, camera) {\n                            this.gltfShader.update(scene, camera);\n                        };\n\n                    }\n\n                    // for Specular-Glossiness.\n                    if (child.material && child.material.type === 'ShaderMaterial') {\n\n                        child.onBeforeRender = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;\n\n                    }\n\n                });\n\n                // Ambient lighting, if present, is always attached to the scene root.\n                if (scene.extensions\n                    && scene.extensions[EXTENSIONS.KHR_LIGHTS]\n                    && scene.extensions[EXTENSIONS.KHR_LIGHTS].light !== undefined) {\n\n                    var lights = extensions[EXTENSIONS.KHR_LIGHTS].lights;\n                    _scene.add(lights[scene.extensions[EXTENSIONS.KHR_LIGHTS].light]);\n\n                }\n\n                return _scene;\n\n            });\n\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/util/GLTF2Loader.ts","module.exports = \"<main> <md-toolbar> <span>UEE Tactical Communications Interface</span> <span class=spacer></span> <button md-raised-button color=primary routerlink=/inventory routerlinkactive=inventoryActive (click)=inventory() skiplocationchange> <i class=material-icons>view_list</i> Inventory </button> <button md-raised-button color=primary routerlink=/simulator routerlinkactive=simulatorActive (click)=simulator() skiplocationchange> Simulate <i class=material-icons>play_circle_outline</i> </button> </md-toolbar> <router-outlet></router-outlet> </main>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 703\n// module chunks = 1","\n        var result = require(\"!!../../node_modules/css-loader/index.js!./app.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 704\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".spacer{flex:1 1 auto}.inventoryActive,.simulatorActive{display:none}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/app/app.component.css\n// module id = 705\n// module chunks = 1","module.exports = \"<div> <div class=ship-size-title>Small &lt;30m</div> <md-grid-list [cols]=\\\"cols | async\\\" guttersize=16px rowheight=300px class=ships-small> <md-grid-tile *ngfor=\\\"let s of filterSize(ships, 'S')\\\"> <ship-card [ship]=s> </ship-card> </md-grid-tile> <md-grid-tile> <button md-fab color=none (click)=addS()><md-icon>add</md-icon></button> </md-grid-tile> </md-grid-list> <div class=ship-size-title>Medium &lt;100m</div> <md-grid-list [cols]=\\\"cols | async\\\" guttersize=16px rowheight=300px class=ships-medium> <md-grid-tile *ngfor=\\\"let s of filterSize(ships, 'M')\\\"> <ship-card [ship]=s> </ship-card> </md-grid-tile> <md-grid-tile> <button md-fab color=none (click)=addM()><md-icon>add</md-icon></button> </md-grid-tile> </md-grid-list> <div class=ship-size-title>Large &gt;100m</div> <md-grid-list [cols]=\\\"cols | async\\\" guttersize=16px rowheight=300px class=ships-large> <md-grid-tile *ngfor=\\\"let s of filterSize(ships, 'L')\\\"> <ship-card [ship]=s> </ship-card> </md-grid-tile> <md-grid-tile> <button md-fab color=none (click)=addL()><md-icon>add</md-icon></button> </md-grid-tile> </md-grid-list> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/inventory/inventory.component.html\n// module id = 706\n// module chunks = 1","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./inventory.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/inventory/inventory.component.css\n// module id = 707\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ships-small{background-color:#ddd}.ships-medium{background-color:#aaa}.ships-large{background-color:#777}.ship-size-title{padding:10px;padding-left:30px;background-color:#333;color:#eee}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/app/inventory/inventory.component.css\n// module id = 708\n// module chunks = 1","import { Component, Input } from '@angular/core';\nimport { Router, NavigationExtras } from '@angular/router';\n\nimport { Ship } from '../ship';\nimport { ShipData } from '../ship-data';\nimport { ShipService } from '../ship.service';\n\n@Component({\n  selector: 'ship-card',\n  template: require('./ship-card.component.html'),\n  styles: [require('./ship-card.component.css')]\n})\nexport class ShipCardComponent {\n  @Input() ship: ShipData;\n\n  constructor(private shipService: ShipService, private router: Router) {\n\n  }\n\n  public delete(event) {\n    this.shipService.deleteShip(this.ship);\n    this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\n  }\n\n  onShipAmountChange() {\n    this.router.navigate([\"inventory\"], this.shipService.getNavigationExtras());\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/inventory/ship-card.component.ts","module.exports = \"<md-card> <md-card-header> <md-card-title class=ship-title>{{ship.origin.type}}</md-card-title> <button md-icon-button [mdmenutriggerfor]=configMenu class=ship-menu> <md-icon>more_vert</md-icon> </button> <md-menu #configmenu> <button md-menu-item (click)=delete($event)> <md-icon>delete</md-icon> <span>Delete</span> </button> </md-menu> </md-card-header> <img md-card-image src={{shipService.getImage(ship.origin)}} class=ship-thumbnail> <md-card-footer class=ship-amount> <div style=display:inline-block;width:200px> <md-slider max=5 min=1 step=1 [(ngmodel)]=ship.amount thumb-label=1 (change)=onShipAmountChange()> </md-slider> <button md-mini-fab color=none style=right:-5px>{{ship.amount}}</button> </div> </md-card-footer> </md-card>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/inventory/ship-card.component.html\n// module id = 710\n// module chunks = 1","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./ship-card.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/inventory/ship-card.component.css\n// module id = 711\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ship-title{width:130px}.ship-thumbnail{width:200px;height:200px}.ship-menu{position:absolute;right:10px;top:10px}.ship-amount{width:0;bottom:0;left:10px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/app/inventory/ship-card.component.css\n// module id = 712\n// module chunks = 1","module.exports = \"<md-card class=ship-card> <md-card-header> <md-card-title> <h3>Add Ship</h3> </md-card-title> </md-card-header> <md-card-content class=ship-content> <form> <md-icon>star_rate</md-icon> <md-select placeholder=\\\"Ship Type\\\" [(ngmodel)]=selectedModel name=ship (change)=onShipTypeChange()> <md-option *ngfor=\\\"let model of filterSize(models)\\\" [value]=model> {{model.type}} </md-option> </md-select> <md-hint [hidden]=!typeExistsError style=color:red> <div> This type of ship already exists in the Inventory </div> </md-hint> </form> <img md-card-image src={{shipService.getImage(selectedModel)}} class=ship-thumbnail *ngif=selectedModel> </md-card-content> <md-card-footer class=ship-actions> <button md-raised-button (click)=goBack() class=ship-action-cancel>Cancel</button> <button md-raised-button (click)=addShip() color=accent>Add</button> </md-card-footer> </md-card>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/inventory/add-ship.component.html\n// module id = 713\n// module chunks = 1","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./add-ship.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/inventory/add-ship.component.css\n// module id = 714\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".ship-card{width:300px;height:380px;margin:0 auto}.ship-content{padding:20px;text-align:center}.ship-thumbnail{margin-top:20px;width:200px;height:200px}.ship-actions{text-align:right}.ship-action-cancel{margin-right:10px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/app/inventory/add-ship.component.css\n// module id = 715\n// module chunks = 1","\nimport * as THREE from 'three';\nimport { Pointer } from './Pointer';\n\nexport class ObjectControls {\n    fixed = new THREE.Vector3(0, 0, 0);\n    displacing = true;\n\n    _DisplaceFocused = null;\n    focused = null;\n    focusedpart = null;\n    _DisplaceMouseOvered = null;\n    mouseovered = null;\n    mouseoveredpart = null;\n\n    _mouse = new THREE.Vector2();\n\n    enabled = true;\n    item = null;\n\n    _intersects = [];\n    intersectsMap;\n    previous = new THREE.Vector3(0, 0, 0);\n\n    moveScene = false;\n    x = 0.0;\n    z = 0.0;\n    lx = 0.0;\n    lz = 0.0;\n    moveMax = 100;\n\n    selected = null;\n    pointer: Pointer = new Pointer(this.camera);\n\n    constructor(private camera, private container, private htmlContainer, private objects, private projectionMap, private scene) {\n\n    }\n\n    activate() {\n        this.container.addEventListener('mousedown', this.onContainerMouseDown, false);\n        this.container.addEventListener('mousemove', this.getMousePos, false);\n        this.container.addEventListener('mouseup', this.onContainerMouseUp, false);\n        this.container.addEventListener('mousewheel', this.onDocumentMouseWheel, false);\n    }\n\n    deactivate() {\n        this.container.removeEventListener('mousedown', this.onContainerMouseDown, false);\n        this.container.removeEventListener('mousemove', this.getMousePos, false);\n        this.container.removeEventListener('mouseup', this.onContainerMouseUp, false);\n        this.container.removeEventListener('mousewheel', this.onDocumentMouseWheel, false);\n    }\n\n    update() {\n        this.onContainerMouseMove();\n    }\n\n    updateAfter(screenWidth, screenHeight) {\n        if (this.selected) {\n            this.pointer.update(this.selected.parent.position.clone(), screenWidth, screenHeight);\n        }\n    }\n\n    move = function () { this.container.style.cursor = 'move' }\n    mouseover = function () {\n        if (this.selected) {\n            this.container.style.cursor = 'move';\n        } else {\n            this.container.style.cursor = 'pointer';\n        }\n    }\n    mouseout = function () { this.container.style.cursor = 'auto' }\n    mouseup = function () { this.container.style.cursor = 'auto' }\n    onclick = function () { }\n\n    returnPrevious() {\n        this._selGetPos(this.previous);\n    }\n\n    setFocus(object) {\n        this._DisplaceFocused = object;\n        this.item = this.objects.indexOf(object);\n        if (object.userData.parent) {\n            this.focused = object.userData.parent;\n            this.focusedpart = this._DisplaceFocused;\n            this.previous.copy(this.focused.parent.position);\n        }\n        else {\n            this.focused = object; this.focusedpart = null;\n            this.previous.copy(this.focused.parent.position);\n        }\n        // selection\n        if (this.focused !== this.selected) {\n            this.focused = null;\n            this.selected = null;\n        }\n    }\n\n    setFocusNull() {\n        this._DisplaceFocused = null;\n        this.focused = null;\n        this.focusedpart = null;\n        this.item = null;\n    }\n\n    select(object) {\n        this._DisplaceMouseOvered = object;\n        if (object.userData.parent) {\n            this.mouseovered = object.userData.parent;\n            this.mouseoveredpart = this._DisplaceMouseOvered;\n        }\n        else {\n            this.mouseovered = object; this.mouseoveredpart = null;\n        }\n    }\n\n    _setSelectNull() {\n        this._DisplaceMouseOvered = null;\n        this.mouseovered = null;\n        this.mouseoveredpart = null;\n    }\n\n    _selGetPos(a) {\n        this.focused.parent.position.copy(a);\n    }\n\n    _rayGet(): THREE.Raycaster {\n        var vector = new THREE.Vector3(this._mouse.x, this._mouse.y, 0.5);\n        vector.unproject(this.camera);\n        var raycaster = new THREE.Raycaster(this.camera.position, vector.sub(this.camera.position).normalize());\n        return raycaster;\n    }\n\n    private getMousePos = (event) => {\n        this.x = event.offsetX == undefined ? event.layerX : event.offsetX;\n        this.z = event.offsetY == undefined ? event.layerY : event.offsetY;\n\n        var rect = this.container.getBoundingClientRect();\n        this._mouse.x = ((this.x) / rect.width) * 2 - 1;\n        this._mouse.y = - ((this.z) / rect.height) * 2 + 1;\n\n        var vector = new THREE.Vector3(this._mouse.x, this._mouse.y, 0.5);\n        return vector;\n    }\n\n    private onContainerMouseDown = (event) => {\n        if (this.selected) {\n            var raycaster = this._rayGet();\n            this._intersects = raycaster.intersectObjects(this.objects, true);\n\n            if (this._intersects.length > 0) {\n                this.setFocus(this._intersects[0].object);\n                this.onclick();\n\n            }\n        }\n        else if (event.ctrlKey) {\n            this.setFocusNull();\n            this.moveScene = true;\n            this.x = event.offsetX == undefined ? event.layerX : event.offsetX;\n            this.z = event.offsetY == undefined ? event.layerY : event.offsetY;\n            this.lx = this.x;\n            this.lz = this.z;\n        }\n    }\n\n    onContainerMouseMove() {\n\n        var raycaster = this._rayGet();\n\n        if (this.focused) {\n            if (this.displacing) {\n                this.intersectsMap = raycaster.intersectObject(this.projectionMap);\n\n                try {\n                    var pos = new THREE.Vector3().copy(this.intersectsMap[0].point);\n                    if (this.fixed.x == 1) { pos.x = this.previous.x };\n                    if (this.fixed.y == 1) { pos.y = this.previous.y };\n                    if (this.fixed.z == 1) { pos.z = this.previous.z };\n                    pos.x -= this.scene.position.x;\n                    pos.z -= this.scene.position.z;\n                    this._selGetPos(pos);\n                }\n                catch (err) { }\n\n                //this.move(); this._selGetPos(this.focused.parent.position);\n            }\n        }\n        else {\n            this._intersects = raycaster.intersectObjects(this.objects, true);\n            if (this._intersects.length > 0) {\n                if (this.mouseovered) {\n                    if (this._DisplaceMouseOvered != this._intersects[0].object) {\n                        this.mouseout();\n                        this.select(this._intersects[0].object);\n                        this.mouseover();\n                    }\n                    else this.mouseover();\n                }\n                else {\n                    this.select(this._intersects[0].object);\n                    this.mouseover();\n                }\n            }\n            else {\n                if (this._DisplaceMouseOvered) { this.mouseout(); this._setSelectNull(); }\n                if (this.moveScene) {\n                    var dx = this.x - this.lx;\n                    var dz = this.z - this.lz;\n                    this.scene.position.x -= dx / 5.0;\n                    if (this.scene.position.x > this.moveMax) {\n                        this.scene.position.x = this.moveMax;\n                    } else if (this.scene.position.x < -this.moveMax) {\n                        this.scene.position.x = -this.moveMax;\n                    }\n                    this.scene.position.z -= dz / 5.0;\n                    if (this.scene.position.z > this.moveMax) {\n                        this.scene.position.z = this.moveMax;\n                    } else if (this.scene.position.z < -this.moveMax) {\n                        this.scene.position.z = -this.moveMax;\n                    }\n                    this.lx = this.x;\n                    this.lz = this.z;\n                }\n            }\n        }\n    }\n\n    private onContainerMouseUp = (event) => {\n        event.preventDefault();\n        this.moveScene = false;\n\n        if (this.focused) {\n            var userData = this.focused.parent.userData;\n            var x = Math.round(this.focused.parent.position.x * 10) / 10;\n            this.focused.parent.position.x = x;\n            userData.shipData.instances[userData.id].position.x = x;\n            var z = Math.round(this.focused.parent.position.z * 10) / 10;\n            this.focused.parent.position.z = z;\n            userData.shipData.instances[userData.id].position.z = z;\n            this.mouseup();\n            this._DisplaceFocused = null;\n            this.focused = null;\n        } else { // selection\n            var raycaster = this._rayGet();\n            this._intersects = raycaster.intersectObjects(this.objects, true);\n\n            if (this._intersects.length > 0) {\n                this.selected = this._intersects[0].object;\n                this.pointer.show(this.htmlContainer, this.scene, this.selected.parent.userData.shipData);\n            } else if (this.selected) {\n                this.hideSelected();\n            }\n        }\n    }\n\n    hideSelected() {\n        this.pointer.hide(this.htmlContainer, this.scene);\n        this.selected = null;\n    }\n\n    private onDocumentMouseWheel = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        var delta;\n        switch (event.deltaMode) {\n            case 2:\n                // Zoom in pages\n                delta = event.deltaY * 0.025;\n                break;\n\n            case 1:\n                // Zoom in lines\n                delta = event.deltaY * 0.01;\n                break;\n\n            default:\n                // undefined, 0, assume pixels\n                delta = event.deltaY * 0.00025;\n                break;\n\n        }\n        var zoomSpeed = 20.0;\n        if (this.camera.zoom > 3.0) {\n            zoomSpeed += 10.0;\n        }\n        this.camera.zoom -= delta * zoomSpeed;\n        if (this.camera.zoom < 1.0) {\n            this.camera.zoom = 1.0;\n        } else if (this.camera.zoom > 7.0) {\n            this.camera.zoom = 7.0;\n        }\n        this.camera.updateProjectionMatrix();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/util/ObjectControls.ts","import { TextLabel } from './TextLabel';\nimport { Vector3, Geometry, Line, LineBasicMaterial, Scene, Object3D } from 'three';\nimport { ShipData } from '../ship-data';\n\nexport class Pointer {\n    title: TextLabel = new TextLabel(this.camera);\n    line: Object3D;\n    visible: boolean = true;\n\n    constructor(private camera) {\n        var geometry = new Geometry();\n        geometry.vertices.push(new Vector3(0, 0, 0));\n        geometry.vertices.push(new Vector3(-3, 10, 0));\n        geometry.vertices.push(new Vector3(-12, 10, 0));\n\n        var l = new Line(geometry, new LineBasicMaterial({ transparent: true, opacity: 0.8, linewidth: 2 }));\n        this.line = new Object3D();\n        this.line.add(l);\n    }\n\n    show(container, scene: Scene, shipData: ShipData) {\n        this.title.setLabel(shipData.origin.type);\n        this.title.htmlElement.style.display = 'block';\n        scene.add(this.line);\n        this.visible = true;\n    }\n\n    hide(container, scene: Scene) {\n        this.visible = false;\n        this.title.htmlElement.style.display = 'none';\n        scene.remove(this.line);\n    }\n\n    update(position: Vector3, screenWidth, screenHeight) {\n        if (this.visible) {\n            this.line.position.x = position.x;\n            this.line.position.y = position.y;\n            this.line.position.z = position.z;\n            this.title.update(position, screenWidth, screenHeight);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/util/Pointer.ts","import { Object3D, Vector3 } from 'three';\n\nexport class TextLabel {\n    htmlElement: any;\n    originalWidth: any;\n\n    constructor(private camera) {\n        this.htmlElement = document.getElementById('text-label');\n    }\n\n    setLabel(label: String) {\n        this.htmlElement.innerHTML = \"<span class=\\\"mat-button-wrapper\\\">\" + label + \"</span>\";\n        this.htmlElement.style.width = 'auto';\n        this.originalWidth = null;\n    }\n\n    update(position: Vector3, screenWidth, screenHeight):any {\n        var coords2d = this._get2DCoords(position, this.camera, screenWidth, screenHeight);\n        this.htmlElement.style.left = coords2d.x + 'px';\n        this.htmlElement.style.top = coords2d.y + 'px';\n        this.htmlElement.style.fontSize = this.camera.zoom*16 + 'px';\n        this.htmlElement.style.height = this.camera.zoom*36 + 'px';\n        if (!this.originalWidth) {\n            this.originalWidth = this.htmlElement.clientWidth;\n        }\n        this.htmlElement.style.width = this.camera.zoom*this.originalWidth + 'px';\n        return coords2d;\n    }\n\n    _get2DCoords(position: Vector3, camera, screenWidth, screenHeight) {\n        var vector = position.project(camera);\n\n        var widthHalf = 0.5 * screenWidth;\n        var heightHalf = 0.5 * screenHeight;\n        vector.x = (vector.x * widthHalf) + widthHalf + 30*camera.zoom;\n        vector.y = - (vector.y * heightHalf) + heightHalf - camera.zoom*(camera.zoom+45);\n        return vector;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/util/TextLabel.ts","module.exports = \"<div> <md-sidenav-container> <md-sidenav mode=over opened=false align=end class=info (close-start)=onCloseShipInfo() #shipinfo> <md-card *ngif=shipData> <md-card-header> <img md-card-avatar src={{shipService.getImage(shipData)}}> <md-card-title>{{shipData.type}}</md-card-title> <md-card-subtitle>Ship Info</md-card-subtitle> </md-card-header> <md-card-content> <md-list> <md-list-item> <md-icon md-list-icon>people</md-icon> <h4 md-line>Max Crew</h4> <p md-line>{{shipData.maxcrew}}</p> </md-list-item> <md-divider></md-divider> <md-list-item> <md-icon md-list-icon>layers</md-icon> <h4 md-line>Cargo Capacity</h4> <p md-line>{{shipData.cargo}}</p> </md-list-item> </md-list> </md-card-content> </md-card> </md-sidenav> <div class=container #container> <button md-mini-fab color=none (click)=saveImage() class=save-image><md-icon>photo_camera</md-icon></button> <button md-mini-fab color=none (click)=toggleFullscreen() class=fullscreen><md-icon>fullscreen</md-icon></button> <button id=text-label md-raised-button color=none (click)=showInfo()></button> <section class=loader [hidden]=loaded> <h3>Loading ...</h3> <md-progress-bar color=primary mode=determinate [value]=loadingProgress> </md-progress-bar> </section> </div> </md-sidenav-container> </div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/simulator/simulator.component.html\n// module id = 719\n// module chunks = 1","import { Injectable } from '@angular/core';\nimport { NavigationExtras, ActivatedRoute } from '@angular/router';\nimport { Vector3 } from 'three';\n\nimport { Ship } from './ship';\nimport { ShipData, ShipDataInstance } from './ship-data';\nimport { SceneService } from './scene.service';\n\n@Injectable()\nexport class ShipService {\n\n    ships: ShipData[] = [];\n    models: Map<string, Ship> = new Map();\n    modelsArray: Ship[] = [\n        {\n            \"type\": \"F7C Hornet\",\n            \"size\": \"S\",\n            \"scale\": 0.003,\n            \"maxcrew\": 1,\n            \"cargo\": 13\n        },\n        {\n            \"type\": \"Caterpillar\",\n            \"size\": \"M\",\n            \"scale\": 0.0025,\n            \"maxcrew\": 5,\n            \"cargo\": 512\n        },\n        {\n            \"type\": \"Reclaimer\",\n            \"size\": \"L\",\n            \"scale\": 0.003,\n            \"maxcrew\": 5,\n            \"cargo\": 6555\n        },\n        {\n            \"type\": \"Aurora LN\",\n            \"size\": \"S\",\n            \"scale\": 0.003,\n            \"maxcrew\": 1,\n            \"cargo\": 13\n        },\n        {\n            \"type\": \"Sabre\",\n            \"size\": \"S\",\n            \"scale\": 0.003,\n            \"maxcrew\": 1,\n            \"cargo\": 0\n        },\n        {\n            \"type\": \"Avenger Stalker\",\n            \"size\": \"S\",\n            \"scale\": 0.03,\n            \"maxcrew\": 1,\n            \"cargo\": 4\n        },\n        {\n            \"type\": \"Herald\",\n            \"size\": \"S\",\n            \"scale\": 0.003,\n            \"maxcrew\": 2,\n            \"cargo\": 0\n        },\n        {\n            \"type\": \"Constellation Andromeda\",\n            \"size\": \"M\",\n            \"scale\": 0.003,\n            \"maxcrew\": 5,\n            \"cargo\": 134\n        },\n        {\n            \"type\": \"Prospector\",\n            \"size\": \"S\",\n            \"scale\": 0.003,\n            \"maxcrew\": 1,\n            \"cargo\": 128\n        },\n        {\n            \"type\": \"Gladius\",\n            \"size\": \"S\",\n            \"scale\": 0.003,\n            \"maxcrew\": 1,\n            \"cargo\": 0\n        }\n    ];\n\n    constructor(private sceneService: SceneService, private route: ActivatedRoute) {\n        for (var model of this.modelsArray) {\n            this.models[model.type] = model;\n        };\n    }\n\n    getImage(ship: Ship): string {\n        return \"assets/ships/thumbnails/\" + ship.type + \".png\";\n    }\n\n    getModel3d(ship: Ship): string {\n        return \"assets/ships/\" + ship.type + \".gltf\";\n    }\n\n    addShip(data: ShipData): boolean {\n        var found: boolean = false;\n        for (var s of this.ships) {\n            if (s.origin.type == data.origin.type) {\n                found = true;\n                break;\n            }\n        };\n        if (found) {\n            return false;\n        } else {\n            this.ships.push(data);\n            this.sceneService.addShipModelFor(this.getModel3d(data.origin), data);\n            return true;\n        }\n    }\n\n    deleteShip(data: ShipData) {\n        let index: number = this.ships.indexOf(data);\n        if (index !== -1) {\n            this.ships.splice(index, 1);\n        }\n    }\n\n    getShips(): Promise<ShipData[]> {\n        if (this.ships.length == 0) {\n            this.route.queryParams.subscribe(queryParams => {\n                let ships: string = queryParams['ships'];\n                if (ships) {\n                    let shipsArray: string[] = ships.split(',');\n                    for (let i = 0; i + 2 < shipsArray.length; i += 3) {\n                        let type = shipsArray[i];\n                        let amount = shipsArray[i + 1];\n                        let instances = shipsArray[i + 2];\n                        let model = this.models[type];\n                        var data = new ShipData();\n                        data.origin.type = type;\n                        data.origin = model;\n                        data.amount = Number(amount);\n                        let instancesArray: string[] = instances.split(';');\n                        for (let j = 0; j < instancesArray.length; j++) {\n                            let positions: string[] = instancesArray[j].split(':');\n                            if (positions.length !== 2) {\n                                break;\n                            }\n                            var sdi = new ShipDataInstance();\n                            sdi.position = new Vector3(Number(positions[0]), 1, Number(positions[1]));\n                            data.add(sdi);\n                        }\n                        this.addShip(data);\n                    }\n                }\n            });\n        }\n        return Promise.resolve(this.ships);\n    }\n\n    getNavigationExtras(): NavigationExtras {\n        var shipsParam = \"\";\n        for (var s of this.ships) {\n            var instances = \"\";\n            s.instances.forEach(i => {\n                instances += i.position.x + \":\" + i.position.z + \";\"\n            });\n            shipsParam += s.origin.type + \",\" + String(s.amount) + \",\" + instances + \",\";\n        };\n        let navigationExtras: NavigationExtras = {\n            queryParams: { 'ships': shipsParam },\n            queryParamsHandling: 'merge'\n        };\n        return navigationExtras;\n    }\n\n    getModels(): Promise<Ship[]> {\n        return Promise.resolve(this.modelsArray);\n    }\n\n    getShipsSlowly(): Promise<ShipData[]> {\n        return new Promise(resolve => {\n            // Simulate server latency with 2 second delay\n            setTimeout(() => resolve(this.getShips()), 2000);\n        });\n    }\n\n    getShip(type: string): Promise<ShipData> {\n        return this.getShips()\n            .then(ships => ships.find(ship => ship.origin.type === type));\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/ship.service.ts","\n        var result = require(\"!!../../../node_modules/css-loader/index.js!./simulator.component.css\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/simulator/simulator.component.css\n// module id = 720\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \".container{text-align:center}.loader{padding:20px}#text-label{display:none;position:absolute;z-index:1;width:auto;white-space:nowrap;min-height:40px}#text-label:hover{background-color:#888}.info{background-color:rgba(22,255,255,.1);color:#fff;padding:20px}.save-image{right:70px}.fullscreen,.save-image{position:absolute;top:20px;z-index:1}.fullscreen{right:20px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./src/app/simulator/simulator.component.css\n// module id = 721\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { AddShipComponent } from './inventory/add-ship.component';\nimport { SimulatorComponent } from './simulator/simulator.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/inventory', pathMatch: 'full' },\n    {\n        path: 'inventory',\n        children: [\n            {\n                path: '',\n                component: InventoryComponent\n            },\n            {\n                path: 'add-ship/:size',\n                component: AddShipComponent\n            }\n        ]\n    },\n    { path: 'simulator', component: SimulatorComponent },\n    { path: '**', component: InventoryComponent }\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n// WEBPACK FOOTER //\n// ./node_modules/angular2-template-loader!./src/app/app-routing.module.ts","/*! Hammer.JS - v2.0.7 - 2016-04-22\n * http://hammerjs.github.io/\n *\n * Copyright (c) 2016 Jorik Tangelder;\n * Licensed under the MIT license */\n(function(window, document, exportName, undefined) {\n  'use strict';\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = document.createElement('div');\n\nvar TYPE_FUNCTION = 'function';\n\nvar round = Math.round;\nvar abs = Math.abs;\nvar now = Date.now;\n\n/**\n * set a timeout with a given scope\n * @param {Function} fn\n * @param {Number} timeout\n * @param {Object} context\n * @returns {number}\n */\nfunction setTimeoutContext(fn, timeout, context) {\n    return setTimeout(bindFn(fn, context), timeout);\n}\n\n/**\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\nfunction invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n        each(arg, context[fn], context);\n        return true;\n    }\n    return false;\n}\n\n/**\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n    var i;\n\n    if (!obj) {\n        return;\n    }\n\n    if (obj.forEach) {\n        obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n        i = 0;\n        while (i < obj.length) {\n            iterator.call(context, obj[i], i, obj);\n            i++;\n        }\n    } else {\n        for (i in obj) {\n            obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n        }\n    }\n}\n\n/**\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n    var deprecationMessage = 'DEPRECATED METHOD: ' + name + '\\n' + message + ' AT \\n';\n    return function() {\n        var e = new Error('get-stack-trace');\n        var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '')\n            .replace(/^\\s+at\\s+/gm, '')\n            .replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n\n        var log = window.console && (window.console.warn || window.console.log);\n        if (log) {\n            log.call(window.console, deprecationMessage, stack);\n        }\n        return method.apply(this, arguments);\n    };\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\nif (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== undefined && source !== null) {\n                for (var nextKey in source) {\n                    if (source.hasOwnProperty(nextKey)) {\n                        output[nextKey] = source[nextKey];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n} else {\n    assign = Object.assign;\n}\n\n/**\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\nvar extend = deprecate(function extend(dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n        if (!merge || (merge && dest[keys[i]] === undefined)) {\n            dest[keys[i]] = src[keys[i]];\n        }\n        i++;\n    }\n    return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\nvar merge = deprecate(function merge(dest, src) {\n    return extend(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\nfunction inherit(child, base, properties) {\n    var baseP = base.prototype,\n        childP;\n\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n\n    if (properties) {\n        assign(childP, properties);\n    }\n}\n\n/**\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n    return function boundFn() {\n        return fn.apply(context, arguments);\n    };\n}\n\n/**\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\nfunction boolOrFn(val, args) {\n    if (typeof val == TYPE_FUNCTION) {\n        return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n}\n\n/**\n * use the val2 when val1 is undefined\n * @param {*} val1\n * @param {*} val2\n * @returns {*}\n */\nfunction ifUndefined(val1, val2) {\n    return (val1 === undefined) ? val2 : val1;\n}\n\n/**\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction addEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.addEventListener(type, handler, false);\n    });\n}\n\n/**\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\nfunction removeEventListeners(target, types, handler) {\n    each(splitStr(types), function(type) {\n        target.removeEventListener(type, handler, false);\n    });\n}\n\n/**\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent(node, parent) {\n    while (node) {\n        if (node == parent) {\n            return true;\n        }\n        node = node.parentNode;\n    }\n    return false;\n}\n\n/**\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n    return str.indexOf(find) > -1;\n}\n\n/**\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n    return str.trim().split(/\\s+/g);\n}\n\n/**\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n        return src.indexOf(find);\n    } else {\n        var i = 0;\n        while (i < src.length) {\n            if ((findByKey && src[i][findByKey] == find) || (!findByKey && src[i] === find)) {\n                return i;\n            }\n            i++;\n        }\n        return -1;\n    }\n}\n\n/**\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\nfunction uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n\n    while (i < src.length) {\n        var val = key ? src[i][key] : src[i];\n        if (inArray(values, val) < 0) {\n            results.push(src[i]);\n        }\n        values[i] = val;\n        i++;\n    }\n\n    if (sort) {\n        if (!key) {\n            results = results.sort();\n        } else {\n            results = results.sort(function sortUniqueArray(a, b) {\n                return a[key] > b[key];\n            });\n        }\n    }\n\n    return results;\n}\n\n/**\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\nfunction prefixed(obj, property) {\n    var prefix, prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n        prefix = VENDOR_PREFIXES[i];\n        prop = (prefix) ? prefix + camelProp : property;\n\n        if (prop in obj) {\n            return prop;\n        }\n        i++;\n    }\n    return undefined;\n}\n\n/**\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n    return _uniqueId++;\n}\n\n/**\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return (doc.defaultView || doc.parentWindow || window);\n}\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n\nvar SUPPORT_TOUCH = ('ontouchstart' in window);\nvar SUPPORT_POINTER_EVENTS = prefixed(window, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\n\nvar COMPUTE_INTERVAL = 25;\n\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\n\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\n\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\nfunction Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget;\n\n    // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n    this.domHandler = function(ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n            self.handler(ev);\n        }\n    };\n\n    this.init();\n\n}\n\nInput.prototype = {\n    /**\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n    handler: function() { },\n\n    /**\n     * bind the events\n     */\n    init: function() {\n        this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    },\n\n    /**\n     * unbind the events\n     */\n    destroy: function() {\n        this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n        this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n        this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    }\n};\n\n/**\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\nfunction createInputInstance(manager) {\n    var Type;\n    var inputClass = manager.options.inputClass;\n\n    if (inputClass) {\n        Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n        Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n        Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n        Type = MouseInput;\n    } else {\n        Type = TouchMouseInput;\n    }\n    return new (Type)(manager, inputHandler);\n}\n\n/**\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\nfunction inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = (eventType & INPUT_START && (pointersLen - changedPointersLen === 0));\n    var isFinal = (eventType & (INPUT_END | INPUT_CANCEL) && (pointersLen - changedPointersLen === 0));\n\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n\n    if (isFirst) {\n        manager.session = {};\n    }\n\n    // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n    input.eventType = eventType;\n\n    // compute scale, rotation etc\n    computeInputData(manager, input);\n\n    // emit secret event\n    manager.emit('hammer.input', input);\n\n    manager.recognize(input);\n    manager.session.prevInput = input;\n}\n\n/**\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\nfunction computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length;\n\n    // store the first input to calculate the distance and direction\n    if (!session.firstInput) {\n        session.firstInput = simpleCloneInputData(input);\n    }\n\n    // to compute scale and rotation we need to store the multiple touches\n    if (pointersLength > 1 && !session.firstMultiple) {\n        session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n        session.firstMultiple = false;\n    }\n\n    var firstInput = session.firstInput;\n    var firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = (abs(overallVelocity.x) > abs(overallVelocity.y)) ? overallVelocity.x : overallVelocity.y;\n\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n\n    input.maxPointers = !session.prevInput ? input.pointers.length : ((input.pointers.length >\n        session.prevInput.maxPointers) ? input.pointers.length : session.prevInput.maxPointers);\n\n    computeIntervalInputData(session, input);\n\n    // find the correct target\n    var target = manager.element;\n    if (hasParent(input.srcEvent.target, target)) {\n        target = input.srcEvent.target;\n    }\n    input.target = target;\n}\n\nfunction computeDeltaXY(session, input) {\n    var center = input.center;\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n        prevDelta = session.prevDelta = {\n            x: prevInput.deltaX || 0,\n            y: prevInput.deltaY || 0\n        };\n\n        offset = session.offsetDelta = {\n            x: center.x,\n            y: center.y\n        };\n    }\n\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\nfunction computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input,\n        deltaTime = input.timeStamp - last.timeStamp,\n        velocity, velocityX, velocityY, direction;\n\n    if (input.eventType != INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n        var deltaX = input.deltaX - last.deltaX;\n        var deltaY = input.deltaY - last.deltaY;\n\n        var v = getVelocity(deltaTime, deltaX, deltaY);\n        velocityX = v.x;\n        velocityY = v.y;\n        velocity = (abs(v.x) > abs(v.y)) ? v.x : v.y;\n        direction = getDirection(deltaX, deltaY);\n\n        session.lastInterval = input;\n    } else {\n        // use latest velocity info if it doesn't overtake a minimum period\n        velocity = last.velocity;\n        velocityX = last.velocityX;\n        velocityY = last.velocityY;\n        direction = last.direction;\n    }\n\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n}\n\n/**\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\nfunction simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n        pointers[i] = {\n            clientX: round(input.pointers[i].clientX),\n            clientY: round(input.pointers[i].clientY)\n        };\n        i++;\n    }\n\n    return {\n        timeStamp: now(),\n        pointers: pointers,\n        center: getCenter(pointers),\n        deltaX: input.deltaX,\n        deltaY: input.deltaY\n    };\n}\n\n/**\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\nfunction getCenter(pointers) {\n    var pointersLength = pointers.length;\n\n    // no need to loop when only one touch\n    if (pointersLength === 1) {\n        return {\n            x: round(pointers[0].clientX),\n            y: round(pointers[0].clientY)\n        };\n    }\n\n    var x = 0, y = 0, i = 0;\n    while (i < pointersLength) {\n        x += pointers[i].clientX;\n        y += pointers[i].clientY;\n        i++;\n    }\n\n    return {\n        x: round(x / pointersLength),\n        y: round(y / pointersLength)\n    };\n}\n\n/**\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n    return {\n        x: x / deltaTime || 0,\n        y: y / deltaTime || 0\n    };\n}\n\n/**\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\nfunction getDirection(x, y) {\n    if (x === y) {\n        return DIRECTION_NONE;\n    }\n\n    if (abs(x) >= abs(y)) {\n        return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\n/**\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\nfunction getDistance(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n\n    return Math.sqrt((x * x) + (y * y));\n}\n\n/**\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\nfunction getAngle(p1, p2, props) {\n    if (!props) {\n        props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]],\n        y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\nfunction getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\nfunction getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\nvar MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n};\n\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n\n/**\n * Mouse events input\n * @constructor\n * @extends Input\n */\nfunction MouseInput() {\n    this.evEl = MOUSE_ELEMENT_EVENTS;\n    this.evWin = MOUSE_WINDOW_EVENTS;\n\n    this.pressed = false; // mousedown state\n\n    Input.apply(this, arguments);\n}\n\ninherit(MouseInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function MEhandler(ev) {\n        var eventType = MOUSE_INPUT_MAP[ev.type];\n\n        // on start we want to have the left mouse button down\n        if (eventType & INPUT_START && ev.button === 0) {\n            this.pressed = true;\n        }\n\n        if (eventType & INPUT_MOVE && ev.which !== 1) {\n            eventType = INPUT_END;\n        }\n\n        // mouse must be down\n        if (!this.pressed) {\n            return;\n        }\n\n        if (eventType & INPUT_END) {\n            this.pressed = false;\n        }\n\n        this.callback(this.manager, eventType, {\n            pointers: [ev],\n            changedPointers: [ev],\n            pointerType: INPUT_TYPE_MOUSE,\n            srcEvent: ev\n        });\n    }\n});\n\nvar POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n};\n\n// in IE10 the pointer types is defined as an enum\nvar IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n};\n\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel';\n\n// IE10 has prefixed support, and case-sensitive\nif (window.MSPointerEvent && !window.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n\n/**\n * Pointer events input\n * @constructor\n * @extends Input\n */\nfunction PointerEventInput() {\n    this.evEl = POINTER_ELEMENT_EVENTS;\n    this.evWin = POINTER_WINDOW_EVENTS;\n\n    Input.apply(this, arguments);\n\n    this.store = (this.manager.session.pointerEvents = []);\n}\n\ninherit(PointerEventInput, Input, {\n    /**\n     * handle mouse events\n     * @param {Object} ev\n     */\n    handler: function PEhandler(ev) {\n        var store = this.store;\n        var removePointer = false;\n\n        var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n        var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n        var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n\n        var isTouch = (pointerType == INPUT_TYPE_TOUCH);\n\n        // get index of the event in the store\n        var storeIndex = inArray(store, ev.pointerId, 'pointerId');\n\n        // start and mouse must be down\n        if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n            if (storeIndex < 0) {\n                store.push(ev);\n                storeIndex = store.length - 1;\n            }\n        } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n            removePointer = true;\n        }\n\n        // it not found, so the pointer hasn't been down (so it's probably a hover)\n        if (storeIndex < 0) {\n            return;\n        }\n\n        // update the event in the store\n        store[storeIndex] = ev;\n\n        this.callback(this.manager, eventType, {\n            pointers: store,\n            changedPointers: [ev],\n            pointerType: pointerType,\n            srcEvent: ev\n        });\n\n        if (removePointer) {\n            // remove from the store\n            store.splice(storeIndex, 1);\n        }\n    }\n});\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Touch events input\n * @constructor\n * @extends Input\n */\nfunction SingleTouchInput() {\n    this.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    this.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    this.started = false;\n\n    Input.apply(this, arguments);\n}\n\ninherit(SingleTouchInput, Input, {\n    handler: function TEhandler(ev) {\n        var type = SINGLE_TOUCH_INPUT_MAP[ev.type];\n\n        // should we handle the touch events?\n        if (type === INPUT_START) {\n            this.started = true;\n        }\n\n        if (!this.started) {\n            return;\n        }\n\n        var touches = normalizeSingleTouches.call(this, ev, type);\n\n        // when done, reset the started state\n        if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n            this.started = false;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n        all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n\n    return [all, changed];\n}\n\nvar TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n};\n\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n\n/**\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\nfunction TouchInput() {\n    this.evTarget = TOUCH_TARGET_EVENTS;\n    this.targetIds = {};\n\n    Input.apply(this, arguments);\n}\n\ninherit(TouchInput, Input, {\n    handler: function MTEhandler(ev) {\n        var type = TOUCH_INPUT_MAP[ev.type];\n        var touches = getTouches.call(this, ev, type);\n        if (!touches) {\n            return;\n        }\n\n        this.callback(this.manager, type, {\n            pointers: touches[0],\n            changedPointers: touches[1],\n            pointerType: INPUT_TYPE_TOUCH,\n            srcEvent: ev\n        });\n    }\n});\n\n/**\n * @this {TouchInput}\n * @param {Object} ev\n * @param {Number} type flag\n * @returns {undefined|Array} [all, changed]\n */\nfunction getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds;\n\n    // when there is only one touch, the process can be simplified\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n        targetIds[allTouches[0].identifier] = true;\n        return [allTouches, allTouches];\n    }\n\n    var i,\n        targetTouches,\n        changedTouches = toArray(ev.changedTouches),\n        changedTargetTouches = [],\n        target = this.target;\n\n    // get target touches from touches\n    targetTouches = allTouches.filter(function(touch) {\n        return hasParent(touch.target, target);\n    });\n\n    // collect touches\n    if (type === INPUT_START) {\n        i = 0;\n        while (i < targetTouches.length) {\n            targetIds[targetTouches[i].identifier] = true;\n            i++;\n        }\n    }\n\n    // filter changed touches to only contain touches that exist in the collected target ids\n    i = 0;\n    while (i < changedTouches.length) {\n        if (targetIds[changedTouches[i].identifier]) {\n            changedTargetTouches.push(changedTouches[i]);\n        }\n\n        // cleanup removed touches\n        if (type & (INPUT_END | INPUT_CANCEL)) {\n            delete targetIds[changedTouches[i].identifier];\n        }\n        i++;\n    }\n\n    if (!changedTargetTouches.length) {\n        return;\n    }\n\n    return [\n        // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n        uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true),\n        changedTargetTouches\n    ];\n}\n\n/**\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction TouchMouseInput() {\n    Input.apply(this, arguments);\n\n    var handler = bindFn(this.handler, this);\n    this.touch = new TouchInput(this.manager, handler);\n    this.mouse = new MouseInput(this.manager, handler);\n\n    this.primaryTouch = null;\n    this.lastTouches = [];\n}\n\ninherit(TouchMouseInput, Input, {\n    /**\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n    handler: function TMEhandler(manager, inputEvent, inputData) {\n        var isTouch = (inputData.pointerType == INPUT_TYPE_TOUCH),\n            isMouse = (inputData.pointerType == INPUT_TYPE_MOUSE);\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n        }\n\n        // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n        if (isTouch) {\n            recordTouches.call(this, inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(this, inputData)) {\n            return;\n        }\n\n        this.callback(manager, inputEvent, inputData);\n    },\n\n    /**\n     * remove the event listeners\n     */\n    destroy: function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n    }\n});\n\nfunction recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n        this.primaryTouch = eventData.changedPointers[0].identifier;\n        setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        setLastTouch.call(this, eventData);\n    }\n}\n\nfunction setLastTouch(eventData) {\n    var touch = eventData.changedPointers[0];\n\n    if (touch.identifier === this.primaryTouch) {\n        var lastTouch = {x: touch.clientX, y: touch.clientY};\n        this.lastTouches.push(lastTouch);\n        var lts = this.lastTouches;\n        var removeLastTouch = function() {\n            var i = lts.indexOf(lastTouch);\n            if (i > -1) {\n                lts.splice(i, 1);\n            }\n        };\n        setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n}\n\nfunction isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX, y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n        var t = this.lastTouches[i];\n        var dx = Math.abs(x - t.x), dy = Math.abs(y - t.y);\n        if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n\n// magical touchAction value\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\n/**\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\nfunction TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n}\n\nTouchAction.prototype = {\n    /**\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n    set: function(value) {\n        // find out the touch-action by the event handlers\n        if (value == TOUCH_ACTION_COMPUTE) {\n            value = this.compute();\n        }\n\n        if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n            this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n        }\n        this.actions = value.toLowerCase().trim();\n    },\n\n    /**\n     * just re-set the touchAction value\n     */\n    update: function() {\n        this.set(this.manager.options.touchAction);\n    },\n\n    /**\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n    compute: function() {\n        var actions = [];\n        each(this.manager.recognizers, function(recognizer) {\n            if (boolOrFn(recognizer.options.enable, [recognizer])) {\n                actions = actions.concat(recognizer.getTouchAction());\n            }\n        });\n        return cleanTouchActions(actions.join(' '));\n    },\n\n    /**\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n    preventDefaults: function(input) {\n        var srcEvent = input.srcEvent;\n        var direction = input.offsetDirection;\n\n        // if the touch action did prevented once this session\n        if (this.manager.session.prevented) {\n            srcEvent.preventDefault();\n            return;\n        }\n\n        var actions = this.actions;\n        var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n        var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n        var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n        if (hasNone) {\n            //do not prevent defaults if this is a tap gesture\n\n            var isTapPointer = input.pointers.length === 1;\n            var isTapMovement = input.distance < 2;\n            var isTapTouchTime = input.deltaTime < 250;\n\n            if (isTapPointer && isTapMovement && isTapTouchTime) {\n                return;\n            }\n        }\n\n        if (hasPanX && hasPanY) {\n            // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n            return;\n        }\n\n        if (hasNone ||\n            (hasPanY && direction & DIRECTION_HORIZONTAL) ||\n            (hasPanX && direction & DIRECTION_VERTICAL)) {\n            return this.preventSrc(srcEvent);\n        }\n    },\n\n    /**\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n    preventSrc: function(srcEvent) {\n        this.manager.session.prevented = true;\n        srcEvent.preventDefault();\n    }\n};\n\n/**\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\nfunction cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y);\n\n    // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n    if (hasPanX && hasPanY) {\n        return TOUCH_ACTION_NONE;\n    }\n\n    // pan-x OR pan-y\n    if (hasPanX || hasPanY) {\n        return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    }\n\n    // manipulation\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n        return TOUCH_ACTION_MANIPULATION;\n    }\n\n    return TOUCH_ACTION_AUTO;\n}\n\nfunction getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n        return false;\n    }\n    var touchMap = {};\n    var cssSupports = window.CSS && window.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function(val) {\n\n        // If css.supports is not supported but there is native touch-action assume it supports\n        // all values. This is the case for IE 10 and 11.\n        touchMap[val] = cssSupports ? window.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n}\n\n/**\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\nfunction Recognizer(options) {\n    this.options = assign({}, this.defaults, options || {});\n\n    this.id = uniqueId();\n\n    this.manager = null;\n\n    // default is enable true\n    this.options.enable = ifUndefined(this.options.enable, true);\n\n    this.state = STATE_POSSIBLE;\n\n    this.simultaneous = {};\n    this.requireFail = [];\n}\n\nRecognizer.prototype = {\n    /**\n     * @virtual\n     * @type {Object}\n     */\n    defaults: {},\n\n    /**\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // also update the touchAction, in case something changed about the directions/enabled state\n        this.manager && this.manager.touchAction.update();\n        return this;\n    },\n\n    /**\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    recognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n            return this;\n        }\n\n        var simultaneous = this.simultaneous;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (!simultaneous[otherRecognizer.id]) {\n            simultaneous[otherRecognizer.id] = otherRecognizer;\n            otherRecognizer.recognizeWith(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRecognizeWith: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        delete this.simultaneous[otherRecognizer.id];\n        return this;\n    },\n\n    /**\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    requireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n            return this;\n        }\n\n        var requireFail = this.requireFail;\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        if (inArray(requireFail, otherRecognizer) === -1) {\n            requireFail.push(otherRecognizer);\n            otherRecognizer.requireFailure(this);\n        }\n        return this;\n    },\n\n    /**\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n    dropRequireFailure: function(otherRecognizer) {\n        if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n            return this;\n        }\n\n        otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n        var index = inArray(this.requireFail, otherRecognizer);\n        if (index > -1) {\n            this.requireFail.splice(index, 1);\n        }\n        return this;\n    },\n\n    /**\n     * has require failures boolean\n     * @returns {boolean}\n     */\n    hasRequireFailures: function() {\n        return this.requireFail.length > 0;\n    },\n\n    /**\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n    canRecognizeWith: function(otherRecognizer) {\n        return !!this.simultaneous[otherRecognizer.id];\n    },\n\n    /**\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n    emit: function(input) {\n        var self = this;\n        var state = this.state;\n\n        function emit(event) {\n            self.manager.emit(event, input);\n        }\n\n        // 'panstart' and 'panmove'\n        if (state < STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n\n        emit(self.options.event); // simple 'eventName' events\n\n        if (input.additionalEvent) { // additional event(panleft, panright, pinchin, pinchout...)\n            emit(input.additionalEvent);\n        }\n\n        // panend and pancancel\n        if (state >= STATE_ENDED) {\n            emit(self.options.event + stateStr(state));\n        }\n    },\n\n    /**\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n    tryEmit: function(input) {\n        if (this.canEmit()) {\n            return this.emit(input);\n        }\n        // it's failing anyway\n        this.state = STATE_FAILED;\n    },\n\n    /**\n     * can we emit?\n     * @returns {boolean}\n     */\n    canEmit: function() {\n        var i = 0;\n        while (i < this.requireFail.length) {\n            if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n                return false;\n            }\n            i++;\n        }\n        return true;\n    },\n\n    /**\n     * update the recognizer\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        // make a new copy of the inputData\n        // so we can change the inputData without messing up the other recognizers\n        var inputDataClone = assign({}, inputData);\n\n        // is is enabled and allow recognizing?\n        if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n            this.reset();\n            this.state = STATE_FAILED;\n            return;\n        }\n\n        // reset when we've reached the end\n        if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n            this.state = STATE_POSSIBLE;\n        }\n\n        this.state = this.process(inputDataClone);\n\n        // the recognizer has recognized a gesture\n        // so trigger an event\n        if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n            this.tryEmit(inputDataClone);\n        }\n    },\n\n    /**\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {Const} STATE\n     */\n    process: function(inputData) { }, // jshint ignore:line\n\n    /**\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n    getTouchAction: function() { },\n\n    /**\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n    reset: function() { }\n};\n\n/**\n * get a usable string, used as event postfix\n * @param {Const} state\n * @returns {String} state\n */\nfunction stateStr(state) {\n    if (state & STATE_CANCELLED) {\n        return 'cancel';\n    } else if (state & STATE_ENDED) {\n        return 'end';\n    } else if (state & STATE_CHANGED) {\n        return 'move';\n    } else if (state & STATE_BEGAN) {\n        return 'start';\n    }\n    return '';\n}\n\n/**\n * direction cons to string\n * @param {Const} direction\n * @returns {String}\n */\nfunction directionStr(direction) {\n    if (direction == DIRECTION_DOWN) {\n        return 'down';\n    } else if (direction == DIRECTION_UP) {\n        return 'up';\n    } else if (direction == DIRECTION_LEFT) {\n        return 'left';\n    } else if (direction == DIRECTION_RIGHT) {\n        return 'right';\n    }\n    return '';\n}\n\n/**\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n        return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n}\n\n/**\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\nfunction AttrRecognizer() {\n    Recognizer.apply(this, arguments);\n}\n\ninherit(AttrRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof AttrRecognizer\n     */\n    defaults: {\n        /**\n         * @type {Number}\n         * @default 1\n         */\n        pointers: 1\n    },\n\n    /**\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n    attrTest: function(input) {\n        var optionPointers = this.options.pointers;\n        return optionPointers === 0 || input.pointers.length === optionPointers;\n    },\n\n    /**\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n    process: function(input) {\n        var state = this.state;\n        var eventType = input.eventType;\n\n        var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n        var isValid = this.attrTest(input);\n\n        // on cancel input and we've recognized before, return STATE_CANCELLED\n        if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n            return state | STATE_CANCELLED;\n        } else if (isRecognized || isValid) {\n            if (eventType & INPUT_END) {\n                return state | STATE_ENDED;\n            } else if (!(state & STATE_BEGAN)) {\n                return STATE_BEGAN;\n            }\n            return state | STATE_CHANGED;\n        }\n        return STATE_FAILED;\n    }\n});\n\n/**\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PanRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n\n    this.pX = null;\n    this.pY = null;\n}\n\ninherit(PanRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PanRecognizer\n     */\n    defaults: {\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n    },\n\n    getTouchAction: function() {\n        var direction = this.options.direction;\n        var actions = [];\n        if (direction & DIRECTION_HORIZONTAL) {\n            actions.push(TOUCH_ACTION_PAN_Y);\n        }\n        if (direction & DIRECTION_VERTICAL) {\n            actions.push(TOUCH_ACTION_PAN_X);\n        }\n        return actions;\n    },\n\n    directionTest: function(input) {\n        var options = this.options;\n        var hasMoved = true;\n        var distance = input.distance;\n        var direction = input.direction;\n        var x = input.deltaX;\n        var y = input.deltaY;\n\n        // lock to axis?\n        if (!(direction & options.direction)) {\n            if (options.direction & DIRECTION_HORIZONTAL) {\n                direction = (x === 0) ? DIRECTION_NONE : (x < 0) ? DIRECTION_LEFT : DIRECTION_RIGHT;\n                hasMoved = x != this.pX;\n                distance = Math.abs(input.deltaX);\n            } else {\n                direction = (y === 0) ? DIRECTION_NONE : (y < 0) ? DIRECTION_UP : DIRECTION_DOWN;\n                hasMoved = y != this.pY;\n                distance = Math.abs(input.deltaY);\n            }\n        }\n        input.direction = direction;\n        return hasMoved && distance > options.threshold && direction & options.direction;\n    },\n\n    attrTest: function(input) {\n        return AttrRecognizer.prototype.attrTest.call(this, input) &&\n            (this.state & STATE_BEGAN || (!(this.state & STATE_BEGAN) && this.directionTest(input)));\n    },\n\n    emit: function(input) {\n\n        this.pX = input.deltaX;\n        this.pY = input.deltaY;\n\n        var direction = directionStr(input.direction);\n\n        if (direction) {\n            input.additionalEvent = this.options.event + direction;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\nfunction PinchRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(PinchRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    },\n\n    emit: function(input) {\n        if (input.scale !== 1) {\n            var inOut = input.scale < 1 ? 'in' : 'out';\n            input.additionalEvent = this.options.event + inOut;\n        }\n        this._super.emit.call(this, input);\n    }\n});\n\n/**\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\nfunction PressRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    this._timer = null;\n    this._input = null;\n}\n\ninherit(PressRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PressRecognizer\n     */\n    defaults: {\n        event: 'press',\n        pointers: 1,\n        time: 251, // minimal time of the pointer to be pressed\n        threshold: 9 // a minimal movement is ok, but keep it low\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_AUTO];\n    },\n\n    process: function(input) {\n        var options = this.options;\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTime = input.deltaTime > options.time;\n\n        this._input = input;\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (!validMovement || !validPointers || (input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime)) {\n            this.reset();\n        } else if (input.eventType & INPUT_START) {\n            this.reset();\n            this._timer = setTimeoutContext(function() {\n                this.state = STATE_RECOGNIZED;\n                this.tryEmit();\n            }, options.time, this);\n        } else if (input.eventType & INPUT_END) {\n            return STATE_RECOGNIZED;\n        }\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function(input) {\n        if (this.state !== STATE_RECOGNIZED) {\n            return;\n        }\n\n        if (input && (input.eventType & INPUT_END)) {\n            this.manager.emit(this.options.event + 'up', input);\n        } else {\n            this._input.timeStamp = now();\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction RotateRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(RotateRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof RotateRecognizer\n     */\n    defaults: {\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_NONE];\n    },\n\n    attrTest: function(input) {\n        return this._super.attrTest.call(this, input) &&\n            (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    }\n});\n\n/**\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\nfunction SwipeRecognizer() {\n    AttrRecognizer.apply(this, arguments);\n}\n\ninherit(SwipeRecognizer, AttrRecognizer, {\n    /**\n     * @namespace\n     * @memberof SwipeRecognizer\n     */\n    defaults: {\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n    },\n\n    getTouchAction: function() {\n        return PanRecognizer.prototype.getTouchAction.call(this);\n    },\n\n    attrTest: function(input) {\n        var direction = this.options.direction;\n        var velocity;\n\n        if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n            velocity = input.overallVelocity;\n        } else if (direction & DIRECTION_HORIZONTAL) {\n            velocity = input.overallVelocityX;\n        } else if (direction & DIRECTION_VERTICAL) {\n            velocity = input.overallVelocityY;\n        }\n\n        return this._super.attrTest.call(this, input) &&\n            direction & input.offsetDirection &&\n            input.distance > this.options.threshold &&\n            input.maxPointers == this.options.pointers &&\n            abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    },\n\n    emit: function(input) {\n        var direction = directionStr(input.offsetDirection);\n        if (direction) {\n            this.manager.emit(this.options.event + direction, input);\n        }\n\n        this.manager.emit(this.options.event, input);\n    }\n});\n\n/**\n * A tap is ecognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\nfunction TapRecognizer() {\n    Recognizer.apply(this, arguments);\n\n    // previous time and center,\n    // used for tap counting\n    this.pTime = false;\n    this.pCenter = false;\n\n    this._timer = null;\n    this._input = null;\n    this.count = 0;\n}\n\ninherit(TapRecognizer, Recognizer, {\n    /**\n     * @namespace\n     * @memberof PinchRecognizer\n     */\n    defaults: {\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300, // max time between the multi-tap taps\n        time: 250, // max time of the pointer to be down (like finger on the screen)\n        threshold: 9, // a minimal movement is ok, but keep it low\n        posThreshold: 10 // a multi-tap can be a bit off the initial position\n    },\n\n    getTouchAction: function() {\n        return [TOUCH_ACTION_MANIPULATION];\n    },\n\n    process: function(input) {\n        var options = this.options;\n\n        var validPointers = input.pointers.length === options.pointers;\n        var validMovement = input.distance < options.threshold;\n        var validTouchTime = input.deltaTime < options.time;\n\n        this.reset();\n\n        if ((input.eventType & INPUT_START) && (this.count === 0)) {\n            return this.failTimeout();\n        }\n\n        // we only allow little movement\n        // and we've reached an end event, so a tap is possible\n        if (validMovement && validTouchTime && validPointers) {\n            if (input.eventType != INPUT_END) {\n                return this.failTimeout();\n            }\n\n            var validInterval = this.pTime ? (input.timeStamp - this.pTime < options.interval) : true;\n            var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n\n            this.pTime = input.timeStamp;\n            this.pCenter = input.center;\n\n            if (!validMultiTap || !validInterval) {\n                this.count = 1;\n            } else {\n                this.count += 1;\n            }\n\n            this._input = input;\n\n            // if tap count matches we have recognized it,\n            // else it has began recognizing...\n            var tapCount = this.count % options.taps;\n            if (tapCount === 0) {\n                // no failing requirements, immediately trigger the tap event\n                // or wait as long as the multitap interval to trigger\n                if (!this.hasRequireFailures()) {\n                    return STATE_RECOGNIZED;\n                } else {\n                    this._timer = setTimeoutContext(function() {\n                        this.state = STATE_RECOGNIZED;\n                        this.tryEmit();\n                    }, options.interval, this);\n                    return STATE_BEGAN;\n                }\n            }\n        }\n        return STATE_FAILED;\n    },\n\n    failTimeout: function() {\n        this._timer = setTimeoutContext(function() {\n            this.state = STATE_FAILED;\n        }, this.options.interval, this);\n        return STATE_FAILED;\n    },\n\n    reset: function() {\n        clearTimeout(this._timer);\n    },\n\n    emit: function() {\n        if (this.state == STATE_RECOGNIZED) {\n            this._input.tapCount = this.count;\n            this.manager.emit(this.options.event, this._input);\n        }\n    }\n});\n\n/**\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Hammer(element, options) {\n    options = options || {};\n    options.recognizers = ifUndefined(options.recognizers, Hammer.defaults.preset);\n    return new Manager(element, options);\n}\n\n/**\n * @const {string}\n */\nHammer.VERSION = '2.0.7';\n\n/**\n * default settings\n * @namespace\n */\nHammer.defaults = {\n    /**\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n\n    /**\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n\n    /**\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n\n    /**\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n\n    /**\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n\n    /**\n     * Default recognizer setup when calling `Hammer()`\n     * When creating a new Manager these will be skipped.\n     * @type {Array}\n     */\n    preset: [\n        // RecognizerClass, options, [recognizeWith, ...], [requireFailure, ...]\n        [RotateRecognizer, {enable: false}],\n        [PinchRecognizer, {enable: false}, ['rotate']],\n        [SwipeRecognizer, {direction: DIRECTION_HORIZONTAL}],\n        [PanRecognizer, {direction: DIRECTION_HORIZONTAL}, ['swipe']],\n        [TapRecognizer],\n        [TapRecognizer, {event: 'doubletap', taps: 2}, ['tap']],\n        [PressRecognizer]\n    ],\n\n    /**\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n        /**\n         * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userSelect: 'none',\n\n        /**\n         * Disable the Windows Phone grippers when pressing an element.\n         * @type {String}\n         * @default 'none'\n         */\n        touchSelect: 'none',\n\n        /**\n         * Disables the default callout shown when you touch and hold a touch target.\n         * On iOS, when you touch and hold a touch target such as a link, Safari displays\n         * a callout containing information about the link. This property allows you to disable that callout.\n         * @type {String}\n         * @default 'none'\n         */\n        touchCallout: 'none',\n\n        /**\n         * Specifies whether zooming is enabled. Used by IE10>\n         * @type {String}\n         * @default 'none'\n         */\n        contentZooming: 'none',\n\n        /**\n         * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n         * @type {String}\n         * @default 'none'\n         */\n        userDrag: 'none',\n\n        /**\n         * Overrides the highlight color shown when the user taps a link or a JavaScript\n         * clickable element in iOS. This property obeys the alpha value, if specified.\n         * @type {String}\n         * @default 'rgba(0,0,0,0)'\n         */\n        tapHighlightColor: 'rgba(0,0,0,0)'\n    }\n};\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n\n/**\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\nfunction Manager(element, options) {\n    this.options = assign({}, Hammer.defaults, options || {});\n\n    this.options.inputTarget = this.options.inputTarget || element;\n\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n\n    toggleCssProps(this, true);\n\n    each(this.options.recognizers, function(item) {\n        var recognizer = this.add(new (item[0])(item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n}\n\nManager.prototype = {\n    /**\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n    set: function(options) {\n        assign(this.options, options);\n\n        // Options that need a little more setup\n        if (options.touchAction) {\n            this.touchAction.update();\n        }\n        if (options.inputTarget) {\n            // Clean up existing event listeners and reinitialize\n            this.input.destroy();\n            this.input.target = options.inputTarget;\n            this.input.init();\n        }\n        return this;\n    },\n\n    /**\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n    stop: function(force) {\n        this.session.stopped = force ? FORCED_STOP : STOP;\n    },\n\n    /**\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n    recognize: function(inputData) {\n        var session = this.session;\n        if (session.stopped) {\n            return;\n        }\n\n        // run the touch-action polyfill\n        this.touchAction.preventDefaults(inputData);\n\n        var recognizer;\n        var recognizers = this.recognizers;\n\n        // this holds the recognizer that is being recognized.\n        // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n        // if no recognizer is detecting a thing, it is set to `null`\n        var curRecognizer = session.curRecognizer;\n\n        // reset when the last recognizer is recognized\n        // or when we're in a new session\n        if (!curRecognizer || (curRecognizer && curRecognizer.state & STATE_RECOGNIZED)) {\n            curRecognizer = session.curRecognizer = null;\n        }\n\n        var i = 0;\n        while (i < recognizers.length) {\n            recognizer = recognizers[i];\n\n            // find out if we are allowed try to recognize the input for this one.\n            // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n            // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n            //      that is being recognized.\n            // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n            //      this can be setup with the `recognizeWith()` method on the recognizer.\n            if (session.stopped !== FORCED_STOP && ( // 1\n                    !curRecognizer || recognizer == curRecognizer || // 2\n                    recognizer.canRecognizeWith(curRecognizer))) { // 3\n                recognizer.recognize(inputData);\n            } else {\n                recognizer.reset();\n            }\n\n            // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n            // current active recognizer. but only if we don't already have an active recognizer\n            if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n                curRecognizer = session.curRecognizer = recognizer;\n            }\n            i++;\n        }\n    },\n\n    /**\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n    get: function(recognizer) {\n        if (recognizer instanceof Recognizer) {\n            return recognizer;\n        }\n\n        var recognizers = this.recognizers;\n        for (var i = 0; i < recognizers.length; i++) {\n            if (recognizers[i].options.event == recognizer) {\n                return recognizers[i];\n            }\n        }\n        return null;\n    },\n\n    /**\n     * add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n    add: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'add', this)) {\n            return this;\n        }\n\n        // remove existing\n        var existing = this.get(recognizer.options.event);\n        if (existing) {\n            this.remove(existing);\n        }\n\n        this.recognizers.push(recognizer);\n        recognizer.manager = this;\n\n        this.touchAction.update();\n        return recognizer;\n    },\n\n    /**\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n    remove: function(recognizer) {\n        if (invokeArrayArg(recognizer, 'remove', this)) {\n            return this;\n        }\n\n        recognizer = this.get(recognizer);\n\n        // let's make sure this recognizer exists\n        if (recognizer) {\n            var recognizers = this.recognizers;\n            var index = inArray(recognizers, recognizer);\n\n            if (index !== -1) {\n                recognizers.splice(index, 1);\n                this.touchAction.update();\n            }\n        }\n\n        return this;\n    },\n\n    /**\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n    on: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n        if (handler === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            handlers[event] = handlers[event] || [];\n            handlers[event].push(handler);\n        });\n        return this;\n    },\n\n    /**\n     * unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n    off: function(events, handler) {\n        if (events === undefined) {\n            return;\n        }\n\n        var handlers = this.handlers;\n        each(splitStr(events), function(event) {\n            if (!handler) {\n                delete handlers[event];\n            } else {\n                handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n            }\n        });\n        return this;\n    },\n\n    /**\n     * emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n    emit: function(event, data) {\n        // we also want to trigger dom events\n        if (this.options.domEvents) {\n            triggerDomEvent(event, data);\n        }\n\n        // no handlers, so skip it all\n        var handlers = this.handlers[event] && this.handlers[event].slice();\n        if (!handlers || !handlers.length) {\n            return;\n        }\n\n        data.type = event;\n        data.preventDefault = function() {\n            data.srcEvent.preventDefault();\n        };\n\n        var i = 0;\n        while (i < handlers.length) {\n            handlers[i](data);\n            i++;\n        }\n    },\n\n    /**\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n    destroy: function() {\n        this.element && toggleCssProps(this, false);\n\n        this.handlers = {};\n        this.session = {};\n        this.input.destroy();\n        this.element = null;\n    }\n};\n\n/**\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\nfunction toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n        return;\n    }\n    var prop;\n    each(manager.options.cssProps, function(value, name) {\n        prop = prefixed(element.style, name);\n        if (add) {\n            manager.oldCssProps[prop] = element.style[prop];\n            element.style[prop] = value;\n        } else {\n            element.style[prop] = manager.oldCssProps[prop] || '';\n        }\n    });\n    if (!add) {\n        manager.oldCssProps = {};\n    }\n}\n\n/**\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\nfunction triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent('Event');\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n}\n\nassign(Hammer, {\n    INPUT_START: INPUT_START,\n    INPUT_MOVE: INPUT_MOVE,\n    INPUT_END: INPUT_END,\n    INPUT_CANCEL: INPUT_CANCEL,\n\n    STATE_POSSIBLE: STATE_POSSIBLE,\n    STATE_BEGAN: STATE_BEGAN,\n    STATE_CHANGED: STATE_CHANGED,\n    STATE_ENDED: STATE_ENDED,\n    STATE_RECOGNIZED: STATE_RECOGNIZED,\n    STATE_CANCELLED: STATE_CANCELLED,\n    STATE_FAILED: STATE_FAILED,\n\n    DIRECTION_NONE: DIRECTION_NONE,\n    DIRECTION_LEFT: DIRECTION_LEFT,\n    DIRECTION_RIGHT: DIRECTION_RIGHT,\n    DIRECTION_UP: DIRECTION_UP,\n    DIRECTION_DOWN: DIRECTION_DOWN,\n    DIRECTION_HORIZONTAL: DIRECTION_HORIZONTAL,\n    DIRECTION_VERTICAL: DIRECTION_VERTICAL,\n    DIRECTION_ALL: DIRECTION_ALL,\n\n    Manager: Manager,\n    Input: Input,\n    TouchAction: TouchAction,\n\n    TouchInput: TouchInput,\n    MouseInput: MouseInput,\n    PointerEventInput: PointerEventInput,\n    TouchMouseInput: TouchMouseInput,\n    SingleTouchInput: SingleTouchInput,\n\n    Recognizer: Recognizer,\n    AttrRecognizer: AttrRecognizer,\n    Tap: TapRecognizer,\n    Pan: PanRecognizer,\n    Swipe: SwipeRecognizer,\n    Pinch: PinchRecognizer,\n    Rotate: RotateRecognizer,\n    Press: PressRecognizer,\n\n    on: addEventListeners,\n    off: removeEventListeners,\n    each: each,\n    merge: merge,\n    extend: extend,\n    assign: assign,\n    inherit: inherit,\n    bindFn: bindFn,\n    prefixed: prefixed\n});\n\n// this prevents errors when Hammer is loaded in the presence of an AMD\n//  style loader but by script tag, not by the loader.\nvar freeGlobal = (typeof window !== 'undefined' ? window : (typeof self !== 'undefined' ? self : {})); // jshint ignore:line\nfreeGlobal.Hammer = Hammer;\n\nif (typeof define === 'function' && define.amd) {\n    define(function() {\n        return Hammer;\n    });\n} else if (typeof module != 'undefined' && module.exports) {\n    module.exports = Hammer;\n} else {\n    window[exportName] = Hammer;\n}\n\n})(window, document, 'Hammer');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/hammerjs/hammer.js\n// module id = 723\n// module chunks = 1"],"sourceRoot":""}